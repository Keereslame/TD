{"remainingRequest":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Temperature_Line_ECharts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Temperature_Line_ECharts.vue","mtime":1594631601726},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KaW1wb3J0IEVDaGFydHMgZnJvbSAidnVlLWVjaGFydHMiOwppbXBvcnQgImVjaGFydHMvbGliL2NoYXJ0L2xpbmUiOwppbXBvcnQgSW5mbHV4IGZyb20gImluZmx1eCI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICAidi1jaGFydCI6IEVDaGFydHMKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBvcHRpb246IHsKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ3RlbXBzJywKICAgICAgICAgIGRhdGE6IFtdCiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgZGF0YTogWzgyMCwgOTMyLCA5MDEsIDkzNCwgMTI5MCwgMTMzMCwgMTMyMF0sCiAgICAgICAgICB0eXBlOiAnbGluZScKICAgICAgICB9XQogICAgICB9LAogICAgICBjbGllbnQ6IG5ldyBJbmZsdXguSW5mbHV4REIoewogICAgICAgIGhvc3Q6ICdsb2NhbGhvc3QnLAogICAgICAgIGRhdGFiYXNlOiAndHRuX2xvd2ltcGFjdF9mb29kJywKICAgICAgICBwb3J0OiA4MDg2CiAgICAgIH0pLAogICAgICB0ZW1wZXJhdHVyZV9oaWdoOiBbXQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmNsaWVudC5xdWVyeVJhdygnc2VsZWN0IFRlbXBDX1NIVCBmcm9tIHR0bl9saHQ2NScpLnRoZW4oZnVuY3Rpb24gKHJhd0RhdGEpIHsKICAgICAgLy90aGlzLnRlbXBlcmF0dXJlX2hpZ2ggPSByZXN1bHRzOwogICAgICBjb25zb2xlLmxvZyhyYXdEYXRhKTsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["Temperature_Line_ECharts.vue"],"names":[],"mappings":";;;;AAKA,OAAA,OAAA,MAAA,aAAA;AACA,OAAA,wBAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,eAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,IAAA,EAAA;AAFA,SADA;AAKA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SALA;AAQA,QAAA,MAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA;AARA,OADA;AAcA,MAAA,MAAA,EAAA,IAAA,MAAA,CAAA,QAAA,CAAA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,QAAA,EAAA,oBAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,CAdA;AAmBA,MAAA,gBAAA,EAAA;AAnBA,KAAA;AAqBA,GA1BA;AA2BA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,iCAAA,EAAA,IAAA,CAAA,UAAA,OAAA,EAAA;AACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA,KAHA;AAIA;AAhCA,CAAA","sourcesContent":["<template>\n    <v-chart :options=\"option\"></v-chart>\n</template>\n\n<script>\n    import ECharts from \"vue-echarts\";\n    import \"echarts/lib/chart/line\";\n    import Influx from \"influx\";\n\n    export default {\n        components: {\n            \"v-chart\": ECharts\n        },\n        data() {\n            return {\n                option : {\n                    xAxis: {\n                        type: 'temps',\n                        data: []\n                    },\n                    yAxis: {\n                        type: 'value'\n                    },\n                    series: [{\n                        data: [820, 932, 901, 934, 1290, 1330, 1320],\n                        type: 'line'\n                    }]\n                },\n                client: new Influx.InfluxDB({\n                    host: 'localhost',\n                    database: 'ttn_lowimpact_food',\n                    port:8086\n                }),\n                temperature_high: []\n            }\n        },\n        created: function() {\n            this.client.queryRaw('select TempC_SHT from ttn_lht65').then(rawData => {\n                //this.temperature_high = results;\n                console.log(rawData);\n            })\n        }\n    }\n\n</script>\n\n<style scoped>\n    .echarts{\n        max-width: 100%;\n        height: 400px;\n    }\n</style>\n"],"sourceRoot":"src/components"}]}