{"remainingRequest":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Temp_lht65.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Temp_lht65.vue","mtime":1594932911778},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovL2ltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKaW1wb3J0IEluZmx1eCBmcm9tICJpbmZsdXgiOwppbXBvcnQgVGVtcF9saW5lX2hpZ2hjaGFydHMgZnJvbSAiLi9UZW1wX2xpbmVfaGlnaGNoYXJ0cyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVGVtcF9saHQ2NSIsCiAgY29tcG9uZW50czogewogICAgVGVtcF9saW5lX2hpZ2hjaGFydHM6IFRlbXBfbGluZV9oaWdoY2hhcnRzCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2xpZW50OiBuZXcgSW5mbHV4LkluZmx1eERCKHsKICAgICAgICBob3N0OiAnMTkyLjE2OC4xLjcwJywKICAgICAgICBkYXRhYmFzZTogJ2xvd2ltcGFjdF9mb29kJywKICAgICAgICBwb3J0OiA4MDg2CiAgICAgIH0pLAogICAgICB0ZW1wX3NlcmllczogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBsb2FkRGF0YUNoYXJ0OiBmdW5jdGlvbiBsb2FkRGF0YUNoYXJ0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHRlbXBlcmF0dXJlX1NlcmllMTsKICAgICAgdmFyIHRlbXBlcmF0dXJlX1NlcmllMjsKICAgICAgdmFyIHF1ZXJ5X3RlbXBTZXJpZTEgPSAnU0VMRUNUIFRlbXBDX1NIVCBGUk9NIHR0bl9saHQ2NSBXSEVSRSB0aW1lID4gbm93KCkgLSA3ZCc7CiAgICAgIHZhciBxdWVyeV90ZW1wU2VyaWUyID0gJ1NFTEVDVCBUZW1wQ19EUyBGUk9NIHR0bl9saHQ2NSBXSEVSRSB0aW1lID4gbm93KCkgLSA3ZCc7IC8vY29uc29sZS5sb2coIlF1ZXJ5OiIgKyBxdWVyeV90ZW1wU2VyaWUxKQoKICAgICAgUHJvbWlzZS5hbGwoW3RoaXMuY2xpZW50LnF1ZXJ5KHF1ZXJ5X3RlbXBTZXJpZTEpXSkudGhlbihmdW5jdGlvbiAocmVzdWx0cykgewogICAgICAgIC8vY29uc29sZS5sb2coIlJlc3VsdCIpCiAgICAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7IC8vY29uc29sZS5sb2cocmVzdWx0c1swXS5sZW5ndGgpCgogICAgICAgIHRlbXBlcmF0dXJlX1NlcmllMSA9IHJlc3VsdHNbMF0ubWFwKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAvL3ZhciBkYXRlID0gbmV3IERhdGUoKG1vbWVudChhLnRpbWUpLnVuaXgoKSkgKiAxMDAwKQogICAgICAgICAgLy9jb25zb2xlLmxvZyhhLnRpbWUpCiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICB4OiBhLnRpbWUsCiAgICAgICAgICAgIC8vKG1vbWVudChhLnRpbWUpLnVuaXgoKSkqMTAwMCwKICAgICAgICAgICAgeTogcGFyc2VGbG9hdChhLlRlbXBDX1NIVCkKICAgICAgICAgIH07CiAgICAgICAgfSk7CiAgICAgICAgUHJvbWlzZS5hbGwoW190aGlzLmNsaWVudC5xdWVyeShxdWVyeV90ZW1wU2VyaWUyKV0pLnRoZW4oZnVuY3Rpb24gKHJlc3VsdHMpIHsKICAgICAgICAgIHRlbXBlcmF0dXJlX1NlcmllMiA9IHJlc3VsdHNbMF0ubWFwKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgIC8vIHZhciBkYXRlID0gbmV3IERhdGUoKG1vbWVudChhLnRpbWUpLnVuaXgoKSkgKiAxMDAwKQogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgIHg6IGEudGltZSwKICAgICAgICAgICAgICAvLyhtb21lbnQoYS50aW1lKS51bml4KCkpKjEwMDAsCiAgICAgICAgICAgICAgeTogcGFyc2VGbG9hdChhLlRlbXBDX0RTKQogICAgICAgICAgICB9OwogICAgICAgICAgfSk7CiAgICAgICAgICBjb25zb2xlLmxvZygiVGVtcGVyYXR1cmUgc2VyaWUgMSIpOwogICAgICAgICAgY29uc29sZS5sb2codGVtcGVyYXR1cmVfU2VyaWUxKTsKICAgICAgICAgIHZhciBmaW5hbGVfc2VyaWVzID0gW3sKICAgICAgICAgICAgbmFtZTogJ1RlbXDDqXJhdHVyZSBkdSBib8OudGllcicsCiAgICAgICAgICAgIGRhdGE6IHRlbXBlcmF0dXJlX1NlcmllMQogICAgICAgICAgfSwgewogICAgICAgICAgICBuYW1lOiAnVGVtcMOpcmF0dXJlIGRlIGxhIHNvbmRlJywKICAgICAgICAgICAgZGF0YTogdGVtcGVyYXR1cmVfU2VyaWUyCiAgICAgICAgICB9XTsKICAgICAgICAgIGNvbnNvbGUubG9nKCJTZXJpZSBmaW5hbGUiKTsKICAgICAgICAgIGNvbnNvbGUubG9nKGZpbmFsZV9zZXJpZXMpOwogICAgICAgICAgX3RoaXMudGVtcF9zZXJpZXMgPSBmaW5hbGVfc2VyaWVzOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICB9KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5sb2FkRGF0YUNoYXJ0KCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICB0aGlzLmxvYWREYXRhQ2hhcnQoKTsKICAgIH0uYmluZCh0aGlzKSwgMzAwMDAwKTsgLy9yZWZyZXNoIHF1ZXJ5IHRvdXRlcyBsZXMgNW1pbgogIH0KfTs="},{"version":3,"sources":["Temp_lht65.vue"],"names":[],"mappings":";;;;;;;;;;;;AASA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,oBAAA,MAAA,wBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,oBAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IAAA,MAAA,CAAA,QAAA,CAAA;AACA,QAAA,IAAA,EAAA,cADA;AAEA,QAAA,QAAA,EAAA,gBAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,CADA;AAMA,MAAA,WAAA,EAAA;AANA,KAAA;AAQA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,aAAA,EAAA,yBAAA;AAAA;;AACA,UAAA,kBAAA;AACA,UAAA,kBAAA;AACA,UAAA,gBAAA,GAAA,yDAAA;AACA,UAAA,gBAAA,GAAA,wDAAA,CAJA,CAKA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,CACA,KAAA,MAAA,CAAA,KAAA,CAAA,gBAAA,CADA,CAAA,EAEA,IAFA,CAEA,UAAA,OAAA,EAAA;AACA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAFA,CAGA;;AACA,QAAA,kBAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA;AACA;AACA,iBAAA;AACA,YAAA,CAAA,EAAA,CAAA,CAAA,IADA;AACA;AACA,YAAA,CAAA,EAAA,UAAA,CAAA,CAAA,CAAA,SAAA;AAFA,WAAA;AAIA,SAPA,CAAA;AAQA,QAAA,OAAA,CAAA,GAAA,CAAA,CACA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,gBAAA,CADA,CAAA,EAEA,IAFA,CAEA,UAAA,OAAA,EAAA;AACA,UAAA,kBAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA;AACA,mBAAA;AACA,cAAA,CAAA,EAAA,CAAA,CAAA,IADA;AACA;AACA,cAAA,CAAA,EAAA,UAAA,CAAA,CAAA,CAAA,QAAA;AAFA,aAAA;AAIA,WANA,CAAA;AAQA,UAAA,OAAA,CAAA,GAAA,CAAA,qBAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,kBAAA;AACA,cAAA,aAAA,GAAA,CAAA;AACA,YAAA,IAAA,EAAA,wBADA;AAEA,YAAA,IAAA,EAAA;AAFA,WAAA,EAGA;AACA,YAAA,IAAA,EAAA,yBADA;AAEA,YAAA,IAAA,EAAA;AAFA,WAHA,CAAA;AAOA,UAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,aAAA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,aAAA;AACA,SAvBA,EAuBA,KAvBA,CAuBA,UAAA,KAAA;AAAA,iBAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA;AAAA,SAvBA;AAwBA,OAtCA,EAsCA,KAtCA,CAsCA,UAAA,KAAA;AAAA,eAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA;AAAA,OAtCA;AAuCA;AA9CA,GAfA;AA+DA,EAAA,OA/DA,qBA+DA;AACA,SAAA,aAAA;AACA,GAjEA;AAkEA,EAAA,OAlEA,qBAkEA;AACA,IAAA,WAAA,CAAA,YAAA;AACA,WAAA,aAAA;AACA,KAFA,CAEA,IAFA,CAEA,IAFA,CAAA,EAEA,MAFA,CAAA,CADA,CAGA;AACA;AAtEA,CAAA","sourcesContent":["<template>\n    <div class=\"mt-3\">\n        <b-card border-variant=\"light\" header=\"Température de la chambre\" class=\"text-center\">\n            <Temp_line_highcharts :temperature-series=\"temp_series\"/>\n        </b-card>\n    </div>\n</template>\n\n<script>\n    //import moment from 'moment';\n    import Influx from \"influx\";\n    import Temp_line_highcharts from \"./Temp_line_highcharts\";\n\n    export default {\n        name: \"Temp_lht65\",\n        components: {\n            Temp_line_highcharts\n        },\n        data() {\n            return {\n                client: new Influx.InfluxDB({\n                    host: '192.168.1.70',\n                    database: 'lowimpact_food',\n                    port:8086\n                }),\n                temp_series: [],\n            }\n        },\n        methods: {\n            loadDataChart: function () {\n                let temperature_Serie1;\n                let temperature_Serie2;\n                let query_tempSerie1 = 'SELECT TempC_SHT FROM ttn_lht65 WHERE time > now() - 7d';\n                let query_tempSerie2 = 'SELECT TempC_DS FROM ttn_lht65 WHERE time > now() - 7d';\n                //console.log(\"Query:\" + query_tempSerie1)\n                Promise.all([\n                    this.client.query(query_tempSerie1),\n                ]).then(results => {\n                    //console.log(\"Result\")\n                    console.log(results)\n                    //console.log(results[0].length)\n                    temperature_Serie1 = results[0].map(a => {\n                        //var date = new Date((moment(a.time).unix()) * 1000)\n                        //console.log(a.time)\n                        return {\n                            x: a.time,//(moment(a.time).unix())*1000,\n                            y: parseFloat(a.TempC_SHT)\n                        };\n                    });\n                    Promise.all([\n                        this.client.query(query_tempSerie2),\n                    ]).then(results => {\n                        temperature_Serie2 = results[0].map(a => {\n                           // var date = new Date((moment(a.time).unix()) * 1000)\n                            return {\n                                x:a.time,//(moment(a.time).unix())*1000,\n                                y: parseFloat(a.TempC_DS)\n                            };\n                        });\n\n                        console.log(\"Temperature serie 1\")\n                        console.log(temperature_Serie1)\n                        let finale_series = [{\n                            name: 'Température du boîtier',\n                            data: temperature_Serie1\n                        }, {\n                            name: 'Température de la sonde',\n                            data: temperature_Serie2\n                        }]\n                        console.log(\"Serie finale\")\n                        console.log(finale_series)\n                        this.temp_series = finale_series\n                    }).catch(error => console.log(error))\n                }).catch(error => console.log(error))\n            }\n        },\n        created() {\n            this.loadDataChart()\n        },\n        mounted() {\n            setInterval(function(){\n                this.loadDataChart()\n            }.bind(this), 300000) //refresh query toutes les 5min\n        }\n    }\n</script>\n\n<style scoped>\n    .card-header{\n        background-color: lightcoral;\n        text-align: left;\n    }\n\n</style>"],"sourceRoot":"src/components"}]}