{"remainingRequest":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Humidity_lht65.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Humidity_lht65.vue","mtime":1595232008975},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovL2ltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKaW1wb3J0IEluZmx1eCBmcm9tICJpbmZsdXgiOwppbXBvcnQgSHVtaWRpdHlfbGluZV9oaWdoY2hhcnRzIGZyb20gIi4vSHVtaWRpdHlfbGluZV9oaWdoY2hhcnRzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJIdW1pZGl0eV9saHQ2NSIsCiAgY29tcG9uZW50czogewogICAgSHVtaWRpdHlfbGluZV9oaWdoY2hhcnRzOiBIdW1pZGl0eV9saW5lX2hpZ2hjaGFydHMKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjbGllbnQ6IG5ldyBJbmZsdXguSW5mbHV4REIoewogICAgICAgIC8vaG9zdDogJzE5Mi4xNjguMS43MCcsIC8vIG1haXNvbgogICAgICAgIGhvc3Q6ICcxNTMuMTA5LjcuMzAnLAogICAgICAgIC8vw6ljb2xlCiAgICAgICAgZGF0YWJhc2U6ICdsb3dpbXBhY3RfZm9vZCcsCiAgICAgICAgcG9ydDogODA4NgogICAgICB9KSwKICAgICAgaHVtX3NlcmllczogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBsb2FkRGF0YUNoYXJ0OiBmdW5jdGlvbiBsb2FkRGF0YUNoYXJ0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGh1bWlkaXR5X1NlcmllMTsKICAgICAgdmFyIHF1ZXJ5X2h1bVNlcmllMSA9ICdTRUxFQ1QgSHVtX1NIVCBGUk9NIHR0bl9saHQ2NSBXSEVSRSB0aW1lID4gbm93KCkgLSA3aCc7IC8vY29uc29sZS5sb2coIlF1ZXJ5OiIgKyBxdWVyeV9odW1TZXJpZTEpCgogICAgICBQcm9taXNlLmFsbChbdGhpcy5jbGllbnQucXVlcnkocXVlcnlfaHVtU2VyaWUxKV0pLnRoZW4oZnVuY3Rpb24gKHJlc3VsdHMpIHsKICAgICAgICAvL2NvbnNvbGUubG9nKCJSZXN1bHQiKQogICAgICAgIC8vY29uc29sZS5sb2cocmVzdWx0cykKICAgICAgICAvL2NvbnNvbGUubG9nKHJlc3VsdHNbMF0ubGVuZ3RoKQogICAgICAgIGh1bWlkaXR5X1NlcmllMSA9IHJlc3VsdHNbMF0ubWFwKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAvL3ZhciBkYXRlID0gbmV3IERhdGUoKyhtb21lbnQoYS50aW1lKS51bml4KCkpICogMTAwMCkKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHg6IGEudGltZSwKICAgICAgICAgICAgeTogcGFyc2VGbG9hdChhLkh1bV9TSFQpCiAgICAgICAgICB9OwogICAgICAgIH0pOyAvL2NvbnNvbGUubG9nKCJIdW1pZGl0eSBzZXJpZSAxIikKICAgICAgICAvL2NvbnNvbGUubG9nKGh1bWlkaXR5X1NlcmllMSkKCiAgICAgICAgdmFyIGZpbmFsZV9zZXJpZXMgPSB7CiAgICAgICAgICBuYW1lOiAnSHVtaWRpdMOpIGR1IGJvw650aWVyJywKICAgICAgICAgIGRhdGE6IGh1bWlkaXR5X1NlcmllMQogICAgICAgIH07IC8vY29uc29sZS5sb2coIlNlcmllIGZpbmFsZSIpCiAgICAgICAgLy9jb25zb2xlLmxvZyhmaW5hbGVfc2VyaWVzKQoKICAgICAgICBfdGhpcy5odW1fc2VyaWVzID0gZmluYWxlX3NlcmllczsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5sb2FkRGF0YUNoYXJ0KCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICB0aGlzLmxvYWREYXRhQ2hhcnQoKTsKICAgIH0uYmluZCh0aGlzKSwgMzAwMDAwKTsgLy9yZWZyZXNoIHF1ZXJ5IHRvdXRlcyBsZXMgNW1pbgogIH0KfTs="},{"version":3,"sources":["Humidity_lht65.vue"],"names":[],"mappings":";;;;;;;;;;;;AASA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,wBAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,wBAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IAAA,MAAA,CAAA,QAAA,CAAA;AACA;AACA,QAAA,IAAA,EAAA,cAFA;AAEA;AACA,QAAA,QAAA,EAAA,gBAHA;AAIA,QAAA,IAAA,EAAA;AAJA,OAAA,CADA;AAOA,MAAA,UAAA,EAAA;AAPA,KAAA;AASA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,aAAA,EAAA,yBAAA;AAAA;;AACA,UAAA,eAAA;AACA,UAAA,eAAA,GAAA,uDAAA,CAFA,CAGA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,CACA,KAAA,MAAA,CAAA,KAAA,CAAA,eAAA,CADA,CAAA,EAEA,IAFA,CAEA,UAAA,OAAA,EAAA;AACA;AACA;AACA;AACA,QAAA,eAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA;AACA,iBAAA;AACA,YAAA,CAAA,EAAA,CAAA,CAAA,IADA;AAEA,YAAA,CAAA,EAAA,UAAA,CAAA,CAAA,CAAA,OAAA;AAFA,WAAA;AAIA,SANA,CAAA,CAJA,CAaA;AACA;;AACA,YAAA,aAAA,GAAA;AACA,UAAA,IAAA,EAAA,qBADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA,CAfA,CAmBA;AACA;;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,aAAA;AACA,OAxBA,EAwBA,KAxBA,CAwBA,UAAA,KAAA;AAAA,eAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA;AAAA,OAxBA;AAyBA;AA9BA,GAhBA;AAgDA,EAAA,OAhDA,qBAgDA;AACA,SAAA,aAAA;AACA,GAlDA;AAmDA,EAAA,OAnDA,qBAmDA;AACA,IAAA,WAAA,CAAA,YAAA;AACA,WAAA,aAAA;AACA,KAFA,CAEA,IAFA,CAEA,IAFA,CAAA,EAEA,MAFA,CAAA,CADA,CAGA;AACA;AAvDA,CAAA","sourcesContent":["<template>\n    <div class=\"mt-3\">\n        <b-card border-variant=\"light\" header=\"Humidité de la chambre\" class=\"text-center\">\n            <Humidity_line_highcharts :humidity-series=\"hum_series\"/>\n        </b-card>\n    </div>\n</template>\n\n<script>\n    //import moment from 'moment';\n    import Influx from \"influx\";\n    import Humidity_line_highcharts from \"./Humidity_line_highcharts\";\n\n    export default {\n        name: \"Humidity_lht65\",\n        components: {\n            Humidity_line_highcharts,\n        },\n        data() {\n            return {\n                client: new Influx.InfluxDB({\n                    //host: '192.168.1.70', // maison\n                    host: '153.109.7.30',   //école\n                    database: 'lowimpact_food',\n                    port:8086\n                }),\n                hum_series: [],\n            }\n        },\n        methods: {\n            loadDataChart: function () {\n                let humidity_Serie1;\n                let query_humSerie1 = 'SELECT Hum_SHT FROM ttn_lht65 WHERE time > now() - 7h';\n                //console.log(\"Query:\" + query_humSerie1)\n                Promise.all([\n                    this.client.query(query_humSerie1),\n                ]).then(results => {\n                    //console.log(\"Result\")\n                    //console.log(results)\n                    //console.log(results[0].length)\n                    humidity_Serie1 = results[0].map(a => {\n                        //var date = new Date(+(moment(a.time).unix()) * 1000)\n                        return {\n                            x: a.time,\n                            y: parseFloat(a.Hum_SHT)\n                        };\n                    });\n\n\n                    //console.log(\"Humidity serie 1\")\n                    //console.log(humidity_Serie1)\n                    let finale_series = {\n                        name: 'Humidité du boîtier',\n                        data: humidity_Serie1\n                    }\n                    //console.log(\"Serie finale\")\n                    //console.log(finale_series)\n                    this.hum_series = finale_series\n                }).catch(error => console.log(error))\n            }\n        },\n        created() {\n            this.loadDataChart()\n        },\n        mounted() {\n            setInterval(function(){\n                this.loadDataChart()\n            }.bind(this), 300000) //refresh query toutes les 5min\n        }\n    }\n</script>\n\n<style scoped>\n    .card-header{\n        background-color: lightcoral;\n        text-align: left;\n    }\n\n</style>"],"sourceRoot":"src/components"}]}