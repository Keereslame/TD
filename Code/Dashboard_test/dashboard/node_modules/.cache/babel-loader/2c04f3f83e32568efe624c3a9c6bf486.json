{"remainingRequest":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/eslint-loader/index.js??ref--13-0!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/paho-mqtt.js","dependencies":[{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/paho-mqtt.js","mtime":1500972622000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/paho-mqtt.js"],"names":["ExportLibrary","root","factory","exports","module","define","amd","Paho","MQTT","LibraryFactory","PahoMQTT","global","version","buildLevel","MESSAGE_TYPE","CONNECT","CONNACK","PUBLISH","PUBACK","PUBREC","PUBREL","PUBCOMP","SUBSCRIBE","SUBACK","UNSUBSCRIBE","UNSUBACK","PINGREQ","PINGRESP","DISCONNECT","validate","obj","keys","key","hasOwnProperty","Error","format","ERROR","INVALID_TYPE","errorStr","validKey","scope","f","apply","arguments","OK","code","text","CONNECT_TIMEOUT","SUBSCRIBE_TIMEOUT","UNSUBSCRIBE_TIMEOUT","PING_TIMEOUT","INTERNAL_ERROR","CONNACK_RETURNCODE","SOCKET_ERROR","SOCKET_CLOSE","MALFORMED_UTF","UNSUPPORTED","INVALID_STATE","INVALID_ARGUMENT","UNSUPPORTED_OPERATION","INVALID_STORED_DATA","INVALID_MQTT_MESSAGE_TYPE","MALFORMED_UNICODE","BUFFER_FULL","CONNACK_RC","error","substitutions","field","start","i","length","indexOf","part1","substring","part2","MqttProtoIdentifierv3","MqttProtoIdentifierv4","WireMessage","type","options","name","prototype","encode","first","remLength","topicStrLength","destinationNameLength","willMessagePayloadBytes","messageIdentifier","undefined","mqttVersion","UTF8Length","clientId","willMessage","destinationName","payloadBytes","Uint8Array","byteLength","userName","password","topics","requestedQos","payloadMessage","duplicate","qos","retained","ArrayBuffer","buffer","mbi","encodeMBI","pos","byteStream","set","writeString","connectFlags","cleanSession","writeUint16","keepAliveInterval","decodeMessage","input","startingPos","messageInfo","digit","multiplier","endPos","wireMessage","connectAcknowledgeFlags","sessionPresent","returnCode","len","readUint16","topicName","parseUTF8","message","Message","subarray","offset","utf8Length","stringToUTF8","number","output","Array","numBytes","charCode","charCodeAt","lowCharCode","isNaN","utf16","byte1","byte2","toString","byte3","byte4","String","fromCharCode","Pinger","client","window","_client","_window","_keepAliveInterval","isReset","pingReq","doTimeout","pinger","doPing","_trace","_disconnected","socket","send","timeout","setTimeout","reset","clearTimeout","cancel","Timeout","timeoutSeconds","action","args","ClientImpl","uri","host","port","path","WebSocket","localStorage","_wsuri","_localKey","_msg_queue","_buffered_msg_queue","_sentMessages","_receivedMessages","_notify_msg_sent","_message_identifier","_sequence","restore","connected","maxMessageIdentifier","connectOptions","hostIndex","onConnected","onConnectionLost","onMessageDelivered","onMessageArrived","traceFunction","_connectTimeout","sendPinger","receivePinger","_reconnectInterval","_reconnecting","_reconnectTimeout","disconnectedPublishing","disconnectedBufferSize","receiveBuffer","_traceBuffer","_MAX_TRACE_ENTRIES","connect","connectOptionsMasked","_traceMask","uris","_doConnect","subscribe","filter","subscribeOptions","onSuccess","grantedQos","invocationContext","onFailure","errorCode","errorMessage","timeOut","_requires_ack","_schedule_message","unsubscribe","unsubscribeOptions","callback","messageCount","Object","sequence","push","disconnect","getTraceLog","Date","startTrace","stopTrace","wsurl","useSSL","uriParts","split","join","binaryType","onopen","_on_socket_open","onmessage","_on_socket_message","onerror","_on_socket_error","onclose","_on_socket_close","_process_queue","store","prefix","storedMessage","pubRecReceived","hex","messageBytes","payloadHex","setItem","JSON","stringify","value","getItem","parse","x","parseInt","fifo","reverse","pop","_socket_send","event","data","messages","_deframeMessages","_handleMessage","byteArray","newData","result","errorStack","stack","sentMessage","removeItem","receivedMessage","sequencedMessages","msgId","msg","sort","a","b","pubRelMessage","reconnected","_connected","_receivePublish","_receiveMessage","pubCompMessage","wireMessageMasked","pubAckMessage","pubRecMessage","wireMmessage","reconnect","_reconnect","errorText","readyState","close","mqttVersionExplicit","splice","record","slice","call","severity","max","shift","traceObject","masked","traceObjectMasked","attr","Client","match","ipv6AddSBracket","clientIdLength","_getHost","_setHost","_getPort","_setPort","_getPath","_setPath","_getURI","_setURI","_getClientId","_setClientId","_getOnConnected","_setOnConnected","newOnConnected","_getDisconnectedPublishing","_setDisconnectedPublishing","newDisconnectedPublishing","_getDisconnectedBufferSize","_setDisconnectedBufferSize","newDisconnectedBufferSize","_getOnConnectionLost","_setOnConnectionLost","newOnConnectionLost","_getOnMessageDelivered","_setOnMessageDelivered","newOnMessageDelivered","_getOnMessageArrived","_setOnMessageArrived","newOnMessageArrived","_getTrace","_setTrace","trace","hosts","ports","stringPayload","usingURIs","test","ipv6","topic","payload","publish","console","log","isConnected","newHost","newPort","newPath","newClientId","newTraceFunction","newPayload","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","_getPayloadString","_getPayloadBytes","_getDestinationName","_setDestinationName","newDestinationName","_getQos","_setQos","newQos","_getRetained","_setRetained","newRetained","_getDuplicate","_setDuplicate","newDuplicate","payloadString","newTopic"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA,CAAC,SAASA,aAAT,CAAuBC,IAAvB,EAA6BC,OAA7B,EAAsC;AACtC,MAAG,QAAOC,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,IAA+B,QAAOC,MAAP,yCAAOA,MAAP,OAAkB,QAApD,EAA6D;AAC5DA,IAAAA,MAAM,CAACD,OAAP,GAAiBD,OAAO,EAAxB;AACA,GAFD,MAEO,IAAI,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAA+C;AACrDD,IAAAA,MAAM,CAACH,OAAD,CAAN;AACA,GAFM,MAEA,IAAI,QAAOC,OAAP,yCAAOA,OAAP,OAAmB,QAAvB,EAAgC;AACtCA,IAAAA,OAAO,GAAGD,OAAO,EAAjB;AACA,GAFM,MAEA;AACN,QAAI,OAAOD,IAAI,CAACM,IAAZ,KAAqB,WAAzB,EAAqC;AACpCN,MAAAA,IAAI,CAACM,IAAL,GAAY,EAAZ;AACA;;AACDN,IAAAA,IAAI,CAACM,IAAL,CAAUC,IAAV,GAAiBN,OAAO,EAAxB;AACA;AACD,CAbD,EAaG,IAbH,EAaS,SAASO,cAAT,GAAyB;AAGlC,MAAIC,QAAQ,GAAI,UAAUC,MAAV,EAAkB;AAEjC;AACA;AAEA,QAAIC,OAAO,GAAG,WAAd;AACA,QAAIC,UAAU,GAAG,cAAjB;AAEA;;;;;;AAKA,QAAIC,YAAY,GAAG;AAClBC,MAAAA,OAAO,EAAE,CADS;AAElBC,MAAAA,OAAO,EAAE,CAFS;AAGlBC,MAAAA,OAAO,EAAE,CAHS;AAIlBC,MAAAA,MAAM,EAAE,CAJU;AAKlBC,MAAAA,MAAM,EAAE,CALU;AAMlBC,MAAAA,MAAM,EAAE,CANU;AAOlBC,MAAAA,OAAO,EAAE,CAPS;AAQlBC,MAAAA,SAAS,EAAE,CARO;AASlBC,MAAAA,MAAM,EAAE,CATU;AAUlBC,MAAAA,WAAW,EAAE,EAVK;AAWlBC,MAAAA,QAAQ,EAAE,EAXQ;AAYlBC,MAAAA,OAAO,EAAE,EAZS;AAalBC,MAAAA,QAAQ,EAAE,EAbQ;AAclBC,MAAAA,UAAU,EAAE;AAdM,KAAnB,CAbiC,CA8BjC;AACA;;AAEA;;;;;;;;;;;AAUA,QAAIC,QAAQ,GAAG,SAAXA,QAAW,CAASC,GAAT,EAAcC,IAAd,EAAoB;AAClC,WAAK,IAAIC,GAAT,IAAgBF,GAAhB,EAAqB;AACpB,YAAIA,GAAG,CAACG,cAAJ,CAAmBD,GAAnB,CAAJ,EAA6B;AAC5B,cAAID,IAAI,CAACE,cAAL,CAAoBD,GAApB,CAAJ,EAA8B;AAC7B,gBAAI,QAAOF,GAAG,CAACE,GAAD,CAAV,MAAoBD,IAAI,CAACC,GAAD,CAA5B,EACG,MAAM,IAAIE,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,SAAQP,GAAG,CAACE,GAAD,CAAX,GAAkBA,GAAlB,CAArB,CAAhB,CAAN;AACH,WAHD,MAGO;AACN,gBAAIM,QAAQ,GAAG,uBAAuBN,GAAvB,GAA6B,yBAA5C;;AACA,iBAAK,IAAIO,QAAT,IAAqBR,IAArB;AACC,kBAAIA,IAAI,CAACE,cAAL,CAAoBM,QAApB,CAAJ,EACCD,QAAQ,GAAGA,QAAQ,GAAC,GAAT,GAAaC,QAAxB;AAFF;;AAGA,kBAAM,IAAIL,KAAJ,CAAUI,QAAV,CAAN;AACA;AACD;AACD;AACD,KAfD;AAiBA;;;;;;;;;;AAQA,QAAIE,KAAK,GAAG,eAAUC,CAAV,EAAaD,MAAb,EAAoB;AAC/B,aAAO,YAAY;AAClB,eAAOC,CAAC,CAACC,KAAF,CAAQF,MAAR,EAAeG,SAAf,CAAP;AACA,OAFD;AAGA,KAJD;AAMA;;;;;;;AAKA,QAAIP,KAAK,GAAG;AACXQ,MAAAA,EAAE,EAAE;AAACC,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,IAAI,EAAC;AAAd,OADO;AAEXC,MAAAA,eAAe,EAAE;AAACF,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,IAAI,EAAC;AAAd,OAFN;AAGXE,MAAAA,iBAAiB,EAAE;AAACH,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,IAAI,EAAC;AAAd,OAHR;AAIXG,MAAAA,mBAAmB,EAAE;AAACJ,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,IAAI,EAAC;AAAd,OAJV;AAKXI,MAAAA,YAAY,EAAE;AAACL,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,IAAI,EAAC;AAAd,OALH;AAMXK,MAAAA,cAAc,EAAE;AAACN,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,IAAI,EAAC;AAAd,OANL;AAOXM,MAAAA,kBAAkB,EAAE;AAACP,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,IAAI,EAAC;AAAd,OAPT;AAQXO,MAAAA,YAAY,EAAE;AAACR,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,IAAI,EAAC;AAAd,OARH;AASXQ,MAAAA,YAAY,EAAE;AAACT,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,IAAI,EAAC;AAAd,OATH;AAUXS,MAAAA,aAAa,EAAE;AAACV,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,IAAI,EAAC;AAAd,OAVJ;AAWXU,MAAAA,WAAW,EAAE;AAACX,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,IAAI,EAAC;AAAf,OAXF;AAYXW,MAAAA,aAAa,EAAE;AAACZ,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,IAAI,EAAC;AAAf,OAZJ;AAaXT,MAAAA,YAAY,EAAE;AAACQ,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,IAAI,EAAC;AAAf,OAbH;AAcXY,MAAAA,gBAAgB,EAAE;AAACb,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,IAAI,EAAC;AAAf,OAdP;AAeXa,MAAAA,qBAAqB,EAAE;AAACd,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,IAAI,EAAC;AAAf,OAfZ;AAgBXc,MAAAA,mBAAmB,EAAE;AAACf,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,IAAI,EAAC;AAAf,OAhBV;AAiBXe,MAAAA,yBAAyB,EAAE;AAAChB,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,IAAI,EAAC;AAAf,OAjBhB;AAkBXgB,MAAAA,iBAAiB,EAAE;AAACjB,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,IAAI,EAAC;AAAf,OAlBR;AAmBXiB,MAAAA,WAAW,EAAE;AAAClB,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,IAAI,EAAC;AAAf;AAnBF,KAAZ;AAsBA;;AACA,QAAIkB,UAAU,GAAG;AAChB,SAAE,qBADc;AAEhB,SAAE,mDAFc;AAGhB,SAAE,yCAHc;AAIhB,SAAE,wCAJc;AAKhB,SAAE,+CALc;AAMhB,SAAE;AANc,KAAjB;AASA;;;;;;;;AAOA,QAAI7B,MAAM,GAAG,SAATA,MAAS,CAAS8B,KAAT,EAAgBC,aAAhB,EAA+B;AAC3C,UAAIpB,IAAI,GAAGmB,KAAK,CAACnB,IAAjB;;AACA,UAAIoB,aAAJ,EAAmB;AACjB,YAAIC,KAAJ,EAAUC,KAAV;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,aAAa,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AAC5CF,UAAAA,KAAK,GAAG,MAAIE,CAAJ,GAAM,GAAd;AACAD,UAAAA,KAAK,GAAGtB,IAAI,CAACyB,OAAL,CAAaJ,KAAb,CAAR;;AACA,cAAGC,KAAK,GAAG,CAAX,EAAc;AACb,gBAAII,KAAK,GAAG1B,IAAI,CAAC2B,SAAL,CAAe,CAAf,EAAiBL,KAAjB,CAAZ;AACA,gBAAIM,KAAK,GAAG5B,IAAI,CAAC2B,SAAL,CAAeL,KAAK,GAACD,KAAK,CAACG,MAA3B,CAAZ;AACAxB,YAAAA,IAAI,GAAG0B,KAAK,GAACN,aAAa,CAACG,CAAD,CAAnB,GAAuBK,KAA9B;AACA;AACC;AACF;;AACD,aAAO5B,IAAP;AACA,KAfD,CAtHiC,CAuIjC;;;AACA,QAAI6B,qBAAqB,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,EAA0B,IAA1B,EAA+B,IAA/B,EAAoC,IAApC,EAAyC,IAAzC,CAA5B,CAxIiC,CAyIjC;;AACA,QAAIC,qBAAqB,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,EAA0B,IAA1B,EAA+B,IAA/B,CAA5B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,QAAIC,WAAW,GAAG,SAAdA,WAAc,CAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAC1C,WAAKD,IAAL,GAAYA,IAAZ;;AACA,WAAK,IAAIE,IAAT,IAAiBD,OAAjB,EAA0B;AACzB,YAAIA,OAAO,CAAC9C,cAAR,CAAuB+C,IAAvB,CAAJ,EAAkC;AACjC,eAAKA,IAAL,IAAaD,OAAO,CAACC,IAAD,CAApB;AACA;AACD;AACD,KAPD;;AASAH,IAAAA,WAAW,CAACI,SAAZ,CAAsBC,MAAtB,GAA+B,YAAW;AACzC;AACA,UAAIC,KAAK,GAAI,CAAC,KAAKL,IAAL,GAAY,IAAb,KAAsB,CAAnC;AAEA;;;;;AAKA,UAAIM,SAAS,GAAG,CAAhB;AACA,UAAIC,cAAc,GAAG,EAArB;AACA,UAAIC,qBAAqB,GAAG,CAA5B;AACA,UAAIC,uBAAJ,CAZyC,CAczC;;AACA,UAAI,KAAKC,iBAAL,KAA2BC,SAA/B,EACCL,SAAS,IAAI,CAAb;;AAED,cAAO,KAAKN,IAAZ;AACC;AACA,aAAKhE,YAAY,CAACC,OAAlB;AACC,kBAAO,KAAK2E,WAAZ;AACC,iBAAK,CAAL;AACCN,cAAAA,SAAS,IAAIT,qBAAqB,CAACL,MAAtB,GAA+B,CAA5C;AACA;;AACD,iBAAK,CAAL;AACCc,cAAAA,SAAS,IAAIR,qBAAqB,CAACN,MAAtB,GAA+B,CAA5C;AACA;AANF;;AASAc,UAAAA,SAAS,IAAIO,UAAU,CAAC,KAAKC,QAAN,CAAV,GAA4B,CAAzC;;AACA,cAAI,KAAKC,WAAL,KAAqBJ,SAAzB,EAAoC;AACnCL,YAAAA,SAAS,IAAIO,UAAU,CAAC,KAAKE,WAAL,CAAiBC,eAAlB,CAAV,GAA+C,CAA5D,CADmC,CAEnC;;AACAP,YAAAA,uBAAuB,GAAG,KAAKM,WAAL,CAAiBE,YAA3C;AACA,gBAAI,EAAER,uBAAuB,YAAYS,UAArC,CAAJ,EACCT,uBAAuB,GAAG,IAAIS,UAAJ,CAAeD,YAAf,CAA1B;AACDX,YAAAA,SAAS,IAAIG,uBAAuB,CAACU,UAAxB,GAAoC,CAAjD;AACA;;AACD,cAAI,KAAKC,QAAL,KAAkBT,SAAtB,EACCL,SAAS,IAAIO,UAAU,CAAC,KAAKO,QAAN,CAAV,GAA4B,CAAzC;AACD,cAAI,KAAKC,QAAL,KAAkBV,SAAtB,EACCL,SAAS,IAAIO,UAAU,CAAC,KAAKQ,QAAN,CAAV,GAA4B,CAAzC;AACF;AAEA;;AACA,aAAKrF,YAAY,CAACQ,SAAlB;AACC6D,UAAAA,KAAK,IAAI,IAAT,CADD,CACgB;;AACf,eAAM,IAAId,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAK+B,MAAL,CAAY9B,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC7CgB,YAAAA,cAAc,CAAChB,CAAD,CAAd,GAAoBsB,UAAU,CAAC,KAAKS,MAAL,CAAY/B,CAAZ,CAAD,CAA9B;AACAe,YAAAA,SAAS,IAAIC,cAAc,CAAChB,CAAD,CAAd,GAAoB,CAAjC;AACA;;AACDe,UAAAA,SAAS,IAAI,KAAKiB,YAAL,CAAkB/B,MAA/B,CAND,CAMwC;AACvC;;AACA;;AAED,aAAKxD,YAAY,CAACU,WAAlB;AACC2D,UAAAA,KAAK,IAAI,IAAT,CADD,CACgB;;AACf,eAAM,IAAId,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAK+B,MAAL,CAAY9B,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC7CgB,YAAAA,cAAc,CAAChB,CAAD,CAAd,GAAoBsB,UAAU,CAAC,KAAKS,MAAL,CAAY/B,CAAZ,CAAD,CAA9B;AACAe,YAAAA,SAAS,IAAIC,cAAc,CAAChB,CAAD,CAAd,GAAoB,CAAjC;AACA;;AACD;;AAED,aAAKvD,YAAY,CAACM,MAAlB;AACC+D,UAAAA,KAAK,IAAI,IAAT,CADD,CACgB;;AACf;;AAED,aAAKrE,YAAY,CAACG,OAAlB;AACC,cAAI,KAAKqF,cAAL,CAAoBC,SAAxB,EAAmCpB,KAAK,IAAI,IAAT;AACnCA,UAAAA,KAAK,GAAIA,KAAK,IAAK,KAAKmB,cAAL,CAAoBE,GAApB,IAA2B,CAA9C;AACA,cAAI,KAAKF,cAAL,CAAoBG,QAAxB,EAAkCtB,KAAK,IAAI,IAAT;AAClCG,UAAAA,qBAAqB,GAAGK,UAAU,CAAC,KAAKW,cAAL,CAAoBR,eAArB,CAAlC;AACAV,UAAAA,SAAS,IAAIE,qBAAqB,GAAG,CAArC;AACA,cAAIS,YAAY,GAAG,KAAKO,cAAL,CAAoBP,YAAvC;AACAX,UAAAA,SAAS,IAAIW,YAAY,CAACE,UAA1B;AACA,cAAIF,YAAY,YAAYW,WAA5B,EACCX,YAAY,GAAG,IAAIC,UAAJ,CAAeD,YAAf,CAAf,CADD,KAEK,IAAI,EAAEA,YAAY,YAAYC,UAA1B,CAAJ,EACJD,YAAY,GAAG,IAAIC,UAAJ,CAAeD,YAAY,CAACY,MAA5B,CAAf;AACD;;AAED,aAAK7F,YAAY,CAACc,UAAlB;AACC;;AAED;AACC;AApEF,OAlByC,CAyFzC;;;AAEA,UAAIgF,GAAG,GAAGC,SAAS,CAACzB,SAAD,CAAnB,CA3FyC,CA2FR;;AACjC,UAAI0B,GAAG,GAAGF,GAAG,CAACtC,MAAJ,GAAa,CAAvB,CA5FyC,CA4FR;;AACjC,UAAIqC,MAAM,GAAG,IAAID,WAAJ,CAAgBtB,SAAS,GAAG0B,GAA5B,CAAb;AACA,UAAIC,UAAU,GAAG,IAAIf,UAAJ,CAAeW,MAAf,CAAjB,CA9FyC,CA8FG;AAE5C;;AACAI,MAAAA,UAAU,CAAC,CAAD,CAAV,GAAgB5B,KAAhB;AACA4B,MAAAA,UAAU,CAACC,GAAX,CAAeJ,GAAf,EAAmB,CAAnB,EAlGyC,CAoGzC;;AACA,UAAI,KAAK9B,IAAL,IAAahE,YAAY,CAACG,OAA9B,EACC6F,GAAG,GAAGG,WAAW,CAAC,KAAKX,cAAL,CAAoBR,eAArB,EAAsCR,qBAAtC,EAA6DyB,UAA7D,EAAyED,GAAzE,CAAjB,CADD,CAEA;AAFA,WAIK,IAAI,KAAKhC,IAAL,IAAahE,YAAY,CAACC,OAA9B,EAAuC;AAC3C,kBAAQ,KAAK2E,WAAb;AACC,iBAAK,CAAL;AACCqB,cAAAA,UAAU,CAACC,GAAX,CAAerC,qBAAf,EAAsCmC,GAAtC;AACAA,cAAAA,GAAG,IAAInC,qBAAqB,CAACL,MAA7B;AACA;;AACD,iBAAK,CAAL;AACCyC,cAAAA,UAAU,CAACC,GAAX,CAAepC,qBAAf,EAAsCkC,GAAtC;AACAA,cAAAA,GAAG,IAAIlC,qBAAqB,CAACN,MAA7B;AACA;AARF;;AAUA,cAAI4C,YAAY,GAAG,CAAnB;AACA,cAAI,KAAKC,YAAT,EACCD,YAAY,GAAG,IAAf;;AACD,cAAI,KAAKrB,WAAL,KAAqBJ,SAAzB,EAAqC;AACpCyB,YAAAA,YAAY,IAAI,IAAhB;AACAA,YAAAA,YAAY,IAAK,KAAKrB,WAAL,CAAiBW,GAAjB,IAAsB,CAAvC;;AACA,gBAAI,KAAKX,WAAL,CAAiBY,QAArB,EAA+B;AAC9BS,cAAAA,YAAY,IAAI,IAAhB;AACA;AACD;;AACD,cAAI,KAAKhB,QAAL,KAAkBT,SAAtB,EACCyB,YAAY,IAAI,IAAhB;AACD,cAAI,KAAKf,QAAL,KAAkBV,SAAtB,EACCyB,YAAY,IAAI,IAAhB;AACDH,UAAAA,UAAU,CAACD,GAAG,EAAJ,CAAV,GAAoBI,YAApB;AACAJ,UAAAA,GAAG,GAAGM,WAAW,CAAE,KAAKC,iBAAP,EAA0BN,UAA1B,EAAsCD,GAAtC,CAAjB;AACA,SApIwC,CAsIzC;;AACA,UAAI,KAAKtB,iBAAL,KAA2BC,SAA/B,EACCqB,GAAG,GAAGM,WAAW,CAAE,KAAK5B,iBAAP,EAA0BuB,UAA1B,EAAsCD,GAAtC,CAAjB;;AAED,cAAO,KAAKhC,IAAZ;AACC,aAAKhE,YAAY,CAACC,OAAlB;AACC+F,UAAAA,GAAG,GAAGG,WAAW,CAAC,KAAKrB,QAAN,EAAgBD,UAAU,CAAC,KAAKC,QAAN,CAA1B,EAA2CmB,UAA3C,EAAuDD,GAAvD,CAAjB;;AACA,cAAI,KAAKjB,WAAL,KAAqBJ,SAAzB,EAAoC;AACnCqB,YAAAA,GAAG,GAAGG,WAAW,CAAC,KAAKpB,WAAL,CAAiBC,eAAlB,EAAmCH,UAAU,CAAC,KAAKE,WAAL,CAAiBC,eAAlB,CAA7C,EAAiFiB,UAAjF,EAA6FD,GAA7F,CAAjB;AACAA,YAAAA,GAAG,GAAGM,WAAW,CAAC7B,uBAAuB,CAACU,UAAzB,EAAqCc,UAArC,EAAiDD,GAAjD,CAAjB;AACAC,YAAAA,UAAU,CAACC,GAAX,CAAezB,uBAAf,EAAwCuB,GAAxC;AACAA,YAAAA,GAAG,IAAIvB,uBAAuB,CAACU,UAA/B;AAEA;;AACF,cAAI,KAAKC,QAAL,KAAkBT,SAAtB,EACCqB,GAAG,GAAGG,WAAW,CAAC,KAAKf,QAAN,EAAgBP,UAAU,CAAC,KAAKO,QAAN,CAA1B,EAA2Ca,UAA3C,EAAuDD,GAAvD,CAAjB;AACD,cAAI,KAAKX,QAAL,KAAkBV,SAAtB,EACCqB,GAAG,GAAGG,WAAW,CAAC,KAAKd,QAAN,EAAgBR,UAAU,CAAC,KAAKQ,QAAN,CAA1B,EAA2CY,UAA3C,EAAuDD,GAAvD,CAAjB;AACD;;AAEA,aAAKhG,YAAY,CAACG,OAAlB;AACC;AACA8F,UAAAA,UAAU,CAACC,GAAX,CAAejB,YAAf,EAA6Be,GAA7B;AAEA;AAEJ;AACA;AACA;AACA;;AAEG,aAAKhG,YAAY,CAACQ,SAAlB;AACC;AACA,eAAK,IAAI+C,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAK+B,MAAL,CAAY9B,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACxCyC,YAAAA,GAAG,GAAGG,WAAW,CAAC,KAAKb,MAAL,CAAY/B,CAAZ,CAAD,EAAiBgB,cAAc,CAAChB,CAAD,CAA/B,EAAoC0C,UAApC,EAAgDD,GAAhD,CAAjB;AACAC,YAAAA,UAAU,CAACD,GAAG,EAAJ,CAAV,GAAoB,KAAKT,YAAL,CAAkBhC,CAAlB,CAApB;AACA;;AACD;;AAED,aAAKvD,YAAY,CAACU,WAAlB;AACC;AACA,eAAK,IAAI6C,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAK+B,MAAL,CAAY9B,MAA5B,EAAoCD,CAAC,EAArC;AACCyC,YAAAA,GAAG,GAAGG,WAAW,CAAC,KAAKb,MAAL,CAAY/B,CAAZ,CAAD,EAAiBgB,cAAc,CAAChB,CAAD,CAA/B,EAAoC0C,UAApC,EAAgDD,GAAhD,CAAjB;AADD;;AAEA;;AAED,gBAzCD,CA0CE;;AA1CF;;AA6CA,aAAOH,MAAP;AACA,KAxLD;;AA0LA,aAASW,aAAT,CAAuBC,KAAvB,EAA6BT,GAA7B,EAAkC;AAC9B,UAAIU,WAAW,GAAGV,GAAlB;AACH,UAAI3B,KAAK,GAAGoC,KAAK,CAACT,GAAD,CAAjB;AACA,UAAIhC,IAAI,GAAGK,KAAK,IAAI,CAApB;AACA,UAAIsC,WAAW,GAAGtC,KAAK,IAAI,IAA3B;AACA2B,MAAAA,GAAG,IAAI,CAAP,CALiC,CAQjC;;AAEA,UAAIY,KAAJ;AACA,UAAItC,SAAS,GAAG,CAAhB;AACA,UAAIuC,UAAU,GAAG,CAAjB;;AACA,SAAG;AACF,YAAIb,GAAG,IAAIS,KAAK,CAACjD,MAAjB,EAAyB;AACrB,iBAAO,CAAC,IAAD,EAAMkD,WAAN,CAAP;AACH;;AACDE,QAAAA,KAAK,GAAGH,KAAK,CAACT,GAAG,EAAJ,CAAb;AACA1B,QAAAA,SAAS,IAAK,CAACsC,KAAK,GAAG,IAAT,IAAiBC,UAA/B;AACAA,QAAAA,UAAU,IAAI,GAAd;AACA,OAPD,QAOS,CAACD,KAAK,GAAG,IAAT,MAAmB,CAP5B;;AASA,UAAIE,MAAM,GAAGd,GAAG,GAAC1B,SAAjB;;AACA,UAAIwC,MAAM,GAAGL,KAAK,CAACjD,MAAnB,EAA2B;AACvB,eAAO,CAAC,IAAD,EAAMkD,WAAN,CAAP;AACH;;AAED,UAAIK,WAAW,GAAG,IAAIhD,WAAJ,CAAgBC,IAAhB,CAAlB;;AACA,cAAOA,IAAP;AACC,aAAKhE,YAAY,CAACE,OAAlB;AACC,cAAI8G,uBAAuB,GAAGP,KAAK,CAACT,GAAG,EAAJ,CAAnC;AACA,cAAIgB,uBAAuB,GAAG,IAA9B,EACCD,WAAW,CAACE,cAAZ,GAA6B,IAA7B;AACDF,UAAAA,WAAW,CAACG,UAAZ,GAAyBT,KAAK,CAACT,GAAG,EAAJ,CAA9B;AACA;;AAED,aAAKhG,YAAY,CAACG,OAAlB;AACC,cAAIuF,GAAG,GAAIiB,WAAW,IAAI,CAAhB,GAAqB,IAA/B;AAEA,cAAIQ,GAAG,GAAGC,UAAU,CAACX,KAAD,EAAQT,GAAR,CAApB;AACAA,UAAAA,GAAG,IAAI,CAAP;AACA,cAAIqB,SAAS,GAAGC,SAAS,CAACb,KAAD,EAAQT,GAAR,EAAamB,GAAb,CAAzB;AACAnB,UAAAA,GAAG,IAAImB,GAAP,CAND,CAOC;;AACA,cAAIzB,GAAG,GAAG,CAAV,EAAa;AACZqB,YAAAA,WAAW,CAACrC,iBAAZ,GAAgC0C,UAAU,CAACX,KAAD,EAAQT,GAAR,CAA1C;AACAA,YAAAA,GAAG,IAAI,CAAP;AACA;;AAED,cAAIuB,OAAO,GAAG,IAAI9H,IAAI,CAACC,IAAL,CAAU8H,OAAd,CAAsBf,KAAK,CAACgB,QAAN,CAAezB,GAAf,EAAoBc,MAApB,CAAtB,CAAd;AACA,cAAI,CAACH,WAAW,GAAG,IAAf,KAAwB,IAA5B,EACCY,OAAO,CAAC5B,QAAR,GAAmB,IAAnB;AACD,cAAI,CAACgB,WAAW,GAAG,IAAf,KAAwB,IAA5B,EACCY,OAAO,CAAC9B,SAAR,GAAqB,IAArB;AACD8B,UAAAA,OAAO,CAAC7B,GAAR,GAAcA,GAAd;AACA6B,UAAAA,OAAO,CAACvC,eAAR,GAA0BqC,SAA1B;AACAN,UAAAA,WAAW,CAACvB,cAAZ,GAA6B+B,OAA7B;AACA;;AAED,aAAMvH,YAAY,CAACI,MAAnB;AACA,aAAMJ,YAAY,CAACK,MAAnB;AACA,aAAML,YAAY,CAACM,MAAnB;AACA,aAAMN,YAAY,CAACO,OAAnB;AACA,aAAMP,YAAY,CAACW,QAAnB;AACCoG,UAAAA,WAAW,CAACrC,iBAAZ,GAAgC0C,UAAU,CAACX,KAAD,EAAQT,GAAR,CAA1C;AACA;;AAED,aAAMhG,YAAY,CAACS,MAAnB;AACCsG,UAAAA,WAAW,CAACrC,iBAAZ,GAAgC0C,UAAU,CAACX,KAAD,EAAQT,GAAR,CAA1C;AACAA,UAAAA,GAAG,IAAI,CAAP;AACAe,UAAAA,WAAW,CAACG,UAAZ,GAAyBT,KAAK,CAACgB,QAAN,CAAezB,GAAf,EAAoBc,MAApB,CAAzB;AACA;;AAED;AACC;AA9CF;;AAiDA,aAAO,CAACC,WAAD,EAAaD,MAAb,CAAP;AACA;;AAED,aAASR,WAAT,CAAqBG,KAArB,EAA4BZ,MAA5B,EAAoC6B,MAApC,EAA4C;AAC3C7B,MAAAA,MAAM,CAAC6B,MAAM,EAAP,CAAN,GAAmBjB,KAAK,IAAI,CAA5B,CAD2C,CACP;;AACpCZ,MAAAA,MAAM,CAAC6B,MAAM,EAAP,CAAN,GAAmBjB,KAAK,GAAG,GAA3B,CAF2C,CAEP;;AACpC,aAAOiB,MAAP;AACA;;AAED,aAASvB,WAAT,CAAqBM,KAArB,EAA4BkB,UAA5B,EAAwC9B,MAAxC,EAAgD6B,MAAhD,EAAwD;AACvDA,MAAAA,MAAM,GAAGpB,WAAW,CAACqB,UAAD,EAAa9B,MAAb,EAAqB6B,MAArB,CAApB;AACAE,MAAAA,YAAY,CAACnB,KAAD,EAAQZ,MAAR,EAAgB6B,MAAhB,CAAZ;AACA,aAAOA,MAAM,GAAGC,UAAhB;AACA;;AAED,aAASP,UAAT,CAAoBvB,MAApB,EAA4B6B,MAA5B,EAAoC;AACnC,aAAO,MAAI7B,MAAM,CAAC6B,MAAD,CAAV,GAAqB7B,MAAM,CAAC6B,MAAM,GAAC,CAAR,CAAlC;AACA;AAED;;;;;;AAIA,aAAS3B,SAAT,CAAmB8B,MAAnB,EAA2B;AAC1B,UAAIC,MAAM,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAb;AACA,UAAIC,QAAQ,GAAG,CAAf;;AAEA,SAAG;AACF,YAAIpB,KAAK,GAAGiB,MAAM,GAAG,GAArB;AACAA,QAAAA,MAAM,GAAGA,MAAM,IAAI,CAAnB;;AACA,YAAIA,MAAM,GAAG,CAAb,EAAgB;AACfjB,UAAAA,KAAK,IAAI,IAAT;AACA;;AACDkB,QAAAA,MAAM,CAACE,QAAQ,EAAT,CAAN,GAAqBpB,KAArB;AACA,OAPD,QAOWiB,MAAM,GAAG,CAAV,IAAiBG,QAAQ,GAAC,CAPpC;;AASA,aAAOF,MAAP;AACA;AAED;;;;;;AAIA,aAASjD,UAAT,CAAoB4B,KAApB,EAA2B;AAC1B,UAAIqB,MAAM,GAAG,CAAb;;AACA,WAAK,IAAIvE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACkD,KAAK,CAACjD,MAAxB,EAAgCD,CAAC,EAAjC,EACA;AACC,YAAI0E,QAAQ,GAAGxB,KAAK,CAACyB,UAAN,CAAiB3E,CAAjB,CAAf;;AACC,YAAI0E,QAAQ,GAAG,KAAf,EACG;AACA;AACA,cAAI,UAAUA,QAAV,IAAsBA,QAAQ,IAAI,MAAtC,EACD;AACE1E,YAAAA,CAAC;AACDuE,YAAAA,MAAM;AACP;;AACAA,UAAAA,MAAM,IAAG,CAAT;AACC,SATJ,MAUI,IAAIG,QAAQ,GAAG,IAAf,EACJH,MAAM,IAAG,CAAT,CADI,KAGJA,MAAM;AACP;;AACD,aAAOA,MAAP;AACA;AAED;;;;;;AAIA,aAASF,YAAT,CAAsBnB,KAAtB,EAA6BqB,MAA7B,EAAqCxE,KAArC,EAA4C;AAC3C,UAAI0C,GAAG,GAAG1C,KAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACkD,KAAK,CAACjD,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACpC,YAAI0E,QAAQ,GAAGxB,KAAK,CAACyB,UAAN,CAAiB3E,CAAjB,CAAf,CADoC,CAGpC;;AACA,YAAI,UAAU0E,QAAV,IAAsBA,QAAQ,IAAI,MAAtC,EAA8C;AAC7C,cAAIE,WAAW,GAAG1B,KAAK,CAACyB,UAAN,CAAiB,EAAE3E,CAAnB,CAAlB;;AACA,cAAI6E,KAAK,CAACD,WAAD,CAAT,EAAwB;AACvB,kBAAM,IAAI/G,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAAC0B,iBAAP,EAA0B,CAACiF,QAAD,EAAWE,WAAX,CAA1B,CAAhB,CAAN;AACA;;AACDF,UAAAA,QAAQ,GAAG,CAAEA,QAAQ,GAAG,MAAZ,IAAqB,EAAtB,KAA6BE,WAAW,GAAG,MAA3C,IAAqD,OAAhE;AAEA;;AAED,YAAIF,QAAQ,IAAI,IAAhB,EAAsB;AACrBH,UAAAA,MAAM,CAAC9B,GAAG,EAAJ,CAAN,GAAgBiC,QAAhB;AACA,SAFD,MAEO,IAAIA,QAAQ,IAAI,KAAhB,EAAuB;AAC7BH,UAAAA,MAAM,CAAC9B,GAAG,EAAJ,CAAN,GAAgBiC,QAAQ,IAAE,CAAV,GAAe,IAAf,GAAsB,IAAtC;AACAH,UAAAA,MAAM,CAAC9B,GAAG,EAAJ,CAAN,GAAgBiC,QAAQ,GAAO,IAAf,GAAsB,IAAtC;AACA,SAHM,MAGA,IAAIA,QAAQ,IAAI,MAAhB,EAAwB;AAC9BH,UAAAA,MAAM,CAAC9B,GAAG,EAAJ,CAAN,GAAgBiC,QAAQ,IAAE,EAAV,GAAe,IAAf,GAAsB,IAAtC;AACAH,UAAAA,MAAM,CAAC9B,GAAG,EAAJ,CAAN,GAAgBiC,QAAQ,IAAE,CAAV,GAAe,IAAf,GAAsB,IAAtC;AACAH,UAAAA,MAAM,CAAC9B,GAAG,EAAJ,CAAN,GAAgBiC,QAAQ,GAAO,IAAf,GAAsB,IAAtC;AACA,SAJM,MAIA;AACNH,UAAAA,MAAM,CAAC9B,GAAG,EAAJ,CAAN,GAAgBiC,QAAQ,IAAE,EAAV,GAAe,IAAf,GAAsB,IAAtC;AACAH,UAAAA,MAAM,CAAC9B,GAAG,EAAJ,CAAN,GAAgBiC,QAAQ,IAAE,EAAV,GAAe,IAAf,GAAsB,IAAtC;AACAH,UAAAA,MAAM,CAAC9B,GAAG,EAAJ,CAAN,GAAgBiC,QAAQ,IAAE,CAAV,GAAe,IAAf,GAAsB,IAAtC;AACAH,UAAAA,MAAM,CAAC9B,GAAG,EAAJ,CAAN,GAAgBiC,QAAQ,GAAO,IAAf,GAAsB,IAAtC;AACA;AACD;;AACD,aAAOH,MAAP;AACA;;AAED,aAASR,SAAT,CAAmBb,KAAnB,EAA0BiB,MAA1B,EAAkClE,MAAlC,EAA0C;AACzC,UAAIsE,MAAM,GAAG,EAAb;AACA,UAAIO,KAAJ;AACA,UAAIrC,GAAG,GAAG0B,MAAV;;AAEA,aAAO1B,GAAG,GAAG0B,MAAM,GAAClE,MAApB,EACA;AACC,YAAI8E,KAAK,GAAG7B,KAAK,CAACT,GAAG,EAAJ,CAAjB;AACA,YAAIsC,KAAK,GAAG,GAAZ,EACCD,KAAK,GAAGC,KAAR,CADD,KAGA;AACC,cAAIC,KAAK,GAAG9B,KAAK,CAACT,GAAG,EAAJ,CAAL,GAAa,GAAzB;AACA,cAAIuC,KAAK,GAAG,CAAZ,EACC,MAAM,IAAInH,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACmB,aAAP,EAAsB,CAAC6F,KAAK,CAACE,QAAN,CAAe,EAAf,CAAD,EAAqBD,KAAK,CAACC,QAAN,CAAe,EAAf,CAArB,EAAwC,EAAxC,CAAtB,CAAhB,CAAN;AACD,cAAIF,KAAK,GAAG,IAAZ,EAA8B;AAC7BD,YAAAA,KAAK,GAAG,MAAIC,KAAK,GAAC,IAAV,IAAkBC,KAA1B,CADD,KAGA;AACC,gBAAIE,KAAK,GAAGhC,KAAK,CAACT,GAAG,EAAJ,CAAL,GAAa,GAAzB;AACA,gBAAIyC,KAAK,GAAG,CAAZ,EACC,MAAM,IAAIrH,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACmB,aAAP,EAAsB,CAAC6F,KAAK,CAACE,QAAN,CAAe,EAAf,CAAD,EAAqBD,KAAK,CAACC,QAAN,CAAe,EAAf,CAArB,EAAyCC,KAAK,CAACD,QAAN,CAAe,EAAf,CAAzC,CAAtB,CAAhB,CAAN;AACD,gBAAIF,KAAK,GAAG,IAAZ,EAAyB;AACxBD,cAAAA,KAAK,GAAG,QAAMC,KAAK,GAAC,IAAZ,IAAoB,KAAGC,KAAvB,GAA+BE,KAAvC,CADD,KAGG;AACG,kBAAIC,KAAK,GAAGjC,KAAK,CAACT,GAAG,EAAJ,CAAL,GAAa,GAAzB;AACA,kBAAI0C,KAAK,GAAG,CAAZ,EACL,MAAM,IAAItH,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACmB,aAAP,EAAsB,CAAC6F,KAAK,CAACE,QAAN,CAAe,EAAf,CAAD,EAAqBD,KAAK,CAACC,QAAN,CAAe,EAAf,CAArB,EAAyCC,KAAK,CAACD,QAAN,CAAe,EAAf,CAAzC,EAA6DE,KAAK,CAACF,QAAN,CAAe,EAAf,CAA7D,CAAtB,CAAhB,CAAN;AACK,kBAAIF,KAAK,GAAG,IAAZ,EAAyB;AACvBD,gBAAAA,KAAK,GAAG,UAAQC,KAAK,GAAC,IAAd,IAAsB,OAAKC,KAA3B,GAAmC,KAAGE,KAAtC,GAA8CC,KAAtD,CADF,KAEsB;AAC3B,sBAAM,IAAItH,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACmB,aAAP,EAAsB,CAAC6F,KAAK,CAACE,QAAN,CAAe,EAAf,CAAD,EAAqBD,KAAK,CAACC,QAAN,CAAe,EAAf,CAArB,EAAyCC,KAAK,CAACD,QAAN,CAAe,EAAf,CAAzC,EAA6DE,KAAK,CAACF,QAAN,CAAe,EAAf,CAA7D,CAAtB,CAAhB,CAAN;AACG;AACJ;AACD;;AAEA,YAAIH,KAAK,GAAG,MAAZ,EAAsB;AACpB;AACAA,YAAAA,KAAK,IAAI,OAAT;AACAP,YAAAA,MAAM,IAAIa,MAAM,CAACC,YAAP,CAAoB,UAAUP,KAAK,IAAI,EAAnB,CAApB,CAAV,CAFA,CAEuD;;AACvDA,YAAAA,KAAK,GAAG,UAAUA,KAAK,GAAG,KAAlB,CAAR,CAHA,CAGmC;AAClC;;AACJP,QAAAA,MAAM,IAAIa,MAAM,CAACC,YAAP,CAAoBP,KAApB,CAAV;AACA;;AACD,aAAOP,MAAP;AACA;AAED;;;;;;AAIA,QAAIe,MAAM,GAAG,SAATA,MAAS,CAASC,MAAT,EAAiBC,MAAjB,EAAyBxC,iBAAzB,EAA4C;AACxD,WAAKyC,OAAL,GAAeF,MAAf;AACA,WAAKG,OAAL,GAAeF,MAAf;AACA,WAAKG,kBAAL,GAA0B3C,iBAAiB,GAAC,IAA5C;AACA,WAAK4C,OAAL,GAAe,KAAf;AAEA,UAAIC,OAAO,GAAG,IAAIrF,WAAJ,CAAgB/D,YAAY,CAACY,OAA7B,EAAsCwD,MAAtC,EAAd;;AAEA,UAAIiF,SAAS,GAAG,SAAZA,SAAY,CAAUC,MAAV,EAAkB;AACjC,eAAO,YAAY;AAClB,iBAAOC,MAAM,CAAC3H,KAAP,CAAa0H,MAAb,CAAP;AACA,SAFD;AAGA,OAJD;AAMA;;;AACA,UAAIC,MAAM,GAAG,SAATA,MAAS,GAAW;AACvB,YAAI,CAAC,KAAKJ,OAAV,EAAmB;AAClB,eAAKH,OAAL,CAAaQ,MAAb,CAAoB,eAApB,EAAqC,WAArC;;AACA,eAAKR,OAAL,CAAaS,aAAb,CAA4BnI,KAAK,CAACc,YAAN,CAAmBL,IAA/C,EAAsDV,MAAM,CAACC,KAAK,CAACc,YAAP,CAA5D;AACA,SAHD,MAGO;AACN,eAAK+G,OAAL,GAAe,KAAf;;AACA,eAAKH,OAAL,CAAaQ,MAAb,CAAoB,eAApB,EAAqC,cAArC;;AACA,eAAKR,OAAL,CAAaU,MAAb,CAAoBC,IAApB,CAAyBP,OAAzB;;AACA,eAAKQ,OAAL,GAAe,KAAKX,OAAL,CAAaY,UAAb,CAAwBR,SAAS,CAAC,IAAD,CAAjC,EAAyC,KAAKH,kBAA9C,CAAf;AACA;AACD,OAVD;;AAYA,WAAKY,KAAL,GAAa,YAAW;AACvB,aAAKX,OAAL,GAAe,IAAf;;AACA,aAAKF,OAAL,CAAac,YAAb,CAA0B,KAAKH,OAA/B;;AACA,YAAI,KAAKV,kBAAL,GAA0B,CAA9B,EACC,KAAKU,OAAL,GAAeC,UAAU,CAACR,SAAS,CAAC,IAAD,CAAV,EAAkB,KAAKH,kBAAvB,CAAzB;AACD,OALD;;AAOA,WAAKc,MAAL,GAAc,YAAW;AACxB,aAAKf,OAAL,CAAac,YAAb,CAA0B,KAAKH,OAA/B;AACA,OAFD;AAGC,KArCF;AAuCA;;;;;;AAIA,QAAIK,OAAO,GAAG,SAAVA,OAAU,CAASnB,MAAT,EAAiBC,MAAjB,EAAyBmB,cAAzB,EAAyCC,MAAzC,EAAiDC,IAAjD,EAAuD;AACpE,WAAKnB,OAAL,GAAeF,MAAf;AACA,UAAI,CAACmB,cAAL,EACCA,cAAc,GAAG,EAAjB;;AAED,UAAIb,SAAS,GAAG,SAAZA,SAAY,CAAUc,MAAV,EAAkBrB,MAAlB,EAA0BsB,IAA1B,EAAgC;AAC/C,eAAO,YAAY;AAClB,iBAAOD,MAAM,CAACvI,KAAP,CAAakH,MAAb,EAAqBsB,IAArB,CAAP;AACA,SAFD;AAGA,OAJD;;AAKA,WAAKR,OAAL,GAAeC,UAAU,CAACR,SAAS,CAACc,MAAD,EAASrB,MAAT,EAAiBsB,IAAjB,CAAV,EAAkCF,cAAc,GAAG,IAAnD,CAAzB;;AAEA,WAAKF,MAAL,GAAc,YAAW;AACxB,aAAKf,OAAL,CAAac,YAAb,CAA0B,KAAKH,OAA/B;AACA,OAFD;AAGA,KAfD;AAiBA;;;;;;;;;;AAQA,QAAIS,UAAU,GAAG,SAAbA,UAAa,CAAUC,GAAV,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiC3F,QAAjC,EAA2C;AAC3D;AACA,UAAI,EAAE,eAAejF,MAAf,IAAyBA,MAAM,CAAC6K,SAAP,KAAqB,IAAhD,CAAJ,EAA2D;AAC1D,cAAM,IAAItJ,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACoB,WAAP,EAAoB,CAAC,WAAD,CAApB,CAAhB,CAAN;AACA;;AACD,UAAI,EAAE,kBAAkB7C,MAAlB,IAA4BA,MAAM,CAAC8K,YAAP,KAAwB,IAAtD,CAAJ,EAAiE;AAChE,cAAM,IAAIvJ,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACoB,WAAP,EAAoB,CAAC,cAAD,CAApB,CAAhB,CAAN;AACA;;AACD,UAAI,EAAE,iBAAiB7C,MAAjB,IAA2BA,MAAM,CAAC+F,WAAP,KAAuB,IAApD,CAAJ,EAA+D;AAC9D,cAAM,IAAIxE,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACoB,WAAP,EAAoB,CAAC,aAAD,CAApB,CAAhB,CAAN;AACA;;AACD,WAAK8G,MAAL,CAAY,kBAAZ,EAAgCc,GAAhC,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuD3F,QAAvD;;AAEA,WAAKyF,IAAL,GAAYA,IAAZ;AACA,WAAKC,IAAL,GAAYA,IAAZ;AACA,WAAKC,IAAL,GAAYA,IAAZ;AACA,WAAKH,GAAL,GAAWA,GAAX;AACA,WAAKxF,QAAL,GAAgBA,QAAhB;AACA,WAAK8F,MAAL,GAAc,IAAd,CAlB2D,CAoB3D;AACA;AACA;AACA;;AACA,WAAKC,SAAL,GAAeN,IAAI,GAAC,GAAL,GAASC,IAAT,IAAeC,IAAI,IAAE,OAAN,GAAc,MAAIA,IAAlB,GAAuB,EAAtC,IAA0C,GAA1C,GAA8C3F,QAA9C,GAAuD,GAAtE,CAxB2D,CA0B3D;AACA;;AACA,WAAKgG,UAAL,GAAkB,EAAlB;AACA,WAAKC,mBAAL,GAA2B,EAA3B,CA7B2D,CA+B3D;;AACA,WAAKC,aAAL,GAAqB,EAArB,CAhC2D,CAkC3D;AACA;;AACA,WAAKC,iBAAL,GAAyB,EAAzB,CApC2D,CAsC3D;AACA;AACA;;AACA,WAAKC,gBAAL,GAAwB,EAAxB,CAzC2D,CA2C3D;AACA;;AACA,WAAKC,mBAAL,GAA2B,CAA3B,CA7C2D,CA+C3D;;AACA,WAAKC,SAAL,GAAiB,CAAjB,CAhD2D,CAmD3D;;AACA,WAAK,IAAIlK,GAAT,IAAgByJ,YAAhB;AACC,YAAOzJ,GAAG,CAACuC,OAAJ,CAAY,UAAQ,KAAKoH,SAAzB,MAAwC,CAAxC,IAA6C3J,GAAG,CAACuC,OAAJ,CAAY,cAAY,KAAKoH,SAA7B,MAA4C,CAAhG,EACA,KAAKQ,OAAL,CAAanK,GAAb;AAFD;AAGA,KAvDD,CAppBiC,CA6sBjC;;;AACAmJ,IAAAA,UAAU,CAAClG,SAAX,CAAqBoG,IAArB,GAA4B,IAA5B;AACAF,IAAAA,UAAU,CAAClG,SAAX,CAAqBqG,IAArB,GAA4B,IAA5B;AACAH,IAAAA,UAAU,CAAClG,SAAX,CAAqBsG,IAArB,GAA4B,IAA5B;AACAJ,IAAAA,UAAU,CAAClG,SAAX,CAAqBmG,GAArB,GAA2B,IAA3B;AACAD,IAAAA,UAAU,CAAClG,SAAX,CAAqBW,QAArB,GAAgC,IAAhC,CAltBiC,CAotBjC;;AACAuF,IAAAA,UAAU,CAAClG,SAAX,CAAqBuF,MAArB,GAA8B,IAA9B;AACA;;AACAW,IAAAA,UAAU,CAAClG,SAAX,CAAqBmH,SAArB,GAAiC,KAAjC;AACA;;;;AAGAjB,IAAAA,UAAU,CAAClG,SAAX,CAAqBoH,oBAArB,GAA4C,KAA5C;AACAlB,IAAAA,UAAU,CAAClG,SAAX,CAAqBqH,cAArB,GAAsC,IAAtC;AACAnB,IAAAA,UAAU,CAAClG,SAAX,CAAqBsH,SAArB,GAAiC,IAAjC;AACApB,IAAAA,UAAU,CAAClG,SAAX,CAAqBuH,WAArB,GAAmC,IAAnC;AACArB,IAAAA,UAAU,CAAClG,SAAX,CAAqBwH,gBAArB,GAAwC,IAAxC;AACAtB,IAAAA,UAAU,CAAClG,SAAX,CAAqByH,kBAArB,GAA0C,IAA1C;AACAvB,IAAAA,UAAU,CAAClG,SAAX,CAAqB0H,gBAArB,GAAwC,IAAxC;AACAxB,IAAAA,UAAU,CAAClG,SAAX,CAAqB2H,aAArB,GAAqC,IAArC;AACAzB,IAAAA,UAAU,CAAClG,SAAX,CAAqB2G,UAArB,GAAkC,IAAlC;AACAT,IAAAA,UAAU,CAAClG,SAAX,CAAqB4G,mBAArB,GAA2C,IAA3C;AACAV,IAAAA,UAAU,CAAClG,SAAX,CAAqB4H,eAArB,GAAuC,IAAvC;AACA;;AACA1B,IAAAA,UAAU,CAAClG,SAAX,CAAqB6H,UAArB,GAAkC,IAAlC;AACA;;AACA3B,IAAAA,UAAU,CAAClG,SAAX,CAAqB8H,aAArB,GAAqC,IAArC;AACA5B,IAAAA,UAAU,CAAClG,SAAX,CAAqB+H,kBAArB,GAA0C,CAA1C,CA1uBiC,CA0uBY;;AAC7C7B,IAAAA,UAAU,CAAClG,SAAX,CAAqBgI,aAArB,GAAqC,KAArC;AACA9B,IAAAA,UAAU,CAAClG,SAAX,CAAqBiI,iBAArB,GAAyC,IAAzC;AACA/B,IAAAA,UAAU,CAAClG,SAAX,CAAqBkI,sBAArB,GAA8C,KAA9C;AACAhC,IAAAA,UAAU,CAAClG,SAAX,CAAqBmI,sBAArB,GAA8C,IAA9C;AAEAjC,IAAAA,UAAU,CAAClG,SAAX,CAAqBoI,aAArB,GAAqC,IAArC;AAEAlC,IAAAA,UAAU,CAAClG,SAAX,CAAqBqI,YAArB,GAAoC,IAApC;AACAnC,IAAAA,UAAU,CAAClG,SAAX,CAAqBsI,kBAArB,GAA0C,GAA1C;;AAEApC,IAAAA,UAAU,CAAClG,SAAX,CAAqBuI,OAArB,GAA+B,UAAUlB,cAAV,EAA0B;AACxD,UAAImB,oBAAoB,GAAG,KAAKC,UAAL,CAAgBpB,cAAhB,EAAgC,UAAhC,CAA3B;;AACA,WAAKhC,MAAL,CAAY,gBAAZ,EAA8BmD,oBAA9B,EAAoD,KAAKjD,MAAzD,EAAiE,KAAK4B,SAAtE;;AAEA,UAAI,KAAKA,SAAT,EACC,MAAM,IAAIlK,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACqB,aAAP,EAAsB,CAAC,mBAAD,CAAtB,CAAhB,CAAN;AACD,UAAI,KAAK+G,MAAT,EACC,MAAM,IAAItI,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACqB,aAAP,EAAsB,CAAC,mBAAD,CAAtB,CAAhB,CAAN;;AAED,UAAI,KAAKwJ,aAAT,EAAwB;AACvB;AACA;AACA,aAAKC,iBAAL,CAAuBpC,MAAvB;;AACA,aAAKoC,iBAAL,GAAyB,IAAzB;AACA,aAAKD,aAAL,GAAqB,KAArB;AACA;;AAED,WAAKX,cAAL,GAAsBA,cAAtB;AACA,WAAKU,kBAAL,GAA0B,CAA1B;AACA,WAAKC,aAAL,GAAqB,KAArB;;AACA,UAAIX,cAAc,CAACqB,IAAnB,EAAyB;AACxB,aAAKpB,SAAL,GAAiB,CAAjB;;AACA,aAAKqB,UAAL,CAAgBtB,cAAc,CAACqB,IAAf,CAAoB,CAApB,CAAhB;AACA,OAHD,MAGO;AACN,aAAKC,UAAL,CAAgB,KAAKxC,GAArB;AACA;AAED,KA3BD;;AA6BAD,IAAAA,UAAU,CAAClG,SAAX,CAAqB4I,SAArB,GAAiC,UAAUC,MAAV,EAAkBC,gBAAlB,EAAoC;AACpE,WAAKzD,MAAL,CAAY,kBAAZ,EAAgCwD,MAAhC,EAAwCC,gBAAxC;;AAEA,UAAI,CAAC,KAAK3B,SAAV,EACC,MAAM,IAAIlK,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACqB,aAAP,EAAsB,CAAC,eAAD,CAAtB,CAAhB,CAAN;AAED,UAAIoE,WAAW,GAAG,IAAIhD,WAAJ,CAAgB/D,YAAY,CAACQ,SAA7B,CAAlB;AACAuG,MAAAA,WAAW,CAACzB,MAAZ,GAAmB,CAAC0H,MAAD,CAAnB;AACA,UAAIC,gBAAgB,CAACvH,GAAjB,KAAyBf,SAA7B,EACCoC,WAAW,CAACxB,YAAZ,GAA2B,CAAC0H,gBAAgB,CAACvH,GAAlB,CAA3B,CADD,KAGCqB,WAAW,CAACxB,YAAZ,GAA2B,CAAC,CAAD,CAA3B;;AAED,UAAI0H,gBAAgB,CAACC,SAArB,EAAgC;AAC/BnG,QAAAA,WAAW,CAACmG,SAAZ,GAAwB,UAASC,UAAT,EAAqB;AAACF,UAAAA,gBAAgB,CAACC,SAAjB,CAA2B;AAACE,YAAAA,iBAAiB,EAACH,gBAAgB,CAACG,iBAApC;AAAsDD,YAAAA,UAAU,EAACA;AAAjE,WAA3B;AAA0G,SAAxJ;AACA;;AAED,UAAIF,gBAAgB,CAACI,SAArB,EAAgC;AAC/BtG,QAAAA,WAAW,CAACsG,SAAZ,GAAwB,UAASC,SAAT,EAAoB;AAACL,UAAAA,gBAAgB,CAACI,SAAjB,CAA2B;AAACD,YAAAA,iBAAiB,EAACH,gBAAgB,CAACG,iBAApC;AAAsDE,YAAAA,SAAS,EAACA,SAAhE;AAA2EC,YAAAA,YAAY,EAAClM,MAAM,CAACiM,SAAD;AAA9F,WAA3B;AAAwI,SAArL;AACA;;AAED,UAAIL,gBAAgB,CAACrD,OAArB,EAA8B;AAC7B7C,QAAAA,WAAW,CAACyG,OAAZ,GAAsB,IAAIvD,OAAJ,CAAY,IAAZ,EAAkBlB,MAAlB,EAA0BkE,gBAAgB,CAACrD,OAA3C,EAAoDqD,gBAAgB,CAACI,SAArE,EACnB,CAAC;AAACD,UAAAA,iBAAiB,EAACH,gBAAgB,CAACG,iBAApC;AACDE,UAAAA,SAAS,EAAChM,KAAK,CAACY,iBAAN,CAAwBH,IADjC;AAEDwL,UAAAA,YAAY,EAAClM,MAAM,CAACC,KAAK,CAACY,iBAAP;AAFlB,SAAD,CADmB,CAAtB;AAIA,OA1BmE,CA4BpE;;;AACA,WAAKuL,aAAL,CAAmB1G,WAAnB;;AACA,WAAK2G,iBAAL,CAAuB3G,WAAvB;AACA,KA/BD;AAiCA;;;AACAsD,IAAAA,UAAU,CAAClG,SAAX,CAAqBwJ,WAArB,GAAmC,UAASX,MAAT,EAAiBY,kBAAjB,EAAqC;AACvE,WAAKpE,MAAL,CAAY,oBAAZ,EAAkCwD,MAAlC,EAA0CY,kBAA1C;;AAEA,UAAI,CAAC,KAAKtC,SAAV,EACG,MAAM,IAAIlK,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACqB,aAAP,EAAsB,CAAC,eAAD,CAAtB,CAAhB,CAAN;AAEH,UAAIoE,WAAW,GAAG,IAAIhD,WAAJ,CAAgB/D,YAAY,CAACU,WAA7B,CAAlB;AACAqG,MAAAA,WAAW,CAACzB,MAAZ,GAAqB,CAAC0H,MAAD,CAArB;;AAEA,UAAIY,kBAAkB,CAACV,SAAvB,EAAkC;AACjCnG,QAAAA,WAAW,CAAC8G,QAAZ,GAAuB,YAAW;AAACD,UAAAA,kBAAkB,CAACV,SAAnB,CAA6B;AAACE,YAAAA,iBAAiB,EAACQ,kBAAkB,CAACR;AAAtC,WAA7B;AAAwF,SAA3H;AACA;;AACD,UAAIQ,kBAAkB,CAAChE,OAAvB,EAAgC;AAC/B7C,QAAAA,WAAW,CAACyG,OAAZ,GAAsB,IAAIvD,OAAJ,CAAY,IAAZ,EAAkBlB,MAAlB,EAA0B6E,kBAAkB,CAAChE,OAA7C,EAAsDgE,kBAAkB,CAACP,SAAzE,EAClB,CAAC;AAACD,UAAAA,iBAAiB,EAACQ,kBAAkB,CAACR,iBAAtC;AACFE,UAAAA,SAAS,EAAChM,KAAK,CAACa,mBAAN,CAA0BJ,IADlC;AAEFwL,UAAAA,YAAY,EAAClM,MAAM,CAACC,KAAK,CAACa,mBAAP;AAFjB,SAAD,CADkB,CAAtB;AAIA,OAjBsE,CAmBvE;;;AACA,WAAKsL,aAAL,CAAmB1G,WAAnB;;AACA,WAAK2G,iBAAL,CAAuB3G,WAAvB;AACA,KAtBD;;AAwBAsD,IAAAA,UAAU,CAAClG,SAAX,CAAqBwF,IAArB,GAA4B,UAAUpC,OAAV,EAAmB;AAC9C,WAAKiC,MAAL,CAAY,aAAZ,EAA2BjC,OAA3B;;AAEAR,MAAAA,WAAW,GAAG,IAAIhD,WAAJ,CAAgB/D,YAAY,CAACG,OAA7B,CAAd;AACA4G,MAAAA,WAAW,CAACvB,cAAZ,GAA6B+B,OAA7B;;AAEA,UAAI,KAAK+D,SAAT,EAAoB;AACnB;AACA;AACA;AACA,YAAI/D,OAAO,CAAC7B,GAAR,GAAc,CAAlB,EAAqB;AACrB,eAAK+H,aAAL,CAAmB1G,WAAnB;AACC,SAFD,MAEO,IAAI,KAAK6E,kBAAT,EAA6B;AACpC,eAAKV,gBAAL,CAAsBnE,WAAtB,IAAqC,KAAK6E,kBAAL,CAAwB7E,WAAW,CAACvB,cAApC,CAArC;AACC;;AACF,aAAKkI,iBAAL,CAAuB3G,WAAvB;AACC,OAVD,MAUO;AACN;AACA;AACA,YAAI,KAAKoF,aAAL,IAAsB,KAAKE,sBAA/B,EAAuD;AACtD;AACA,cAAIyB,YAAY,GAAGC,MAAM,CAAC9M,IAAP,CAAY,KAAK+J,aAAjB,EAAgCxH,MAAhC,GAAyC,KAAKuH,mBAAL,CAAyBvH,MAArF;;AACA,cAAIsK,YAAY,GAAG,KAAKxB,sBAAxB,EAAgD;AAC/C,kBAAM,IAAIlL,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAAC2B,WAAP,EAAoB,CAAC,KAAKqJ,sBAAN,CAApB,CAAhB,CAAN;AACA,WAFD,MAEO;AACN,gBAAI/E,OAAO,CAAC7B,GAAR,GAAc,CAAlB,EAAqB;AACpB;AACA,mBAAK+H,aAAL,CAAmB1G,WAAnB;AACA,aAHD,MAGO;AACNA,cAAAA,WAAW,CAACiH,QAAZ,GAAuB,EAAE,KAAK5C,SAA9B;;AACA,mBAAKL,mBAAL,CAAyBkD,IAAzB,CAA8BlH,WAA9B;AACA;AACD;AACD,SAdD,MAcO;AACN,gBAAM,IAAI3F,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACqB,aAAP,EAAsB,CAAC,eAAD,CAAtB,CAAhB,CAAN;AACA;AACD;AACD,KArCD;;AAuCA0H,IAAAA,UAAU,CAAClG,SAAX,CAAqB+J,UAArB,GAAkC,YAAY;AAC7C,WAAK1E,MAAL,CAAY,mBAAZ;;AAEA,UAAI,KAAK2C,aAAT,EAAwB;AACvB;AACA;AACA,aAAKC,iBAAL,CAAuBpC,MAAvB;;AACA,aAAKoC,iBAAL,GAAyB,IAAzB;AACA,aAAKD,aAAL,GAAqB,KAArB;AACA;;AAED,UAAI,CAAC,KAAKzC,MAAV,EACC,MAAM,IAAItI,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACqB,aAAP,EAAsB,CAAC,6BAAD,CAAtB,CAAhB,CAAN;AAEDoE,MAAAA,WAAW,GAAG,IAAIhD,WAAJ,CAAgB/D,YAAY,CAACc,UAA7B,CAAd,CAd6C,CAgB7C;AACA;AACA;;AACA,WAAKoK,gBAAL,CAAsBnE,WAAtB,IAAqCrF,KAAK,CAAC,KAAK+H,aAAN,EAAqB,IAArB,CAA1C;;AAEA,WAAKiE,iBAAL,CAAuB3G,WAAvB;AACA,KAtBD;;AAwBAsD,IAAAA,UAAU,CAAClG,SAAX,CAAqBgK,WAArB,GAAmC,YAAY;AAC9C,UAAK,KAAK3B,YAAL,KAAsB,IAA3B,EAAkC;AACjC,aAAKhD,MAAL,CAAY,oBAAZ,EAAkC,IAAI4E,IAAJ,EAAlC;;AACA,aAAK5E,MAAL,CAAY,uCAAZ,EAAqD,KAAKwB,aAAL,CAAmBxH,MAAxE;;AACA,aAAK,IAAItC,GAAT,IAAgB,KAAK8J,aAArB;AACC,eAAKxB,MAAL,CAAY,gBAAZ,EAA6BtI,GAA7B,EAAkC,KAAK8J,aAAL,CAAmB9J,GAAnB,CAAlC;AADD;;AAEA,aAAK,IAAIA,GAAT,IAAgB,KAAK+J,iBAArB;AACC,eAAKzB,MAAL,CAAY,oBAAZ,EAAiCtI,GAAjC,EAAsC,KAAK+J,iBAAL,CAAuB/J,GAAvB,CAAtC;AADD;;AAGA,eAAO,KAAKsL,YAAZ;AACA;AACD,KAXD;;AAaAnC,IAAAA,UAAU,CAAClG,SAAX,CAAqBkK,UAArB,GAAkC,YAAY;AAC7C,UAAK,KAAK7B,YAAL,KAAsB,IAA3B,EAAkC;AACjC,aAAKA,YAAL,GAAoB,EAApB;AACA;;AACD,WAAKhD,MAAL,CAAY,mBAAZ,EAAiC,IAAI4E,IAAJ,EAAjC,EAA6CtO,OAA7C;AACA,KALD;;AAOAuK,IAAAA,UAAU,CAAClG,SAAX,CAAqBmK,SAArB,GAAiC,YAAY;AAC5C,aAAO,KAAK9B,YAAZ;AACA,KAFD;;AAIAnC,IAAAA,UAAU,CAAClG,SAAX,CAAqB2I,UAArB,GAAkC,UAAUyB,KAAV,EAAiB;AAClD;AACA,UAAI,KAAK/C,cAAL,CAAoBgD,MAAxB,EAAgC;AAC5B,YAAIC,QAAQ,GAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAf;AACAD,QAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,KAAd;AACAF,QAAAA,KAAK,GAAGE,QAAQ,CAACE,IAAT,CAAc,GAAd,CAAR;AACH;;AACD,WAAK/D,MAAL,GAAc2D,KAAd;AACA,WAAKjD,SAAL,GAAiB,KAAjB;;AAIA,UAAI,KAAKE,cAAL,CAAoB5G,WAApB,GAAkC,CAAtC,EAAyC;AACxC,aAAK8E,MAAL,GAAc,IAAIgB,SAAJ,CAAc6D,KAAd,EAAqB,CAAC,UAAD,CAArB,CAAd;AACA,OAFD,MAEO;AACN,aAAK7E,MAAL,GAAc,IAAIgB,SAAJ,CAAc6D,KAAd,EAAqB,CAAC,MAAD,CAArB,CAAd;AACA;;AACD,WAAK7E,MAAL,CAAYkF,UAAZ,GAAyB,aAAzB;AACA,WAAKlF,MAAL,CAAYmF,MAAZ,GAAqBnN,KAAK,CAAC,KAAKoN,eAAN,EAAuB,IAAvB,CAA1B;AACA,WAAKpF,MAAL,CAAYqF,SAAZ,GAAwBrN,KAAK,CAAC,KAAKsN,kBAAN,EAA0B,IAA1B,CAA7B;AACA,WAAKtF,MAAL,CAAYuF,OAAZ,GAAsBvN,KAAK,CAAC,KAAKwN,gBAAN,EAAwB,IAAxB,CAA3B;AACA,WAAKxF,MAAL,CAAYyF,OAAZ,GAAsBzN,KAAK,CAAC,KAAK0N,gBAAN,EAAwB,IAAxB,CAA3B;AAEA,WAAKpD,UAAL,GAAkB,IAAInD,MAAJ,CAAW,IAAX,EAAiBE,MAAjB,EAAyB,KAAKyC,cAAL,CAAoBjF,iBAA7C,CAAlB;AACA,WAAK0F,aAAL,GAAqB,IAAIpD,MAAJ,CAAW,IAAX,EAAiBE,MAAjB,EAAyB,KAAKyC,cAAL,CAAoBjF,iBAA7C,CAArB;;AACA,UAAI,KAAKwF,eAAT,EAA0B;AACzB,aAAKA,eAAL,CAAqB/B,MAArB;;AACA,aAAK+B,eAAL,GAAuB,IAAvB;AACA;;AACD,WAAKA,eAAL,GAAuB,IAAI9B,OAAJ,CAAY,IAAZ,EAAkBlB,MAAlB,EAA0B,KAAKyC,cAAL,CAAoB5B,OAA9C,EAAuD,KAAKH,aAA5D,EAA4E,CAACnI,KAAK,CAACW,eAAN,CAAsBF,IAAvB,EAA6BV,MAAM,CAACC,KAAK,CAACW,eAAP,CAAnC,CAA5E,CAAvB;AACA,KA9BD,CAn6BiC,CAo8BjC;AACA;AACA;AACA;AACA;;;AACAoI,IAAAA,UAAU,CAAClG,SAAX,CAAqBuJ,iBAArB,GAAyC,UAAUnG,OAAV,EAAmB;AAC3D,WAAKuD,UAAL,CAAgBmD,IAAhB,CAAqB1G,OAArB,EAD2D,CAE3D;;;AACA,UAAI,KAAK+D,SAAT,EAAoB;AACnB,aAAK+D,cAAL;AACA;AACD,KAND;;AAQAhF,IAAAA,UAAU,CAAClG,SAAX,CAAqBmL,KAArB,GAA6B,UAASC,MAAT,EAAiBxI,WAAjB,EAA8B;AAC1D,UAAIyI,aAAa,GAAG;AAACxL,QAAAA,IAAI,EAAC+C,WAAW,CAAC/C,IAAlB;AAAwBU,QAAAA,iBAAiB,EAACqC,WAAW,CAACrC,iBAAtD;AAAyE5E,QAAAA,OAAO,EAAC;AAAjF,OAApB;;AAEA,cAAOiH,WAAW,CAAC/C,IAAnB;AACE,aAAKhE,YAAY,CAACG,OAAlB;AACC,cAAG4G,WAAW,CAAC0I,cAAf,EACCD,aAAa,CAACC,cAAd,GAA+B,IAA/B,CAFF,CAIC;;AACAD,UAAAA,aAAa,CAAChK,cAAd,GAA+B,EAA/B;AACA,cAAIkK,GAAG,GAAG,EAAV;AACA,cAAIC,YAAY,GAAG5I,WAAW,CAACvB,cAAZ,CAA2BP,YAA9C;;AACA,eAAK,IAAI1B,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACoM,YAAY,CAACnM,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AAC3C,gBAAIoM,YAAY,CAACpM,CAAD,CAAZ,IAAmB,GAAvB,EACEmM,GAAG,GAAGA,GAAG,GAAC,GAAJ,GAAQC,YAAY,CAACpM,CAAD,CAAZ,CAAgBiF,QAAhB,CAAyB,EAAzB,CAAd,CADF,KAGEkH,GAAG,GAAGA,GAAG,GAACC,YAAY,CAACpM,CAAD,CAAZ,CAAgBiF,QAAhB,CAAyB,EAAzB,CAAV;AACA;;AACDgH,UAAAA,aAAa,CAAChK,cAAd,CAA6BoK,UAA7B,GAA0CF,GAA1C;AAEAF,UAAAA,aAAa,CAAChK,cAAd,CAA6BE,GAA7B,GAAmCqB,WAAW,CAACvB,cAAZ,CAA2BE,GAA9D;AACA8J,UAAAA,aAAa,CAAChK,cAAd,CAA6BR,eAA7B,GAA+C+B,WAAW,CAACvB,cAAZ,CAA2BR,eAA1E;AACA,cAAI+B,WAAW,CAACvB,cAAZ,CAA2BC,SAA/B,EACC+J,aAAa,CAAChK,cAAd,CAA6BC,SAA7B,GAAyC,IAAzC;AACD,cAAIsB,WAAW,CAACvB,cAAZ,CAA2BG,QAA/B,EACC6J,aAAa,CAAChK,cAAd,CAA6BG,QAA7B,GAAwC,IAAxC,CArBF,CAuBC;;AACA,cAAK4J,MAAM,CAAC9L,OAAP,CAAe,OAAf,MAA4B,CAAjC,EAAqC;AACpC,gBAAKsD,WAAW,CAACiH,QAAZ,KAAyBrJ,SAA9B,EACCoC,WAAW,CAACiH,QAAZ,GAAuB,EAAE,KAAK5C,SAA9B;AACDoE,YAAAA,aAAa,CAACxB,QAAd,GAAyBjH,WAAW,CAACiH,QAArC;AACA;;AACD;;AAEF;AACC,gBAAM5M,KAAK,CAACC,MAAM,CAACC,KAAK,CAACwB,mBAAP,EAA4B,CAAC5B,GAAD,EAAMsO,aAAN,CAA5B,CAAP,CAAX;AAjCF;;AAmCA7E,MAAAA,YAAY,CAACkF,OAAb,CAAqBN,MAAM,GAAC,KAAK1E,SAAZ,GAAsB9D,WAAW,CAACrC,iBAAvD,EAA0EoL,IAAI,CAACC,SAAL,CAAeP,aAAf,CAA1E;AACA,KAvCD;;AAyCAnF,IAAAA,UAAU,CAAClG,SAAX,CAAqBkH,OAArB,GAA+B,UAASnK,GAAT,EAAc;AAC5C,UAAI8O,KAAK,GAAGrF,YAAY,CAACsF,OAAb,CAAqB/O,GAArB,CAAZ;AACA,UAAIsO,aAAa,GAAGM,IAAI,CAACI,KAAL,CAAWF,KAAX,CAApB;AAEA,UAAIjJ,WAAW,GAAG,IAAIhD,WAAJ,CAAgByL,aAAa,CAACxL,IAA9B,EAAoCwL,aAApC,CAAlB;;AAEA,cAAOA,aAAa,CAACxL,IAArB;AACE,aAAKhE,YAAY,CAACG,OAAlB;AACC;AACA,cAAIuP,GAAG,GAAGF,aAAa,CAAChK,cAAd,CAA6BoK,UAAvC;AACA,cAAI/J,MAAM,GAAG,IAAID,WAAJ,CAAiB8J,GAAG,CAAClM,MAAL,GAAa,CAA7B,CAAb;AACA,cAAIyC,UAAU,GAAG,IAAIf,UAAJ,CAAeW,MAAf,CAAjB;AACA,cAAItC,CAAC,GAAG,CAAR;;AACA,iBAAOmM,GAAG,CAAClM,MAAJ,IAAc,CAArB,EAAwB;AACvB,gBAAI2M,CAAC,GAAGC,QAAQ,CAACV,GAAG,CAAC/L,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAD,EAAsB,EAAtB,CAAhB;AACA+L,YAAAA,GAAG,GAAGA,GAAG,CAAC/L,SAAJ,CAAc,CAAd,EAAiB+L,GAAG,CAAClM,MAArB,CAAN;AACAyC,YAAAA,UAAU,CAAC1C,CAAC,EAAF,CAAV,GAAkB4M,CAAlB;AACA;;AACD,cAAI3K,cAAc,GAAG,IAAI/F,IAAI,CAACC,IAAL,CAAU8H,OAAd,CAAsBvB,UAAtB,CAArB;AAEAT,UAAAA,cAAc,CAACE,GAAf,GAAqB8J,aAAa,CAAChK,cAAd,CAA6BE,GAAlD;AACAF,UAAAA,cAAc,CAACR,eAAf,GAAiCwK,aAAa,CAAChK,cAAd,CAA6BR,eAA9D;AACA,cAAIwK,aAAa,CAAChK,cAAd,CAA6BC,SAAjC,EACCD,cAAc,CAACC,SAAf,GAA2B,IAA3B;AACD,cAAI+J,aAAa,CAAChK,cAAd,CAA6BG,QAAjC,EACCH,cAAc,CAACG,QAAf,GAA0B,IAA1B;AACDoB,UAAAA,WAAW,CAACvB,cAAZ,GAA6BA,cAA7B;AAEA;;AAEF;AACE,gBAAMpE,KAAK,CAACC,MAAM,CAACC,KAAK,CAACwB,mBAAP,EAA4B,CAAC5B,GAAD,EAAM8O,KAAN,CAA5B,CAAP,CAAX;AAzBH;;AA4BA,UAAI9O,GAAG,CAACuC,OAAJ,CAAY,UAAQ,KAAKoH,SAAzB,MAAwC,CAA5C,EAA+C;AAC9C9D,QAAAA,WAAW,CAACvB,cAAZ,CAA2BC,SAA3B,GAAuC,IAAvC;AACA,aAAKuF,aAAL,CAAmBjE,WAAW,CAACrC,iBAA/B,IAAoDqC,WAApD;AACA,OAHD,MAGO,IAAI7F,GAAG,CAACuC,OAAJ,CAAY,cAAY,KAAKoH,SAA7B,MAA4C,CAAhD,EAAmD;AACzD,aAAKI,iBAAL,CAAuBlE,WAAW,CAACrC,iBAAnC,IAAwDqC,WAAxD;AACA;AACD,KAxCD;;AA0CAsD,IAAAA,UAAU,CAAClG,SAAX,CAAqBkL,cAArB,GAAsC,YAAY;AACjD,UAAI9H,OAAO,GAAG,IAAd,CADiD,CAEjD;;AACA,UAAI8I,IAAI,GAAG,KAAKvF,UAAL,CAAgBwF,OAAhB,EAAX,CAHiD,CAKjD;;;AACA,aAAQ/I,OAAO,GAAG8I,IAAI,CAACE,GAAL,EAAlB,EAA+B;AAC9B,aAAKC,YAAL,CAAkBjJ,OAAlB,EAD8B,CAE9B;;;AACA,YAAI,KAAK2D,gBAAL,CAAsB3D,OAAtB,CAAJ,EAAoC;AACnC,eAAK2D,gBAAL,CAAsB3D,OAAtB;;AACA,iBAAO,KAAK2D,gBAAL,CAAsB3D,OAAtB,CAAP;AACA;AACD;AACD,KAdD;AAgBA;;;;;;;AAKA8C,IAAAA,UAAU,CAAClG,SAAX,CAAqBsJ,aAArB,GAAqC,UAAU1G,WAAV,EAAuB;AAC3D,UAAI+G,YAAY,GAAGC,MAAM,CAAC9M,IAAP,CAAY,KAAK+J,aAAjB,EAAgCxH,MAAnD;AACA,UAAIsK,YAAY,GAAG,KAAKvC,oBAAxB,EACC,MAAMnK,KAAK,CAAE,uBAAqB0M,YAAvB,CAAX;;AAED,aAAM,KAAK9C,aAAL,CAAmB,KAAKG,mBAAxB,MAAiDxG,SAAvD,EAAkE;AACjE,aAAKwG,mBAAL;AACA;;AACDpE,MAAAA,WAAW,CAACrC,iBAAZ,GAAgC,KAAKyG,mBAArC;AACA,WAAKH,aAAL,CAAmBjE,WAAW,CAACrC,iBAA/B,IAAoDqC,WAApD;;AACA,UAAIA,WAAW,CAAC/C,IAAZ,KAAqBhE,YAAY,CAACG,OAAtC,EAA+C;AAC9C,aAAKmP,KAAL,CAAW,OAAX,EAAoBvI,WAApB;AACA;;AACD,UAAI,KAAKoE,mBAAL,KAA6B,KAAKI,oBAAtC,EAA4D;AAC3D,aAAKJ,mBAAL,GAA2B,CAA3B;AACA;AACD,KAhBD;AAkBA;;;;;;AAIAd,IAAAA,UAAU,CAAClG,SAAX,CAAqB2K,eAArB,GAAuC,YAAY;AAClD;AACA,UAAI/H,WAAW,GAAG,IAAIhD,WAAJ,CAAgB/D,YAAY,CAACC,OAA7B,EAAsC,KAAKuL,cAA3C,CAAlB;AACAzE,MAAAA,WAAW,CAACjC,QAAZ,GAAuB,KAAKA,QAA5B;;AACA,WAAK0L,YAAL,CAAkBzJ,WAAlB;AACA,KALD;AAOA;;;;;;AAIAsD,IAAAA,UAAU,CAAClG,SAAX,CAAqB6K,kBAArB,GAA0C,UAAUyB,KAAV,EAAiB;AAC1D,WAAKjH,MAAL,CAAY,2BAAZ,EAAyCiH,KAAK,CAACC,IAA/C;;AACA,UAAIC,QAAQ,GAAG,KAAKC,gBAAL,CAAsBH,KAAK,CAACC,IAA5B,CAAf;;AACA,WAAK,IAAInN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoN,QAAQ,CAACnN,MAA7B,EAAqCD,CAAC,IAAE,CAAxC,EAA2C;AACvC,aAAKsN,cAAL,CAAoBF,QAAQ,CAACpN,CAAD,CAA5B;AACH;AACD,KAND;;AAQA8G,IAAAA,UAAU,CAAClG,SAAX,CAAqByM,gBAArB,GAAwC,UAASF,IAAT,EAAe;AACtD,UAAII,SAAS,GAAG,IAAI5L,UAAJ,CAAewL,IAAf,CAAhB;AACA,UAAIC,QAAQ,GAAG,EAAf;;AACG,UAAI,KAAKpE,aAAT,EAAwB;AACpB,YAAIwE,OAAO,GAAG,IAAI7L,UAAJ,CAAe,KAAKqH,aAAL,CAAmB/I,MAAnB,GAA0BsN,SAAS,CAACtN,MAAnD,CAAd;AACAuN,QAAAA,OAAO,CAAC7K,GAAR,CAAY,KAAKqG,aAAjB;AACAwE,QAAAA,OAAO,CAAC7K,GAAR,CAAY4K,SAAZ,EAAsB,KAAKvE,aAAL,CAAmB/I,MAAzC;AACAsN,QAAAA,SAAS,GAAGC,OAAZ;AACA,eAAO,KAAKxE,aAAZ;AACH;;AACJ,UAAI;AACA,YAAI7E,MAAM,GAAG,CAAb;;AACA,eAAMA,MAAM,GAAGoJ,SAAS,CAACtN,MAAzB,EAAiC;AAC7B,cAAIwN,MAAM,GAAGxK,aAAa,CAACsK,SAAD,EAAWpJ,MAAX,CAA1B;AACA,cAAIX,WAAW,GAAGiK,MAAM,CAAC,CAAD,CAAxB;AACAtJ,UAAAA,MAAM,GAAGsJ,MAAM,CAAC,CAAD,CAAf;;AACA,cAAIjK,WAAW,KAAK,IAApB,EAA0B;AACtB4J,YAAAA,QAAQ,CAAC1C,IAAT,CAAclH,WAAd;AACH,WAFD,MAEO;AACH;AACH;AACJ;;AACD,YAAIW,MAAM,GAAGoJ,SAAS,CAACtN,MAAvB,EAA+B;AAC9B,eAAK+I,aAAL,GAAqBuE,SAAS,CAACrJ,QAAV,CAAmBC,MAAnB,CAArB;AACA;AACJ,OAfD,CAeE,OAAOvE,KAAP,EAAc;AACf,YAAI8N,UAAU,GAAK9N,KAAK,CAAChC,cAAN,CAAqB,OAArB,KAAiC,WAAlC,GAAiDgC,KAAK,CAAC+N,KAAN,CAAY1I,QAAZ,EAAjD,GAA0E,0BAA5F;;AACA,aAAKiB,aAAL,CAAmBnI,KAAK,CAACe,cAAN,CAAqBN,IAAxC,EAA+CV,MAAM,CAACC,KAAK,CAACe,cAAP,EAAuB,CAACc,KAAK,CAACoE,OAAP,EAAe0J,UAAf,CAAvB,CAArD;;AACA;AACA;;AACD,aAAON,QAAP;AACA,KA/BD;;AAiCAtG,IAAAA,UAAU,CAAClG,SAAX,CAAqB0M,cAArB,GAAsC,UAAS9J,WAAT,EAAsB;AAE3D,WAAKyC,MAAL,CAAY,uBAAZ,EAAqCzC,WAArC;;AAEA,UAAI;AACH,gBAAOA,WAAW,CAAC/C,IAAnB;AACA,eAAKhE,YAAY,CAACE,OAAlB;AACC,iBAAK6L,eAAL,CAAqB/B,MAArB;;AACA,gBAAI,KAAKoC,iBAAT,EACC,KAAKA,iBAAL,CAAuBpC,MAAvB,GAHF,CAKC;;AACA,gBAAI,KAAKwB,cAAL,CAAoBnF,YAAxB,EAAsC;AACrC,mBAAK,IAAInF,GAAT,IAAgB,KAAK8J,aAArB,EAAoC;AACnC,oBAAImG,WAAW,GAAG,KAAKnG,aAAL,CAAmB9J,GAAnB,CAAlB;AACAyJ,gBAAAA,YAAY,CAACyG,UAAb,CAAwB,UAAQ,KAAKvG,SAAb,GAAuBsG,WAAW,CAACzM,iBAA3D;AACA;;AACD,mBAAKsG,aAAL,GAAqB,EAArB;;AAEA,mBAAK,IAAI9J,GAAT,IAAgB,KAAK+J,iBAArB,EAAwC;AACvC,oBAAIoG,eAAe,GAAG,KAAKpG,iBAAL,CAAuB/J,GAAvB,CAAtB;AACAyJ,gBAAAA,YAAY,CAACyG,UAAb,CAAwB,cAAY,KAAKvG,SAAjB,GAA2BwG,eAAe,CAAC3M,iBAAnE;AACA;;AACD,mBAAKuG,iBAAL,GAAyB,EAAzB;AACA,aAlBF,CAmBC;;;AACA,gBAAIlE,WAAW,CAACG,UAAZ,KAA2B,CAA/B,EAAkC;AAEjC,mBAAKoE,SAAL,GAAiB,IAAjB,CAFiC,CAGjC;;AAEA,kBAAI,KAAKE,cAAL,CAAoBqB,IAAxB,EACO,KAAKpB,SAAL,GAAiB,KAAKD,cAAL,CAAoBqB,IAApB,CAAyBrJ,MAA1C;AAEP,aARD,MAQO;AACN,mBAAKiG,aAAL,CAAmBnI,KAAK,CAACgB,kBAAN,CAAyBP,IAA5C,EAAmDV,MAAM,CAACC,KAAK,CAACgB,kBAAP,EAA2B,CAACyE,WAAW,CAACG,UAAb,EAAyBhE,UAAU,CAAC6D,WAAW,CAACG,UAAb,CAAnC,CAA3B,CAAzD;;AACA;AACA,aA/BF,CAiCC;;;AACA,gBAAIoK,iBAAiB,GAAG,EAAxB;;AACA,iBAAK,IAAIC,KAAT,IAAkB,KAAKvG,aAAvB,EAAsC;AACrC,kBAAI,KAAKA,aAAL,CAAmB7J,cAAnB,CAAkCoQ,KAAlC,CAAJ,EACCD,iBAAiB,CAACrD,IAAlB,CAAuB,KAAKjD,aAAL,CAAmBuG,KAAnB,CAAvB;AACD,aAtCF,CAwCC;;;AACA,gBAAI,KAAKxG,mBAAL,CAAyBvH,MAAzB,GAAkC,CAAtC,EAAyC;AACxC,kBAAIgO,GAAG,GAAG,IAAV;;AACA,kBAAInB,IAAI,GAAG,KAAKtF,mBAAL,CAAyBuF,OAAzB,EAAX;;AACA,qBAAQkB,GAAG,GAAGnB,IAAI,CAACE,GAAL,EAAd,EAA2B;AAC1Be,gBAAAA,iBAAiB,CAACrD,IAAlB,CAAuBuD,GAAvB;AACA,oBAAI,KAAK5F,kBAAT,EACC,KAAKV,gBAAL,CAAsBsG,GAAtB,IAA6B,KAAK5F,kBAAL,CAAwB4F,GAAG,CAAChM,cAA5B,CAA7B;AACD;AACD,aAjDF,CAmDC;;;AACA,gBAAI8L,iBAAiB,GAAGA,iBAAiB,CAACG,IAAlB,CAAuB,UAASC,CAAT,EAAWC,CAAX,EAAc;AAAC,qBAAOD,CAAC,CAAC1D,QAAF,GAAa2D,CAAC,CAAC3D,QAAtB;AAAgC,aAAtE,CAAxB;;AACA,iBAAK,IAAIzK,CAAC,GAAC,CAAN,EAAS4D,GAAG,GAACmK,iBAAiB,CAAC9N,MAApC,EAA4CD,CAAC,GAAC4D,GAA9C,EAAmD5D,CAAC,EAApD,EAAwD;AACvD,kBAAI4N,WAAW,GAAGG,iBAAiB,CAAC/N,CAAD,CAAnC;;AACA,kBAAI4N,WAAW,CAACnN,IAAZ,IAAoBhE,YAAY,CAACG,OAAjC,IAA4CgR,WAAW,CAAC1B,cAA5D,EAA4E;AAC3E,oBAAImC,aAAa,GAAG,IAAI7N,WAAJ,CAAgB/D,YAAY,CAACM,MAA7B,EAAqC;AAACoE,kBAAAA,iBAAiB,EAACyM,WAAW,CAACzM;AAA/B,iBAArC,CAApB;;AACA,qBAAKgJ,iBAAL,CAAuBkE,aAAvB;AACA,eAHD,MAGO;AACN,qBAAKlE,iBAAL,CAAuByD,WAAvB;AACD;AACA,aA7DF,CA+DC;AACI;AACA;;;AACJ,gBAAI,KAAK3F,cAAL,CAAoB0B,SAAxB,EAAmC;AAClC,mBAAK1B,cAAL,CAAoB0B,SAApB,CAA8B;AAACE,gBAAAA,iBAAiB,EAAC,KAAK5B,cAAL,CAAoB4B;AAAvC,eAA9B;AACA;;AAED,gBAAIyE,WAAW,GAAG,KAAlB;;AACA,gBAAI,KAAK1F,aAAT,EAAwB;AACvB0F,cAAAA,WAAW,GAAG,IAAd;AACA,mBAAK3F,kBAAL,GAA0B,CAA1B;AACA,mBAAKC,aAAL,GAAqB,KAArB;AACA,aA3EF,CA6EC;;;AACA,iBAAK2F,UAAL,CAAgBD,WAAhB,EAA6B,KAAKjH,MAAlC,EA9ED,CAgFC;;;AACA,iBAAKyE,cAAL;;AACA;;AAED,eAAKrP,YAAY,CAACG,OAAlB;AACC,iBAAK4R,eAAL,CAAqBhL,WAArB;;AACA;;AAED,eAAK/G,YAAY,CAACI,MAAlB;AACC,gBAAI+Q,WAAW,GAAG,KAAKnG,aAAL,CAAmBjE,WAAW,CAACrC,iBAA/B,CAAlB,CADD,CAEE;;AACD,gBAAIyM,WAAJ,EAAiB;AAChB,qBAAO,KAAKnG,aAAL,CAAmBjE,WAAW,CAACrC,iBAA/B,CAAP;AACAiG,cAAAA,YAAY,CAACyG,UAAb,CAAwB,UAAQ,KAAKvG,SAAb,GAAuB9D,WAAW,CAACrC,iBAA3D;AACA,kBAAI,KAAKkH,kBAAT,EACC,KAAKA,kBAAL,CAAwBuF,WAAW,CAAC3L,cAApC;AACD;;AACD;;AAED,eAAKxF,YAAY,CAACK,MAAlB;AACC,gBAAI8Q,WAAW,GAAG,KAAKnG,aAAL,CAAmBjE,WAAW,CAACrC,iBAA/B,CAAlB,CADD,CAEC;;AACA,gBAAIyM,WAAJ,EAAiB;AAChBA,cAAAA,WAAW,CAAC1B,cAAZ,GAA6B,IAA7B;AACA,kBAAImC,aAAa,GAAG,IAAI7N,WAAJ,CAAgB/D,YAAY,CAACM,MAA7B,EAAqC;AAACoE,gBAAAA,iBAAiB,EAACqC,WAAW,CAACrC;AAA/B,eAArC,CAApB;AACA,mBAAK4K,KAAL,CAAW,OAAX,EAAoB6B,WAApB;;AACA,mBAAKzD,iBAAL,CAAuBkE,aAAvB;AACA;;AACD;;AAED,eAAK5R,YAAY,CAACM,MAAlB;AACC,gBAAI+Q,eAAe,GAAG,KAAKpG,iBAAL,CAAuBlE,WAAW,CAACrC,iBAAnC,CAAtB;AACAiG,YAAAA,YAAY,CAACyG,UAAb,CAAwB,cAAY,KAAKvG,SAAjB,GAA2B9D,WAAW,CAACrC,iBAA/D,EAFD,CAGC;;AACA,gBAAI2M,eAAJ,EAAqB;AACpB,mBAAKW,eAAL,CAAqBX,eAArB;;AACA,qBAAO,KAAKpG,iBAAL,CAAuBlE,WAAW,CAACrC,iBAAnC,CAAP;AACA,aAPF,CAQC;;;AACA,gBAAIuN,cAAc,GAAG,IAAIlO,WAAJ,CAAgB/D,YAAY,CAACO,OAA7B,EAAsC;AAACmE,cAAAA,iBAAiB,EAACqC,WAAW,CAACrC;AAA/B,aAAtC,CAArB;;AACA,iBAAKgJ,iBAAL,CAAuBuE,cAAvB;;AAGA;;AAED,eAAKjS,YAAY,CAACO,OAAlB;AACC,gBAAI4Q,WAAW,GAAG,KAAKnG,aAAL,CAAmBjE,WAAW,CAACrC,iBAA/B,CAAlB;AACA,mBAAO,KAAKsG,aAAL,CAAmBjE,WAAW,CAACrC,iBAA/B,CAAP;AACAiG,YAAAA,YAAY,CAACyG,UAAb,CAAwB,UAAQ,KAAKvG,SAAb,GAAuB9D,WAAW,CAACrC,iBAA3D;AACA,gBAAI,KAAKkH,kBAAT,EACC,KAAKA,kBAAL,CAAwBuF,WAAW,CAAC3L,cAApC;AACD;;AAED,eAAKxF,YAAY,CAACS,MAAlB;AACC,gBAAI0Q,WAAW,GAAG,KAAKnG,aAAL,CAAmBjE,WAAW,CAACrC,iBAA/B,CAAlB;;AACA,gBAAIyM,WAAJ,EAAiB;AAChB,kBAAGA,WAAW,CAAC3D,OAAf,EACC2D,WAAW,CAAC3D,OAAZ,CAAoBxD,MAApB,GAFe,CAGhB;;AACQ,kBAAIjD,WAAW,CAACG,UAAZ,CAAuB,CAAvB,MAA8B,IAAlC,EAAwC;AAC/C,oBAAIiK,WAAW,CAAC9D,SAAhB,EAA2B;AAC1B8D,kBAAAA,WAAW,CAAC9D,SAAZ,CAAsBtG,WAAW,CAACG,UAAlC;AACA;AACD,eAJO,MAID,IAAIiK,WAAW,CAACjE,SAAhB,EAA2B;AACjCiE,gBAAAA,WAAW,CAACjE,SAAZ,CAAsBnG,WAAW,CAACG,UAAlC;AACA;;AACD,qBAAO,KAAK8D,aAAL,CAAmBjE,WAAW,CAACrC,iBAA/B,CAAP;AACA;;AACD;;AAED,eAAK1E,YAAY,CAACW,QAAlB;AACC,gBAAIwQ,WAAW,GAAG,KAAKnG,aAAL,CAAmBjE,WAAW,CAACrC,iBAA/B,CAAlB;;AACA,gBAAIyM,WAAJ,EAAiB;AAChB,kBAAIA,WAAW,CAAC3D,OAAhB,EACC2D,WAAW,CAAC3D,OAAZ,CAAoBxD,MAApB;;AACD,kBAAImH,WAAW,CAACtD,QAAhB,EAA0B;AACzBsD,gBAAAA,WAAW,CAACtD,QAAZ;AACA;;AACD,qBAAO,KAAK7C,aAAL,CAAmBjE,WAAW,CAACrC,iBAA/B,CAAP;AACA;;AAED;;AAED,eAAK1E,YAAY,CAACa,QAAlB;AACC;AACA,iBAAKmL,UAAL,CAAgBlC,KAAhB;AACA;;AAED,eAAK9J,YAAY,CAACc,UAAlB;AACC;AACA,iBAAK2I,aAAL,CAAmBnI,KAAK,CAACyB,yBAAN,CAAgChB,IAAnD,EAA0DV,MAAM,CAACC,KAAK,CAACyB,yBAAP,EAAkC,CAACgE,WAAW,CAAC/C,IAAb,CAAlC,CAAhE;;AACA;;AAED;AACC,iBAAKyF,aAAL,CAAmBnI,KAAK,CAACyB,yBAAN,CAAgChB,IAAnD,EAA0DV,MAAM,CAACC,KAAK,CAACyB,yBAAP,EAAkC,CAACgE,WAAW,CAAC/C,IAAb,CAAlC,CAAhE;;AA/KD;AAiLA,OAlLD,CAkLE,OAAOb,KAAP,EAAc;AACf,YAAI8N,UAAU,GAAK9N,KAAK,CAAChC,cAAN,CAAqB,OAArB,KAAiC,WAAlC,GAAiDgC,KAAK,CAAC+N,KAAN,CAAY1I,QAAZ,EAAjD,GAA0E,0BAA5F;;AACA,aAAKiB,aAAL,CAAmBnI,KAAK,CAACe,cAAN,CAAqBN,IAAxC,EAA+CV,MAAM,CAACC,KAAK,CAACe,cAAP,EAAuB,CAACc,KAAK,CAACoE,OAAP,EAAe0J,UAAf,CAAvB,CAArD;;AACA;AACA;AACD,KA3LD;AA6LA;;;AACA5G,IAAAA,UAAU,CAAClG,SAAX,CAAqB+K,gBAArB,GAAwC,UAAU/L,KAAV,EAAiB;AACxD,UAAI,CAAC,KAAKgJ,aAAV,EAAyB;AACzB,aAAK1C,aAAL,CAAmBnI,KAAK,CAACiB,YAAN,CAAmBR,IAAtC,EAA6CV,MAAM,CAACC,KAAK,CAACiB,YAAP,EAAqB,CAACY,KAAK,CAACuN,IAAP,CAArB,CAAnD;AACC;AACD,KAJD;AAMA;;;AACArG,IAAAA,UAAU,CAAClG,SAAX,CAAqBiL,gBAArB,GAAwC,YAAY;AACnD,UAAI,CAAC,KAAKjD,aAAV,EAAyB;AACzB,aAAK1C,aAAL,CAAmBnI,KAAK,CAACkB,YAAN,CAAmBT,IAAtC,EAA6CV,MAAM,CAACC,KAAK,CAACkB,YAAP,CAAnD;AACC;AACD,KAJD;AAMA;;;AACA6H,IAAAA,UAAU,CAAClG,SAAX,CAAqBqM,YAArB,GAAoC,UAAUzJ,WAAV,EAAuB;AAE1D,UAAIA,WAAW,CAAC/C,IAAZ,IAAoB,CAAxB,EAA2B;AAC1B,YAAIkO,iBAAiB,GAAG,KAAKtF,UAAL,CAAgB7F,WAAhB,EAA6B,UAA7B,CAAxB;;AACA,aAAKyC,MAAL,CAAY,qBAAZ,EAAmC0I,iBAAnC;AACA,OAHD,MAIK,KAAK1I,MAAL,CAAY,qBAAZ,EAAmCzC,WAAnC;;AAEL,WAAK2C,MAAL,CAAYC,IAAZ,CAAiB5C,WAAW,CAAC3C,MAAZ,EAAjB;AACA;;AACA,WAAK4H,UAAL,CAAgBlC,KAAhB;AACA,KAXD;AAaA;;;AACAO,IAAAA,UAAU,CAAClG,SAAX,CAAqB4N,eAArB,GAAuC,UAAUhL,WAAV,EAAuB;AAC7D,cAAOA,WAAW,CAACvB,cAAZ,CAA2BE,GAAlC;AACC,aAAK,WAAL;AACA,aAAK,CAAL;AACC,eAAKsM,eAAL,CAAqBjL,WAArB;;AACA;;AAED,aAAK,CAAL;AACC,cAAIoL,aAAa,GAAG,IAAIpO,WAAJ,CAAgB/D,YAAY,CAACI,MAA7B,EAAqC;AAACsE,YAAAA,iBAAiB,EAACqC,WAAW,CAACrC;AAA/B,WAArC,CAApB;;AACA,eAAKgJ,iBAAL,CAAuByE,aAAvB;;AACA,eAAKH,eAAL,CAAqBjL,WAArB;;AACA;;AAED,aAAK,CAAL;AACC,eAAKkE,iBAAL,CAAuBlE,WAAW,CAACrC,iBAAnC,IAAwDqC,WAAxD;AACA,eAAKuI,KAAL,CAAW,WAAX,EAAwBvI,WAAxB;AACA,cAAIqL,aAAa,GAAG,IAAIrO,WAAJ,CAAgB/D,YAAY,CAACK,MAA7B,EAAqC;AAACqE,YAAAA,iBAAiB,EAACqC,WAAW,CAACrC;AAA/B,WAArC,CAApB;;AACA,eAAKgJ,iBAAL,CAAuB0E,aAAvB;;AAEA;;AAED;AACC,gBAAMhR,KAAK,CAAC,iBAAeiR,YAAY,CAAC7M,cAAb,CAA4BE,GAA5C,CAAX;AArBF;AAuBA,KAxBD;AA0BA;;;AACA2E,IAAAA,UAAU,CAAClG,SAAX,CAAqB6N,eAArB,GAAuC,UAAUjL,WAAV,EAAuB;AAC7D,UAAI,KAAK8E,gBAAT,EAA2B;AAC1B,aAAKA,gBAAL,CAAsB9E,WAAW,CAACvB,cAAlC;AACA;AACD,KAJD;AAMA;;;;;;;AAKA6E,IAAAA,UAAU,CAAClG,SAAX,CAAqB2N,UAArB,GAAkC,UAAUQ,SAAV,EAAqBhI,GAArB,EAA0B;AAC3D;AACA,UAAI,KAAKoB,WAAT,EACC,KAAKA,WAAL,CAAiB4G,SAAjB,EAA4BhI,GAA5B;AACD,KAJD;AAMA;;;;;;;AAKAD,IAAAA,UAAU,CAAClG,SAAX,CAAqBoO,UAArB,GAAkC,YAAY;AAC7C,WAAK/I,MAAL,CAAY,mBAAZ;;AACA,UAAI,CAAC,KAAK8B,SAAV,EAAqB;AACpB,aAAKa,aAAL,GAAqB,IAArB;AACA,aAAKH,UAAL,CAAgBhC,MAAhB;AACA,aAAKiC,aAAL,CAAmBjC,MAAnB;AACA,YAAI,KAAKkC,kBAAL,GAA0B,GAA9B,EACC,KAAKA,kBAAL,GAA0B,KAAKA,kBAAL,GAA0B,CAApD;;AACD,YAAI,KAAKV,cAAL,CAAoBqB,IAAxB,EAA8B;AAC7B,eAAKpB,SAAL,GAAiB,CAAjB;;AACA,eAAKqB,UAAL,CAAgB,KAAKtB,cAAL,CAAoBqB,IAApB,CAAyB,CAAzB,CAAhB;AACA,SAHD,MAGO;AACN,eAAKC,UAAL,CAAgB,KAAKxC,GAArB;AACA;AACD;AACD,KAfD;AAiBA;;;;;;;;;AAOAD,IAAAA,UAAU,CAAClG,SAAX,CAAqBsF,aAArB,GAAqC,UAAU6D,SAAV,EAAqBkF,SAArB,EAAgC;AACpE,WAAKhJ,MAAL,CAAY,sBAAZ,EAAoC8D,SAApC,EAA+CkF,SAA/C;;AAEA,UAAIlF,SAAS,KAAK3I,SAAd,IAA2B,KAAKwH,aAApC,EAAmD;AAC/C;AACF,aAAKC,iBAAL,GAAyB,IAAInC,OAAJ,CAAY,IAAZ,EAAkBlB,MAAlB,EAA0B,KAAKmD,kBAA/B,EAAmD,KAAKqG,UAAxD,CAAzB;AACD;AACA;;AAED,WAAKvG,UAAL,CAAgBhC,MAAhB;AACA,WAAKiC,aAAL,CAAmBjC,MAAnB;;AACA,UAAI,KAAK+B,eAAT,EAA0B;AACzB,aAAKA,eAAL,CAAqB/B,MAArB;;AACA,aAAK+B,eAAL,GAAuB,IAAvB;AACA,OAdmE,CAgBpE;;;AACA,WAAKjB,UAAL,GAAkB,EAAlB;AACA,WAAKC,mBAAL,GAA2B,EAA3B;AACA,WAAKG,gBAAL,GAAwB,EAAxB;;AAEA,UAAI,KAAKxB,MAAT,EAAiB;AAChB;AACA,aAAKA,MAAL,CAAYmF,MAAZ,GAAqB,IAArB;AACA,aAAKnF,MAAL,CAAYqF,SAAZ,GAAwB,IAAxB;AACA,aAAKrF,MAAL,CAAYuF,OAAZ,GAAsB,IAAtB;AACA,aAAKvF,MAAL,CAAYyF,OAAZ,GAAsB,IAAtB;AACA,YAAI,KAAKzF,MAAL,CAAY+I,UAAZ,KAA2B,CAA/B,EACC,KAAK/I,MAAL,CAAYgJ,KAAZ;AACD,eAAO,KAAKhJ,MAAZ;AACA;;AAED,UAAI,KAAK8B,cAAL,CAAoBqB,IAApB,IAA4B,KAAKpB,SAAL,GAAiB,KAAKD,cAAL,CAAoBqB,IAApB,CAAyBrJ,MAAzB,GAAgC,CAAjF,EAAoF;AACnF;AACA,aAAKiI,SAAL;;AACA,aAAKqB,UAAL,CAAgB,KAAKtB,cAAL,CAAoBqB,IAApB,CAAyB,KAAKpB,SAA9B,CAAhB;AACA,OAJD,MAIO;AAEN,YAAI6B,SAAS,KAAK3I,SAAlB,EAA6B;AAC5B2I,UAAAA,SAAS,GAAGhM,KAAK,CAACQ,EAAN,CAASC,IAArB;AACAyQ,UAAAA,SAAS,GAAGnR,MAAM,CAACC,KAAK,CAACQ,EAAP,CAAlB;AACA,SALK,CAON;;;AACA,YAAI,KAAKwJ,SAAT,EAAoB;AACnB,eAAKA,SAAL,GAAiB,KAAjB,CADmB,CAEnB;;AACA,cAAI,KAAKK,gBAAT,EAA2B;AAC1B,iBAAKA,gBAAL,CAAsB;AAAC2B,cAAAA,SAAS,EAACA,SAAX;AAAsBC,cAAAA,YAAY,EAACiF,SAAnC;AAA8CF,cAAAA,SAAS,EAAC,KAAK9G,cAAL,CAAoB8G,SAA5E;AAAuFhI,cAAAA,GAAG,EAAC,KAAKM;AAAhG,aAAtB;AACA;;AACD,cAAI0C,SAAS,KAAKhM,KAAK,CAACQ,EAAN,CAASC,IAAvB,IAA+B,KAAKyJ,cAAL,CAAoB8G,SAAvD,EAAkE;AACjE;AACA,iBAAKpG,kBAAL,GAA0B,CAA1B;;AACA,iBAAKqG,UAAL;;AACA;AACA;AACD,SAZD,MAYO;AACN;AACA,cAAI,KAAK/G,cAAL,CAAoB5G,WAApB,KAAoC,CAApC,IAAyC,KAAK4G,cAAL,CAAoBmH,mBAApB,KAA4C,KAAzF,EAAgG;AAC/F,iBAAKnJ,MAAL,CAAY,2CAAZ;;AACA,iBAAKgC,cAAL,CAAoB5G,WAApB,GAAkC,CAAlC;;AACA,gBAAI,KAAK4G,cAAL,CAAoBqB,IAAxB,EAA8B;AAC7B,mBAAKpB,SAAL,GAAiB,CAAjB;;AACA,mBAAKqB,UAAL,CAAgB,KAAKtB,cAAL,CAAoBqB,IAApB,CAAyB,CAAzB,CAAhB;AACA,aAHD,MAGO;AACN,mBAAKC,UAAL,CAAgB,KAAKxC,GAArB;AACA;AACD,WATD,MASO,IAAG,KAAKkB,cAAL,CAAoB6B,SAAvB,EAAkC;AACxC,iBAAK7B,cAAL,CAAoB6B,SAApB,CAA8B;AAACD,cAAAA,iBAAiB,EAAC,KAAK5B,cAAL,CAAoB4B,iBAAvC;AAA0DE,cAAAA,SAAS,EAACA,SAApE;AAA+EC,cAAAA,YAAY,EAACiF;AAA5F,aAA9B;AACA;AACD;AACD;AACD,KAxED;AA0EA;;;AACAnI,IAAAA,UAAU,CAAClG,SAAX,CAAqBqF,MAArB,GAA8B,YAAY;AACzC;AACA,UAAI,KAAKsC,aAAT,EAAwB;AACvB,aAAK,IAAIvI,CAAT,IAAc1B,SAAd,EACA;AACC,cAAI,OAAOA,SAAS,CAAC0B,CAAD,CAAhB,KAAwB,WAA5B,EACC1B,SAAS,CAAC+Q,MAAV,CAAiBrP,CAAjB,EAAoB,CAApB,EAAuBuM,IAAI,CAACC,SAAL,CAAelO,SAAS,CAAC0B,CAAD,CAAxB,CAAvB;AACD;;AACD,YAAIsP,MAAM,GAAG9K,KAAK,CAAC5D,SAAN,CAAgB2O,KAAhB,CAAsBC,IAAtB,CAA2BlR,SAA3B,EAAsC8M,IAAtC,CAA2C,EAA3C,CAAb;AACA,aAAK7C,aAAL,CAAoB;AAACkH,UAAAA,QAAQ,EAAE,OAAX;AAAoBzL,UAAAA,OAAO,EAAEsL;AAA7B,SAApB;AACA,OAVwC,CAYzC;;;AACA,UAAK,KAAKrG,YAAL,KAAsB,IAA3B,EAAkC;AACjC,aAAK,IAAIjJ,CAAC,GAAG,CAAR,EAAW0P,GAAG,GAAGpR,SAAS,CAAC2B,MAAhC,EAAwCD,CAAC,GAAG0P,GAA5C,EAAiD1P,CAAC,EAAlD,EAAsD;AACrD,cAAK,KAAKiJ,YAAL,CAAkBhJ,MAAlB,IAA4B,KAAKiJ,kBAAtC,EAA2D;AAC1D,iBAAKD,YAAL,CAAkB0G,KAAlB;AACA;;AACD,cAAI3P,CAAC,KAAK,CAAV,EAAa,KAAKiJ,YAAL,CAAkByB,IAAlB,CAAuBpM,SAAS,CAAC0B,CAAD,CAAhC,EAAb,KACK,IAAI,OAAO1B,SAAS,CAAC0B,CAAD,CAAhB,KAAwB,WAA5B,EAA0C,KAAKiJ,YAAL,CAAkByB,IAAlB,CAAuBpM,SAAS,CAAC0B,CAAD,CAAhC,EAA1C,KACA,KAAKiJ,YAAL,CAAkByB,IAAlB,CAAuB,OAAK6B,IAAI,CAACC,SAAL,CAAelO,SAAS,CAAC0B,CAAD,CAAxB,CAA5B;AACH;AACH;AACD,KAvBD;AAyBA;;;AACA8G,IAAAA,UAAU,CAAClG,SAAX,CAAqByI,UAArB,GAAkC,UAAUuG,WAAV,EAAuBC,MAAvB,EAA+B;AAChE,UAAIC,iBAAiB,GAAG,EAAxB;;AACA,WAAK,IAAIC,IAAT,IAAiBH,WAAjB,EAA8B;AAC7B,YAAIA,WAAW,CAAChS,cAAZ,CAA2BmS,IAA3B,CAAJ,EAAsC;AACrC,cAAIA,IAAI,IAAIF,MAAZ,EACCC,iBAAiB,CAACC,IAAD,CAAjB,GAA0B,QAA1B,CADD,KAGCD,iBAAiB,CAACC,IAAD,CAAjB,GAA0BH,WAAW,CAACG,IAAD,CAArC;AACD;AACD;;AACD,aAAOD,iBAAP;AACA,KAXD,CA3gDiC,CAwhDjC;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA,QAAIE,MAAM,GAAG,SAATA,MAAS,CAAUhJ,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B3F,QAA5B,EAAsC;AAE/C,UAAIwF,GAAJ;AAEH,UAAI,OAAOC,IAAP,KAAgB,QAApB,EACC,MAAM,IAAInJ,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,SAAQgJ,IAAR,GAAc,MAAd,CAArB,CAAhB,CAAN;;AAEE,UAAI1I,SAAS,CAAC2B,MAAV,IAAoB,CAAxB,EAA2B;AACvB;AACA;AACAsB,QAAAA,QAAQ,GAAG0F,IAAX;AACAF,QAAAA,GAAG,GAAGC,IAAN;AACA,YAAIiJ,KAAK,GAAGlJ,GAAG,CAACkJ,KAAJ,CAAU,oDAAV,CAAZ;;AACA,YAAIA,KAAJ,EAAW;AACPjJ,UAAAA,IAAI,GAAGiJ,KAAK,CAAC,CAAD,CAAL,IAAUA,KAAK,CAAC,CAAD,CAAtB;AACAhJ,UAAAA,IAAI,GAAG4F,QAAQ,CAACoD,KAAK,CAAC,CAAD,CAAN,CAAf;AACA/I,UAAAA,IAAI,GAAG+I,KAAK,CAAC,CAAD,CAAZ;AACH,SAJD,MAIO;AACH,gBAAM,IAAIpS,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAwB,CAAC2H,IAAD,EAAM,MAAN,CAAxB,CAAhB,CAAN;AACH;AACJ,OAbD,MAaO;AACH,YAAI1I,SAAS,CAAC2B,MAAV,IAAoB,CAAxB,EAA2B;AAChCsB,UAAAA,QAAQ,GAAG2F,IAAX;AACAA,UAAAA,IAAI,GAAG,OAAP;AACA;;AACD,YAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,GAAG,CAAvC,EACC,MAAM,IAAIpJ,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,SAAQiJ,IAAR,GAAc,MAAd,CAArB,CAAhB,CAAN;AACD,YAAI,OAAOC,IAAP,KAAgB,QAApB,EACC,MAAM,IAAIrJ,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,SAAQkJ,IAAR,GAAc,MAAd,CAArB,CAAhB,CAAN;AAED,YAAIgJ,eAAe,GAAIlJ,IAAI,CAAC9G,OAAL,CAAa,GAAb,MAAsB,CAAC,CAAvB,IAA4B8G,IAAI,CAACuI,KAAL,CAAW,CAAX,EAAa,CAAb,MAAoB,GAAhD,IAAuDvI,IAAI,CAACuI,KAAL,CAAW,CAAC,CAAZ,MAAmB,GAAjG;AACAxI,QAAAA,GAAG,GAAG,WAASmJ,eAAe,GAAC,MAAIlJ,IAAJ,GAAS,GAAV,GAAcA,IAAtC,IAA4C,GAA5C,GAAgDC,IAAhD,GAAqDC,IAA3D;AACA;;AAED,UAAIiJ,cAAc,GAAG,CAArB;;AACA,WAAK,IAAInQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACuB,QAAQ,CAACtB,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACvC,YAAI0E,QAAQ,GAAGnD,QAAQ,CAACoD,UAAT,CAAoB3E,CAApB,CAAf;;AACA,YAAI,UAAU0E,QAAV,IAAsBA,QAAQ,IAAI,MAAtC,EAA+C;AAC7C1E,UAAAA,CAAC,GAD4C,CACxC;AACN;;AACDmQ,QAAAA,cAAc;AACd;;AACD,UAAI,OAAO5O,QAAP,KAAoB,QAApB,IAAgC4O,cAAc,GAAG,KAArD,EACC,MAAM,IAAItS,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAACkC,QAAD,EAAW,UAAX,CAAzB,CAAhB,CAAN;AAED,UAAIgE,MAAM,GAAG,IAAIuB,UAAJ,CAAeC,GAAf,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsC3F,QAAtC,CAAb;;AACA,WAAK6O,QAAL,GAAiB,YAAW;AAAE,eAAOpJ,IAAP;AAAc,OAA5C;;AACA,WAAKqJ,QAAL,GAAgB,YAAW;AAAE,cAAM,IAAIxS,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACuB,qBAAP,CAAhB,CAAN;AAAuD,OAApF;;AAEA,WAAKgR,QAAL,GAAgB,YAAW;AAAE,eAAOrJ,IAAP;AAAc,OAA3C;;AACA,WAAKsJ,QAAL,GAAgB,YAAW;AAAE,cAAM,IAAI1S,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACuB,qBAAP,CAAhB,CAAN;AAAuD,OAApF;;AAEA,WAAKkR,QAAL,GAAgB,YAAW;AAAE,eAAOtJ,IAAP;AAAc,OAA3C;;AACA,WAAKuJ,QAAL,GAAgB,YAAW;AAAE,cAAM,IAAI5S,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACuB,qBAAP,CAAhB,CAAN;AAAuD,OAApF;;AAEA,WAAKoR,OAAL,GAAe,YAAW;AAAE,eAAO3J,GAAP;AAAa,OAAzC;;AACA,WAAK4J,OAAL,GAAe,YAAW;AAAE,cAAM,IAAI9S,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACuB,qBAAP,CAAhB,CAAN;AAAuD,OAAnF;;AAEA,WAAKsR,YAAL,GAAoB,YAAW;AAAE,eAAOrL,MAAM,CAAChE,QAAd;AAAyB,OAA1D;;AACA,WAAKsP,YAAL,GAAoB,YAAW;AAAE,cAAM,IAAIhT,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACuB,qBAAP,CAAhB,CAAN;AAAuD,OAAxF;;AAEA,WAAKwR,eAAL,GAAuB,YAAW;AAAE,eAAOvL,MAAM,CAAC4C,WAAd;AAA4B,OAAhE;;AACA,WAAK4I,eAAL,GAAuB,UAASC,cAAT,EAAyB;AAC/C,YAAI,OAAOA,cAAP,KAA0B,UAA9B,EACCzL,MAAM,CAAC4C,WAAP,GAAqB6I,cAArB,CADD,KAGC,MAAM,IAAInT,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,SAAQgT,cAAR,GAAwB,aAAxB,CAArB,CAAhB,CAAN;AACD,OALD;;AAOA,WAAKC,0BAAL,GAAkC,YAAW;AAAE,eAAO1L,MAAM,CAACuD,sBAAd;AAAuC,OAAtF;;AACA,WAAKoI,0BAAL,GAAkC,UAASC,yBAAT,EAAoC;AACrE5L,QAAAA,MAAM,CAACuD,sBAAP,GAAgCqI,yBAAhC;AACA,OAFD;;AAIA,WAAKC,0BAAL,GAAkC,YAAW;AAAE,eAAO7L,MAAM,CAACwD,sBAAd;AAAuC,OAAtF;;AACA,WAAKsI,0BAAL,GAAkC,UAASC,yBAAT,EAAoC;AACrE/L,QAAAA,MAAM,CAACwD,sBAAP,GAAgCuI,yBAAhC;AACA,OAFD;;AAIA,WAAKC,oBAAL,GAA4B,YAAW;AAAE,eAAOhM,MAAM,CAAC6C,gBAAd;AAAiC,OAA1E;;AACA,WAAKoJ,oBAAL,GAA4B,UAASC,mBAAT,EAA8B;AACzD,YAAI,OAAOA,mBAAP,KAA+B,UAAnC,EACClM,MAAM,CAAC6C,gBAAP,GAA0BqJ,mBAA1B,CADD,KAGC,MAAM,IAAI5T,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,SAAQyT,mBAAR,GAA6B,kBAA7B,CAArB,CAAhB,CAAN;AACD,OALD;;AAOA,WAAKC,sBAAL,GAA8B,YAAW;AAAE,eAAOnM,MAAM,CAAC8C,kBAAd;AAAmC,OAA9E;;AACA,WAAKsJ,sBAAL,GAA8B,UAASC,qBAAT,EAAgC;AAC7D,YAAI,OAAOA,qBAAP,KAAiC,UAArC,EACCrM,MAAM,CAAC8C,kBAAP,GAA4BuJ,qBAA5B,CADD,KAGC,MAAM,IAAI/T,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,SAAQ4T,qBAAR,GAA+B,oBAA/B,CAArB,CAAhB,CAAN;AACD,OALD;;AAOA,WAAKC,oBAAL,GAA4B,YAAW;AAAE,eAAOtM,MAAM,CAAC+C,gBAAd;AAAiC,OAA1E;;AACA,WAAKwJ,oBAAL,GAA4B,UAASC,mBAAT,EAA8B;AACzD,YAAI,OAAOA,mBAAP,KAA+B,UAAnC,EACCxM,MAAM,CAAC+C,gBAAP,GAA0ByJ,mBAA1B,CADD,KAGC,MAAM,IAAIlU,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,SAAQ+T,mBAAR,GAA6B,kBAA7B,CAArB,CAAhB,CAAN;AACD,OALD;;AAOA,WAAKC,SAAL,GAAiB,YAAW;AAAE,eAAOzM,MAAM,CAACgD,aAAd;AAA8B,OAA5D;;AACA,WAAK0J,SAAL,GAAiB,UAASC,KAAT,EAAgB;AAChC,YAAG,OAAOA,KAAP,KAAiB,UAApB,EAA+B;AAC9B3M,UAAAA,MAAM,CAACgD,aAAP,GAAuB2J,KAAvB;AACA,SAFD,MAEK;AACJ,gBAAM,IAAIrU,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,SAAQkU,KAAR,GAAe,SAAf,CAArB,CAAhB,CAAN;AACA;AACD,OAND;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,WAAK/I,OAAL,GAAe,UAAUlB,cAAV,EAA0B;AACxCA,QAAAA,cAAc,GAAGA,cAAc,IAAI,EAAnC;AACAzK,QAAAA,QAAQ,CAACyK,cAAD,EAAkB;AAAC5B,UAAAA,OAAO,EAAC,QAAT;AACjBxE,UAAAA,QAAQ,EAAC,QADQ;AAEjBC,UAAAA,QAAQ,EAAC,QAFQ;AAGjBN,UAAAA,WAAW,EAAC,QAHK;AAIjBwB,UAAAA,iBAAiB,EAAC,QAJD;AAKjBF,UAAAA,YAAY,EAAC,SALI;AAMjBmI,UAAAA,MAAM,EAAC,SANU;AAOjBpB,UAAAA,iBAAiB,EAAC,QAPD;AAQjBF,UAAAA,SAAS,EAAC,UARO;AASjBG,UAAAA,SAAS,EAAC,UATO;AAUjBqI,UAAAA,KAAK,EAAC,QAVW;AAWjBC,UAAAA,KAAK,EAAC,QAXW;AAYjBrD,UAAAA,SAAS,EAAC,SAZO;AAajB1N,UAAAA,WAAW,EAAC,QAbK;AAcjB+N,UAAAA,mBAAmB,EAAC,SAdH;AAejB9F,UAAAA,IAAI,EAAE;AAfW,SAAlB,CAAR,CAFwC,CAmBxC;;AACA,YAAIrB,cAAc,CAACjF,iBAAf,KAAqC5B,SAAzC,EACC6G,cAAc,CAACjF,iBAAf,GAAmC,EAAnC;;AAED,YAAIiF,cAAc,CAAC5G,WAAf,GAA6B,CAA7B,IAAkC4G,cAAc,CAAC5G,WAAf,GAA6B,CAAnE,EAAsE;AACrE,gBAAM,IAAIxD,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAAC4I,cAAc,CAAC5G,WAAhB,EAA6B,4BAA7B,CAAzB,CAAhB,CAAN;AACA;;AAED,YAAI4G,cAAc,CAAC5G,WAAf,KAA+BD,SAAnC,EAA8C;AAC7C6G,UAAAA,cAAc,CAACmH,mBAAf,GAAqC,KAArC;AACAnH,UAAAA,cAAc,CAAC5G,WAAf,GAA6B,CAA7B;AACA,SAHD,MAGO;AACN4G,UAAAA,cAAc,CAACmH,mBAAf,GAAqC,IAArC;AACA,SAhCuC,CAkCxC;;;AACA,YAAInH,cAAc,CAACnG,QAAf,KAA4BV,SAA5B,IAAyC6G,cAAc,CAACpG,QAAf,KAA4BT,SAAzE,EACC,MAAM,IAAIvD,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAAC4I,cAAc,CAACnG,QAAhB,EAA0B,yBAA1B,CAAzB,CAAhB,CAAN;;AAED,YAAImG,cAAc,CAACzG,WAAnB,EAAgC;AAC/B,cAAI,EAAEyG,cAAc,CAACzG,WAAf,YAAsCyC,OAAxC,CAAJ,EACC,MAAM,IAAIpG,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,CAACiK,cAAc,CAACzG,WAAhB,EAA6B,4BAA7B,CAArB,CAAhB,CAAN,CAF8B,CAG/B;AACA;;AACAyG,UAAAA,cAAc,CAACzG,WAAf,CAA2B6Q,aAA3B,GAA2C,IAA3C;AAEA,cAAI,OAAOpK,cAAc,CAACzG,WAAf,CAA2BC,eAAlC,KAAsD,WAA1D,EACC,MAAM,IAAI5D,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,SAAQiK,cAAc,CAACzG,WAAf,CAA2BC,eAAnC,GAAoD,4CAApD,CAArB,CAAhB,CAAN;AACD;;AACD,YAAI,OAAOwG,cAAc,CAACnF,YAAtB,KAAuC,WAA3C,EACCmF,cAAc,CAACnF,YAAf,GAA8B,IAA9B;;AACD,YAAImF,cAAc,CAACkK,KAAnB,EAA0B;AAEzB,cAAI,EAAElK,cAAc,CAACkK,KAAf,YAAgC3N,KAAlC,CAAJ,EACC,MAAM,IAAI3G,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAAC4I,cAAc,CAACkK,KAAhB,EAAuB,sBAAvB,CAAzB,CAAhB,CAAN;AACD,cAAIlK,cAAc,CAACkK,KAAf,CAAqBlS,MAArB,GAA6B,CAAjC,EACC,MAAM,IAAIpC,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAAC4I,cAAc,CAACkK,KAAhB,EAAuB,sBAAvB,CAAzB,CAAhB,CAAN;AAED,cAAIG,SAAS,GAAG,KAAhB;;AACA,eAAK,IAAItS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACiI,cAAc,CAACkK,KAAf,CAAqBlS,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AACnD,gBAAI,OAAOiI,cAAc,CAACkK,KAAf,CAAqBnS,CAArB,CAAP,KAAmC,QAAvC,EACC,MAAM,IAAInC,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,SAAQiK,cAAc,CAACkK,KAAf,CAAqBnS,CAArB,CAAR,GAAiC,0BAAwBA,CAAxB,GAA0B,GAA3D,CAArB,CAAhB,CAAN;;AACD,gBAAI,qDAAqDuS,IAArD,CAA0DtK,cAAc,CAACkK,KAAf,CAAqBnS,CAArB,CAA1D,CAAJ,EAAwF;AACvF,kBAAIA,CAAC,KAAK,CAAV,EAAa;AACZsS,gBAAAA,SAAS,GAAG,IAAZ;AACA,eAFD,MAEO,IAAI,CAACA,SAAL,EAAgB;AACtB,sBAAM,IAAIzU,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAAC4I,cAAc,CAACkK,KAAf,CAAqBnS,CAArB,CAAD,EAA0B,0BAAwBA,CAAxB,GAA0B,GAApD,CAAzB,CAAhB,CAAN;AACA;AACD,aAND,MAMO,IAAIsS,SAAJ,EAAe;AACrB,oBAAM,IAAIzU,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAAC4I,cAAc,CAACkK,KAAf,CAAqBnS,CAArB,CAAD,EAA0B,0BAAwBA,CAAxB,GAA0B,GAApD,CAAzB,CAAhB,CAAN;AACA;AACD;;AAED,cAAI,CAACsS,SAAL,EAAgB;AACf,gBAAI,CAACrK,cAAc,CAACmK,KAApB,EACC,MAAM,IAAIvU,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAAC4I,cAAc,CAACmK,KAAhB,EAAuB,sBAAvB,CAAzB,CAAhB,CAAN;AACD,gBAAI,EAAEnK,cAAc,CAACmK,KAAf,YAAgC5N,KAAlC,CAAJ,EACC,MAAM,IAAI3G,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAAC4I,cAAc,CAACmK,KAAhB,EAAuB,sBAAvB,CAAzB,CAAhB,CAAN;AACD,gBAAInK,cAAc,CAACkK,KAAf,CAAqBlS,MAArB,KAAgCgI,cAAc,CAACmK,KAAf,CAAqBnS,MAAzD,EACC,MAAM,IAAIpC,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAAC4I,cAAc,CAACmK,KAAhB,EAAuB,sBAAvB,CAAzB,CAAhB,CAAN;AAEDnK,YAAAA,cAAc,CAACqB,IAAf,GAAsB,EAAtB;;AAEA,iBAAK,IAAItJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACiI,cAAc,CAACkK,KAAf,CAAqBlS,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AACnD,kBAAI,OAAOiI,cAAc,CAACmK,KAAf,CAAqBpS,CAArB,CAAP,KAAmC,QAAnC,IAA+CiI,cAAc,CAACmK,KAAf,CAAqBpS,CAArB,IAA0B,CAA7E,EACC,MAAM,IAAInC,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACC,YAAP,EAAqB,SAAQiK,cAAc,CAACmK,KAAf,CAAqBpS,CAArB,CAAR,GAAiC,0BAAwBA,CAAxB,GAA0B,GAA3D,CAArB,CAAhB,CAAN;AACD,kBAAIgH,IAAI,GAAGiB,cAAc,CAACkK,KAAf,CAAqBnS,CAArB,CAAX;AACA,kBAAIiH,IAAI,GAAGgB,cAAc,CAACmK,KAAf,CAAqBpS,CAArB,CAAX;AAEA,kBAAIwS,IAAI,GAAIxL,IAAI,CAAC9G,OAAL,CAAa,GAAb,MAAsB,CAAC,CAAnC;AACA6G,cAAAA,GAAG,GAAG,WAASyL,IAAI,GAAC,MAAIxL,IAAJ,GAAS,GAAV,GAAcA,IAA3B,IAAiC,GAAjC,GAAqCC,IAArC,GAA0CC,IAAhD;AACAe,cAAAA,cAAc,CAACqB,IAAf,CAAoBoB,IAApB,CAAyB3D,GAAzB;AACA;AACD,WApBD,MAoBO;AACNkB,YAAAA,cAAc,CAACqB,IAAf,GAAsBrB,cAAc,CAACkK,KAArC;AACA;AACD;;AAED5M,QAAAA,MAAM,CAAC4D,OAAP,CAAelB,cAAf;AACA,OAlGD;AAoGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,WAAKuB,SAAL,GAAiB,UAAUC,MAAV,EAAkBC,gBAAlB,EAAoC;AACpD,YAAI,OAAOD,MAAP,KAAkB,QAAtB,EACC,MAAM,IAAI5L,KAAJ,CAAU,sBAAoB4L,MAA9B,CAAN;AACDC,QAAAA,gBAAgB,GAAGA,gBAAgB,IAAI,EAAvC;AACAlM,QAAAA,QAAQ,CAACkM,gBAAD,EAAoB;AAACvH,UAAAA,GAAG,EAAC,QAAL;AACpB0H,UAAAA,iBAAiB,EAAC,QADE;AAEpBF,UAAAA,SAAS,EAAC,UAFU;AAGpBG,UAAAA,SAAS,EAAC,UAHU;AAIpBzD,UAAAA,OAAO,EAAC;AAJY,SAApB,CAAR;AAMA,YAAIqD,gBAAgB,CAACrD,OAAjB,IAA4B,CAACqD,gBAAgB,CAACI,SAAlD,EACC,MAAM,IAAIjM,KAAJ,CAAU,gEAAV,CAAN;AACD,YAAI,OAAO6L,gBAAgB,CAACvH,GAAxB,KAAgC,WAAhC,IAA+C,EAAEuH,gBAAgB,CAACvH,GAAjB,KAAyB,CAAzB,IAA8BuH,gBAAgB,CAACvH,GAAjB,KAAyB,CAAvD,IAA4DuH,gBAAgB,CAACvH,GAAjB,KAAyB,CAAvF,CAAnD,EACC,MAAM,IAAItE,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAACqK,gBAAgB,CAACvH,GAAlB,EAAuB,sBAAvB,CAAzB,CAAhB,CAAN;AACDoD,QAAAA,MAAM,CAACiE,SAAP,CAAiBC,MAAjB,EAAyBC,gBAAzB;AACA,OAfD;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,WAAKU,WAAL,GAAmB,UAAUX,MAAV,EAAkBY,kBAAlB,EAAsC;AACxD,YAAI,OAAOZ,MAAP,KAAkB,QAAtB,EACC,MAAM,IAAI5L,KAAJ,CAAU,sBAAoB4L,MAA9B,CAAN;AACDY,QAAAA,kBAAkB,GAAGA,kBAAkB,IAAI,EAA3C;AACA7M,QAAAA,QAAQ,CAAC6M,kBAAD,EAAsB;AAACR,UAAAA,iBAAiB,EAAC,QAAnB;AACpBF,UAAAA,SAAS,EAAC,UADU;AAEpBG,UAAAA,SAAS,EAAC,UAFU;AAGpBzD,UAAAA,OAAO,EAAC;AAHY,SAAtB,CAAR;AAKA,YAAIgE,kBAAkB,CAAChE,OAAnB,IAA8B,CAACgE,kBAAkB,CAACP,SAAtD,EACC,MAAM,IAAIjM,KAAJ,CAAU,kEAAV,CAAN;AACD0H,QAAAA,MAAM,CAAC6E,WAAP,CAAmBX,MAAnB,EAA2BY,kBAA3B;AACA,OAZD;AAcA;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,WAAKjE,IAAL,GAAY,UAAUqM,KAAV,EAAgBC,OAAhB,EAAwBvQ,GAAxB,EAA4BC,QAA5B,EAAsC;AACjD,YAAI4B,OAAJ;;AAEA,YAAG1F,SAAS,CAAC2B,MAAV,KAAqB,CAAxB,EAA0B;AACzB,gBAAM,IAAIpC,KAAJ,CAAU,sBAAoB,QAA9B,CAAN;AAEA,SAHD,MAGM,IAAGS,SAAS,CAAC2B,MAAV,IAAoB,CAAvB,EAA0B;AAE/B,cAAI,EAAEwS,KAAK,YAAYxO,OAAnB,KAAgC,OAAOwO,KAAP,KAAiB,QAArD,EACC,MAAM,IAAI5U,KAAJ,CAAU,8BAA4B4U,KAA5B,CAAV,CAAN;AAEDzO,UAAAA,OAAO,GAAGyO,KAAV;AACA,cAAI,OAAOzO,OAAO,CAACvC,eAAf,KAAmC,WAAvC,EACC,MAAM,IAAI5D,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAwB,CAAC2E,OAAO,CAACvC,eAAT,EAAyB,yBAAzB,CAAxB,CAAhB,CAAN;AACD8D,UAAAA,MAAM,CAACa,IAAP,CAAYpC,OAAZ;AAEA,SAVK,MAUA;AACL;AACAA,UAAAA,OAAO,GAAG,IAAIC,OAAJ,CAAYyO,OAAZ,CAAV;AACA1O,UAAAA,OAAO,CAACvC,eAAR,GAA0BgR,KAA1B;AACA,cAAGnU,SAAS,CAAC2B,MAAV,IAAoB,CAAvB,EACC+D,OAAO,CAAC7B,GAAR,GAAcA,GAAd;AACD,cAAG7D,SAAS,CAAC2B,MAAV,IAAoB,CAAvB,EACC+D,OAAO,CAAC5B,QAAR,GAAmBA,QAAnB;AACDmD,UAAAA,MAAM,CAACa,IAAP,CAAYpC,OAAZ;AACA;AACD,OA1BD;AA4BA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBC,WAAK2O,OAAL,GAAe,UAASF,KAAT,EAAeC,OAAf,EAAuBvQ,GAAvB,EAA2BC,QAA3B,EAAqC;AACnDwQ,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCJ,KAAtC;AACA,YAAIzO,OAAJ;;AAEA,YAAG1F,SAAS,CAAC2B,MAAV,KAAqB,CAAxB,EAA0B;AACzB,gBAAM,IAAIpC,KAAJ,CAAU,sBAAoB,QAA9B,CAAN;AAEA,SAHD,MAGM,IAAGS,SAAS,CAAC2B,MAAV,IAAoB,CAAvB,EAA0B;AAE/B,cAAI,EAAEwS,KAAK,YAAYxO,OAAnB,KAAgC,OAAOwO,KAAP,KAAiB,QAArD,EACC,MAAM,IAAI5U,KAAJ,CAAU,8BAA4B4U,KAA5B,CAAV,CAAN;AAEDzO,UAAAA,OAAO,GAAGyO,KAAV;AACA,cAAI,OAAOzO,OAAO,CAACvC,eAAf,KAAmC,WAAvC,EACC,MAAM,IAAI5D,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAwB,CAAC2E,OAAO,CAACvC,eAAT,EAAyB,yBAAzB,CAAxB,CAAhB,CAAN;AACD8D,UAAAA,MAAM,CAACa,IAAP,CAAYpC,OAAZ;AAEA,SAVK,MAUA;AACL;AACAA,UAAAA,OAAO,GAAG,IAAIC,OAAJ,CAAYyO,OAAZ,CAAV;AACA1O,UAAAA,OAAO,CAACvC,eAAR,GAA0BgR,KAA1B;AACA,cAAGnU,SAAS,CAAC2B,MAAV,IAAoB,CAAvB,EACC+D,OAAO,CAAC7B,GAAR,GAAcA,GAAd;AACD,cAAG7D,SAAS,CAAC2B,MAAV,IAAoB,CAAvB,EACC+D,OAAO,CAAC5B,QAAR,GAAmBA,QAAnB;AACDmD,UAAAA,MAAM,CAACa,IAAP,CAAYpC,OAAZ;AACA;AACF,OA3BA;AA6BD;;;;;;;;;AAOA,WAAK2G,UAAL,GAAkB,YAAY;AAC7BpF,QAAAA,MAAM,CAACoF,UAAP;AACA,OAFD;AAIA;;;;;;;;;AAOA,WAAKC,WAAL,GAAmB,YAAY;AAC9B,eAAOrF,MAAM,CAACqF,WAAP,EAAP;AACA,OAFD;AAIA;;;;;;;;AAMA,WAAKE,UAAL,GAAkB,YAAY;AAC7BvF,QAAAA,MAAM,CAACuF,UAAP;AACA,OAFD;AAIA;;;;;;;;AAMA,WAAKC,SAAL,GAAiB,YAAY;AAC5BxF,QAAAA,MAAM,CAACwF,SAAP;AACA,OAFD;;AAIA,WAAK+H,WAAL,GAAmB,YAAW;AAC7B,eAAOvN,MAAM,CAACwC,SAAd;AACA,OAFD;AAGA,KAhgBD;;AAkgBAiI,IAAAA,MAAM,CAACpP,SAAP,GAAmB;AAClB,UAAIoG,IAAJ,GAAW;AAAE,eAAO,KAAKoJ,QAAL,EAAP;AAAyB,OADpB;;AAElB,UAAIpJ,IAAJ,CAAS+L,OAAT,EAAkB;AAAE,aAAK1C,QAAL,CAAc0C,OAAd;AAAyB,OAF3B;;AAIlB,UAAI9L,IAAJ,GAAW;AAAE,eAAO,KAAKqJ,QAAL,EAAP;AAAyB,OAJpB;;AAKlB,UAAIrJ,IAAJ,CAAS+L,OAAT,EAAkB;AAAE,aAAKzC,QAAL,CAAcyC,OAAd;AAAyB,OAL3B;;AAOlB,UAAI9L,IAAJ,GAAW;AAAE,eAAO,KAAKsJ,QAAL,EAAP;AAAyB,OAPpB;;AAQlB,UAAItJ,IAAJ,CAAS+L,OAAT,EAAkB;AAAE,aAAKxC,QAAL,CAAcwC,OAAd;AAAyB,OAR3B;;AAUlB,UAAI1R,QAAJ,GAAe;AAAE,eAAO,KAAKqP,YAAL,EAAP;AAA6B,OAV5B;;AAWlB,UAAIrP,QAAJ,CAAa2R,WAAb,EAA0B;AAAE,aAAKrC,YAAL,CAAkBqC,WAAlB;AAAiC,OAX3C;;AAalB,UAAI/K,WAAJ,GAAkB;AAAE,eAAO,KAAK2I,eAAL,EAAP;AAAgC,OAblC;;AAclB,UAAI3I,WAAJ,CAAgB6I,cAAhB,EAAgC;AAAE,aAAKD,eAAL,CAAqBC,cAArB;AAAuC,OAdvD;;AAgBlB,UAAIlI,sBAAJ,GAA6B;AAAE,eAAO,KAAKmI,0BAAL,EAAP;AAA2C,OAhBxD;;AAiBlB,UAAInI,sBAAJ,CAA2BqI,yBAA3B,EAAsD;AAAE,aAAKD,0BAAL,CAAgCC,yBAAhC;AAA6D,OAjBnG;;AAmBlB,UAAIpI,sBAAJ,GAA6B;AAAE,eAAO,KAAKqI,0BAAL,EAAP;AAA2C,OAnBxD;;AAoBlB,UAAIrI,sBAAJ,CAA2BuI,yBAA3B,EAAsD;AAAE,aAAKD,0BAAL,CAAgCC,yBAAhC;AAA6D,OApBnG;;AAsBlB,UAAIlJ,gBAAJ,GAAuB;AAAE,eAAO,KAAKmJ,oBAAL,EAAP;AAAqC,OAtB5C;;AAuBlB,UAAInJ,gBAAJ,CAAqBqJ,mBAArB,EAA0C;AAAE,aAAKD,oBAAL,CAA0BC,mBAA1B;AAAiD,OAvB3E;;AAyBlB,UAAIpJ,kBAAJ,GAAyB;AAAE,eAAO,KAAKqJ,sBAAL,EAAP;AAAuC,OAzBhD;;AA0BlB,UAAIrJ,kBAAJ,CAAuBuJ,qBAAvB,EAA8C;AAAE,aAAKD,sBAAL,CAA4BC,qBAA5B;AAAqD,OA1BnF;;AA4BlB,UAAItJ,gBAAJ,GAAuB;AAAE,eAAO,KAAKuJ,oBAAL,EAAP;AAAqC,OA5B5C;;AA6BlB,UAAIvJ,gBAAJ,CAAqByJ,mBAArB,EAA0C;AAAE,aAAKD,oBAAL,CAA0BC,mBAA1B;AAAiD,OA7B3E;;AA+BlB,UAAIG,KAAJ,GAAY;AAAE,eAAO,KAAKF,SAAL,EAAP;AAA0B,OA/BtB;;AAgClB,UAAIE,KAAJ,CAAUiB,gBAAV,EAA4B;AAAE,aAAKlB,SAAL,CAAekB,gBAAf;AAAmC;;AAhC/C,KAAnB;AAoCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,QAAIlP,OAAO,GAAG,SAAVA,OAAU,CAAUmP,UAAV,EAAsB;AACnC,UAAIV,OAAJ;;AACA,UAAO,OAAOU,UAAP,KAAsB,QAAtB,IACPA,UAAU,YAAY/Q,WADf,IAEP+Q,UAAU,YAAYC,SAFf,IAGPD,UAAU,YAAYzR,UAHf,IAIPyR,UAAU,YAAYE,UAJf,IAKPF,UAAU,YAAYG,WALf,IAMPH,UAAU,YAAYI,UANf,IAOPJ,UAAU,YAAYK,WAPf,IAQPL,UAAU,YAAYM,YARf,IASPN,UAAU,YAAYO,YATtB,EAUK;AACJjB,QAAAA,OAAO,GAAGU,UAAV;AACA,OAZD,MAYO;AACN,cAAOtV,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAAC+T,UAAD,EAAa,YAAb,CAAzB,CAAb;AACA;;AAED,WAAKQ,iBAAL,GAAyB,YAAY;AACpC,YAAI,OAAOlB,OAAP,KAAmB,QAAvB,EACC,OAAOA,OAAP,CADD,KAGC,OAAO3O,SAAS,CAAC2O,OAAD,EAAU,CAAV,EAAaA,OAAO,CAACzS,MAArB,CAAhB;AACD,OALD;;AAOA,WAAK4T,gBAAL,GAAwB,YAAW;AAClC,YAAI,OAAOnB,OAAP,KAAmB,QAAvB,EAAiC;AAChC,cAAIpQ,MAAM,GAAG,IAAID,WAAJ,CAAgBf,UAAU,CAACoR,OAAD,CAA1B,CAAb;AACA,cAAIhQ,UAAU,GAAG,IAAIf,UAAJ,CAAeW,MAAf,CAAjB;AACA+B,UAAAA,YAAY,CAACqO,OAAD,EAAUhQ,UAAV,EAAsB,CAAtB,CAAZ;AAEA,iBAAOA,UAAP;AACA,SAND,MAMO;AACN,iBAAOgQ,OAAP;AACA;AACD,OAVD;;AAYA,UAAIjR,eAAJ;;AACA,WAAKqS,mBAAL,GAA2B,YAAW;AAAE,eAAOrS,eAAP;AAAyB,OAAjE;;AACA,WAAKsS,mBAAL,GAA2B,UAASC,kBAAT,EAA6B;AACvD,YAAI,OAAOA,kBAAP,KAA8B,QAAlC,EACCvS,eAAe,GAAGuS,kBAAlB,CADD,KAGC,MAAM,IAAInW,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAAC2U,kBAAD,EAAqB,oBAArB,CAAzB,CAAhB,CAAN;AACD,OALD;;AAOA,UAAI7R,GAAG,GAAG,CAAV;;AACA,WAAK8R,OAAL,GAAe,YAAW;AAAE,eAAO9R,GAAP;AAAa,OAAzC;;AACA,WAAK+R,OAAL,GAAe,UAASC,MAAT,EAAiB;AAC/B,YAAIA,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,CAA3B,IAAgCA,MAAM,KAAK,CAA/C,EACChS,GAAG,GAAGgS,MAAN,CADD,KAGC,MAAM,IAAItW,KAAJ,CAAU,sBAAoBsW,MAA9B,CAAN;AACD,OALD;;AAOA,UAAI/R,QAAQ,GAAG,KAAf;;AACA,WAAKgS,YAAL,GAAoB,YAAW;AAAE,eAAOhS,QAAP;AAAkB,OAAnD;;AACA,WAAKiS,YAAL,GAAoB,UAASC,WAAT,EAAsB;AACzC,YAAI,OAAOA,WAAP,KAAuB,SAA3B,EACClS,QAAQ,GAAGkS,WAAX,CADD,KAGC,MAAM,IAAIzW,KAAJ,CAAUC,MAAM,CAACC,KAAK,CAACsB,gBAAP,EAAyB,CAACiV,WAAD,EAAc,aAAd,CAAzB,CAAhB,CAAN;AACD,OALD;;AAOA,UAAIpS,SAAS,GAAG,KAAhB;;AACA,WAAKqS,aAAL,GAAqB,YAAW;AAAE,eAAOrS,SAAP;AAAmB,OAArD;;AACA,WAAKsS,aAAL,GAAqB,UAASC,YAAT,EAAuB;AAAEvS,QAAAA,SAAS,GAAGuS,YAAZ;AAA2B,OAAzE;AACA,KAnED;;AAqEAxQ,IAAAA,OAAO,CAACrD,SAAR,GAAoB;AACnB,UAAI8T,aAAJ,GAAoB;AAAE,eAAO,KAAKd,iBAAL,EAAP;AAAkC,OADrC;;AAEnB,UAAIlS,YAAJ,GAAmB;AAAE,eAAO,KAAKmS,gBAAL,EAAP;AAAiC,OAFnC;;AAInB,UAAIpS,eAAJ,GAAsB;AAAE,eAAO,KAAKqS,mBAAL,EAAP;AAAoC,OAJzC;;AAKnB,UAAIrS,eAAJ,CAAoBuS,kBAApB,EAAwC;AAAE,aAAKD,mBAAL,CAAyBC,kBAAzB;AAA+C,OALtE;;AAOnB,UAAIvB,KAAJ,GAAY;AAAE,eAAO,KAAKqB,mBAAL,EAAP;AAAoC,OAP/B;;AAQnB,UAAIrB,KAAJ,CAAUkC,QAAV,EAAoB;AAAE,aAAKZ,mBAAL,CAAyBY,QAAzB;AAAqC,OARxC;;AAUnB,UAAIxS,GAAJ,GAAU;AAAE,eAAO,KAAK8R,OAAL,EAAP;AAAwB,OAVjB;;AAWnB,UAAI9R,GAAJ,CAAQgS,MAAR,EAAgB;AAAE,aAAKD,OAAL,CAAaC,MAAb;AAAuB,OAXtB;;AAanB,UAAI/R,QAAJ,GAAe;AAAE,eAAO,KAAKgS,YAAL,EAAP;AAA6B,OAb3B;;AAcnB,UAAIhS,QAAJ,CAAakS,WAAb,EAA0B;AAAE,aAAKD,YAAL,CAAkBC,WAAlB;AAAiC,OAd1C;;AAgBnB,UAAIpS,SAAJ,GAAgB;AAAE,eAAO,KAAKqS,aAAL,EAAP;AAA8B,OAhB7B;;AAiBnB,UAAIrS,SAAJ,CAAcuS,YAAd,EAA4B;AAAE,aAAKD,aAAL,CAAmBC,YAAnB;AAAmC;;AAjB9C,KAApB,CA9uEiC,CAkwEjC;;AACA,WAAO;AACNzE,MAAAA,MAAM,EAAEA,MADF;AAEN/L,MAAAA,OAAO,EAAEA;AAFH,KAAP;AAIA,GAvwEc,CAuwEZuB,MAvwEY,CAAf;;AAwwEA,SAAOnJ,QAAP;AACC,CAzxED","sourcesContent":["/*******************************************************************************\n * Copyright (c) 2013 IBM Corp.\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * and Eclipse Distribution License v1.0 which accompany this distribution.\n *\n * The Eclipse Public License is available at\n *    http://www.eclipse.org/legal/epl-v10.html\n * and the Eclipse Distribution License is available at\n *   http://www.eclipse.org/org/documents/edl-v10.php.\n *\n * Contributors:\n *    Andrew Banks - initial API and implementation and initial documentation\n *******************************************************************************/\n\n\n// Only expose a single object name in the global namespace.\n// Everything must go through this module. Global Paho.MQTT module\n// only has a single public function, client, which returns\n// a Paho.MQTT client object given connection details.\n\n/**\n * Send and receive messages using web browsers.\n * <p>\n * This programming interface lets a JavaScript client application use the MQTT V3.1 or\n * V3.1.1 protocol to connect to an MQTT-supporting messaging server.\n *\n * The function supported includes:\n * <ol>\n * <li>Connecting to and disconnecting from a server. The server is identified by its host name and port number.\n * <li>Specifying options that relate to the communications link with the server,\n * for example the frequency of keep-alive heartbeats, and whether SSL/TLS is required.\n * <li>Subscribing to and receiving messages from MQTT Topics.\n * <li>Publishing messages to MQTT Topics.\n * </ol>\n * <p>\n * The API consists of two main objects:\n * <dl>\n * <dt><b>{@link Paho.MQTT.Client}</b></dt>\n * <dd>This contains methods that provide the functionality of the API,\n * including provision of callbacks that notify the application when a message\n * arrives from or is delivered to the messaging server,\n * or when the status of its connection to the messaging server changes.</dd>\n * <dt><b>{@link Paho.MQTT.Message}</b></dt>\n * <dd>This encapsulates the payload of the message along with various attributes\n * associated with its delivery, in particular the destination to which it has\n * been (or is about to be) sent.</dd>\n * </dl>\n * <p>\n * The programming interface validates parameters passed to it, and will throw\n * an Error containing an error message intended for developer use, if it detects\n * an error with any parameter.\n * <p>\n * Example:\n *\n * <code><pre>\nclient = new Paho.MQTT.Client(location.hostname, Number(location.port), \"clientId\");\nclient.onConnectionLost = onConnectionLost;\nclient.onMessageArrived = onMessageArrived;\nclient.connect({onSuccess:onConnect});\n\nfunction onConnect() {\n  // Once a connection has been made, make a subscription and send a message.\n  console.log(\"onConnect\");\n  client.subscribe(\"/World\");\n  message = new Paho.MQTT.Message(\"Hello\");\n  message.destinationName = \"/World\";\n  client.send(message);\n};\nfunction onConnectionLost(responseObject) {\n  if (responseObject.errorCode !== 0)\n\tconsole.log(\"onConnectionLost:\"+responseObject.errorMessage);\n};\nfunction onMessageArrived(message) {\n  console.log(\"onMessageArrived:\"+message.payloadString);\n  client.disconnect();\n};\n * </pre></code>\n * @namespace Paho.MQTT\n */\n\n/* jshint shadow:true */\n(function ExportLibrary(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object'){\n\t\tmodule.exports = factory();\n\t} else if (typeof define === 'function' && define.amd){\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object'){\n\t\texports = factory();\n\t} else {\n\t\tif (typeof root.Paho === 'undefined'){\n\t\t\troot.Paho = {};\n\t\t}\n\t\troot.Paho.MQTT = factory();\n\t}\n})(this, function LibraryFactory(){\n\n\nvar PahoMQTT = (function (global) {\n\n\t// Private variables below, these are only visible inside the function closure\n\t// which is used to define the module.\n\n\tvar version = \"@VERSION@\";\n\tvar buildLevel = \"@BUILDLEVEL@\";\n\n\t/**\n\t * Unique message type identifiers, with associated\n\t * associated integer values.\n\t * @private\n\t */\n\tvar MESSAGE_TYPE = {\n\t\tCONNECT: 1,\n\t\tCONNACK: 2,\n\t\tPUBLISH: 3,\n\t\tPUBACK: 4,\n\t\tPUBREC: 5,\n\t\tPUBREL: 6,\n\t\tPUBCOMP: 7,\n\t\tSUBSCRIBE: 8,\n\t\tSUBACK: 9,\n\t\tUNSUBSCRIBE: 10,\n\t\tUNSUBACK: 11,\n\t\tPINGREQ: 12,\n\t\tPINGRESP: 13,\n\t\tDISCONNECT: 14\n\t};\n\n\t// Collection of utility methods used to simplify module code\n\t// and promote the DRY pattern.\n\n\t/**\n\t * Validate an object's parameter names to ensure they\n\t * match a list of expected variables name for this option\n\t * type. Used to ensure option object passed into the API don't\n\t * contain erroneous parameters.\n\t * @param {Object} obj - User options object\n\t * @param {Object} keys - valid keys and types that may exist in obj.\n\t * @throws {Error} Invalid option parameter found.\n\t * @private\n\t */\n\tvar validate = function(obj, keys) {\n\t\tfor (var key in obj) {\n\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\tif (keys.hasOwnProperty(key)) {\n\t\t\t\t\tif (typeof obj[key] !== keys[key])\n\t\t\t\t\t   throw new Error(format(ERROR.INVALID_TYPE, [typeof obj[key], key]));\n\t\t\t\t} else {\n\t\t\t\t\tvar errorStr = \"Unknown property, \" + key + \". Valid properties are:\";\n\t\t\t\t\tfor (var validKey in keys)\n\t\t\t\t\t\tif (keys.hasOwnProperty(validKey))\n\t\t\t\t\t\t\terrorStr = errorStr+\" \"+validKey;\n\t\t\t\t\tthrow new Error(errorStr);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Return a new function which runs the user function bound\n\t * to a fixed scope.\n\t * @param {function} User function\n\t * @param {object} Function scope\n\t * @return {function} User function bound to another scope\n\t * @private\n\t */\n\tvar scope = function (f, scope) {\n\t\treturn function () {\n\t\t\treturn f.apply(scope, arguments);\n\t\t};\n\t};\n\n\t/**\n\t * Unique message type identifiers, with associated\n\t * associated integer values.\n\t * @private\n\t */\n\tvar ERROR = {\n\t\tOK: {code:0, text:\"AMQJSC0000I OK.\"},\n\t\tCONNECT_TIMEOUT: {code:1, text:\"AMQJSC0001E Connect timed out.\"},\n\t\tSUBSCRIBE_TIMEOUT: {code:2, text:\"AMQJS0002E Subscribe timed out.\"},\n\t\tUNSUBSCRIBE_TIMEOUT: {code:3, text:\"AMQJS0003E Unsubscribe timed out.\"},\n\t\tPING_TIMEOUT: {code:4, text:\"AMQJS0004E Ping timed out.\"},\n\t\tINTERNAL_ERROR: {code:5, text:\"AMQJS0005E Internal error. Error Message: {0}, Stack trace: {1}\"},\n\t\tCONNACK_RETURNCODE: {code:6, text:\"AMQJS0006E Bad Connack return code:{0} {1}.\"},\n\t\tSOCKET_ERROR: {code:7, text:\"AMQJS0007E Socket error:{0}.\"},\n\t\tSOCKET_CLOSE: {code:8, text:\"AMQJS0008I Socket closed.\"},\n\t\tMALFORMED_UTF: {code:9, text:\"AMQJS0009E Malformed UTF data:{0} {1} {2}.\"},\n\t\tUNSUPPORTED: {code:10, text:\"AMQJS0010E {0} is not supported by this browser.\"},\n\t\tINVALID_STATE: {code:11, text:\"AMQJS0011E Invalid state {0}.\"},\n\t\tINVALID_TYPE: {code:12, text:\"AMQJS0012E Invalid type {0} for {1}.\"},\n\t\tINVALID_ARGUMENT: {code:13, text:\"AMQJS0013E Invalid argument {0} for {1}.\"},\n\t\tUNSUPPORTED_OPERATION: {code:14, text:\"AMQJS0014E Unsupported operation.\"},\n\t\tINVALID_STORED_DATA: {code:15, text:\"AMQJS0015E Invalid data in local storage key={0} value={1}.\"},\n\t\tINVALID_MQTT_MESSAGE_TYPE: {code:16, text:\"AMQJS0016E Invalid MQTT message type {0}.\"},\n\t\tMALFORMED_UNICODE: {code:17, text:\"AMQJS0017E Malformed Unicode string:{0} {1}.\"},\n\t\tBUFFER_FULL: {code:18, text:\"AMQJS0018E Message buffer is full, maximum buffer size: {0}.\"},\n\t};\n\n\t/** CONNACK RC Meaning. */\n\tvar CONNACK_RC = {\n\t\t0:\"Connection Accepted\",\n\t\t1:\"Connection Refused: unacceptable protocol version\",\n\t\t2:\"Connection Refused: identifier rejected\",\n\t\t3:\"Connection Refused: server unavailable\",\n\t\t4:\"Connection Refused: bad user name or password\",\n\t\t5:\"Connection Refused: not authorized\"\n\t};\n\n\t/**\n\t * Format an error message text.\n\t * @private\n\t * @param {error} ERROR.KEY value above.\n\t * @param {substitutions} [array] substituted into the text.\n\t * @return the text with the substitutions made.\n\t */\n\tvar format = function(error, substitutions) {\n\t\tvar text = error.text;\n\t\tif (substitutions) {\n\t\t  var field,start;\n\t\t  for (var i=0; i<substitutions.length; i++) {\n\t\t\tfield = \"{\"+i+\"}\";\n\t\t\tstart = text.indexOf(field);\n\t\t\tif(start > 0) {\n\t\t\t\tvar part1 = text.substring(0,start);\n\t\t\t\tvar part2 = text.substring(start+field.length);\n\t\t\t\ttext = part1+substitutions[i]+part2;\n\t\t\t}\n\t\t  }\n\t\t}\n\t\treturn text;\n\t};\n\n\t//MQTT protocol and version          6    M    Q    I    s    d    p    3\n\tvar MqttProtoIdentifierv3 = [0x00,0x06,0x4d,0x51,0x49,0x73,0x64,0x70,0x03];\n\t//MQTT proto/version for 311         4    M    Q    T    T    4\n\tvar MqttProtoIdentifierv4 = [0x00,0x04,0x4d,0x51,0x54,0x54,0x04];\n\n\t/**\n\t * Construct an MQTT wire protocol message.\n\t * @param type MQTT packet type.\n\t * @param options optional wire message attributes.\n\t *\n\t * Optional properties\n\t *\n\t * messageIdentifier: message ID in the range [0..65535]\n\t * payloadMessage:\tApplication Message - PUBLISH only\n\t * connectStrings:\tarray of 0 or more Strings to be put into the CONNECT payload\n\t * topics:\t\t\tarray of strings (SUBSCRIBE, UNSUBSCRIBE)\n\t * requestQoS:\t\tarray of QoS values [0..2]\n\t *\n\t * \"Flag\" properties\n\t * cleanSession:\ttrue if present / false if absent (CONNECT)\n\t * willMessage:  \ttrue if present / false if absent (CONNECT)\n\t * isRetained:\t\ttrue if present / false if absent (CONNECT)\n\t * userName:\t\ttrue if present / false if absent (CONNECT)\n\t * password:\t\ttrue if present / false if absent (CONNECT)\n\t * keepAliveInterval:\tinteger [0..65535]  (CONNECT)\n\t *\n\t * @private\n\t * @ignore\n\t */\n\tvar WireMessage = function (type, options) {\n\t\tthis.type = type;\n\t\tfor (var name in options) {\n\t\t\tif (options.hasOwnProperty(name)) {\n\t\t\t\tthis[name] = options[name];\n\t\t\t}\n\t\t}\n\t};\n\n\tWireMessage.prototype.encode = function() {\n\t\t// Compute the first byte of the fixed header\n\t\tvar first = ((this.type & 0x0f) << 4);\n\n\t\t/*\n\t\t * Now calculate the length of the variable header + payload by adding up the lengths\n\t\t * of all the component parts\n\t\t */\n\n\t\tvar remLength = 0;\n\t\tvar topicStrLength = [];\n\t\tvar destinationNameLength = 0;\n\t\tvar willMessagePayloadBytes;\n\n\t\t// if the message contains a messageIdentifier then we need two bytes for that\n\t\tif (this.messageIdentifier !== undefined)\n\t\t\tremLength += 2;\n\n\t\tswitch(this.type) {\n\t\t\t// If this a Connect then we need to include 12 bytes for its header\n\t\t\tcase MESSAGE_TYPE.CONNECT:\n\t\t\t\tswitch(this.mqttVersion) {\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tremLength += MqttProtoIdentifierv3.length + 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tremLength += MqttProtoIdentifierv4.length + 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tremLength += UTF8Length(this.clientId) + 2;\n\t\t\t\tif (this.willMessage !== undefined) {\n\t\t\t\t\tremLength += UTF8Length(this.willMessage.destinationName) + 2;\n\t\t\t\t\t// Will message is always a string, sent as UTF-8 characters with a preceding length.\n\t\t\t\t\twillMessagePayloadBytes = this.willMessage.payloadBytes;\n\t\t\t\t\tif (!(willMessagePayloadBytes instanceof Uint8Array))\n\t\t\t\t\t\twillMessagePayloadBytes = new Uint8Array(payloadBytes);\n\t\t\t\t\tremLength += willMessagePayloadBytes.byteLength +2;\n\t\t\t\t}\n\t\t\t\tif (this.userName !== undefined)\n\t\t\t\t\tremLength += UTF8Length(this.userName) + 2;\n\t\t\t\tif (this.password !== undefined)\n\t\t\t\t\tremLength += UTF8Length(this.password) + 2;\n\t\t\tbreak;\n\n\t\t\t// Subscribe, Unsubscribe can both contain topic strings\n\t\t\tcase MESSAGE_TYPE.SUBSCRIBE:\n\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\tfor ( var i = 0; i < this.topics.length; i++) {\n\t\t\t\t\ttopicStrLength[i] = UTF8Length(this.topics[i]);\n\t\t\t\t\tremLength += topicStrLength[i] + 2;\n\t\t\t\t}\n\t\t\t\tremLength += this.requestedQos.length; // 1 byte for each topic's Qos\n\t\t\t\t// QoS on Subscribe only\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.UNSUBSCRIBE:\n\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\tfor ( var i = 0; i < this.topics.length; i++) {\n\t\t\t\t\ttopicStrLength[i] = UTF8Length(this.topics[i]);\n\t\t\t\t\tremLength += topicStrLength[i] + 2;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBREL:\n\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\tif (this.payloadMessage.duplicate) first |= 0x08;\n\t\t\t\tfirst  = first |= (this.payloadMessage.qos << 1);\n\t\t\t\tif (this.payloadMessage.retained) first |= 0x01;\n\t\t\t\tdestinationNameLength = UTF8Length(this.payloadMessage.destinationName);\n\t\t\t\tremLength += destinationNameLength + 2;\n\t\t\t\tvar payloadBytes = this.payloadMessage.payloadBytes;\n\t\t\t\tremLength += payloadBytes.byteLength;\n\t\t\t\tif (payloadBytes instanceof ArrayBuffer)\n\t\t\t\t\tpayloadBytes = new Uint8Array(payloadBytes);\n\t\t\t\telse if (!(payloadBytes instanceof Uint8Array))\n\t\t\t\t\tpayloadBytes = new Uint8Array(payloadBytes.buffer);\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.DISCONNECT:\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Now we can allocate a buffer for the message\n\n\t\tvar mbi = encodeMBI(remLength);  // Convert the length to MQTT MBI format\n\t\tvar pos = mbi.length + 1;        // Offset of start of variable header\n\t\tvar buffer = new ArrayBuffer(remLength + pos);\n\t\tvar byteStream = new Uint8Array(buffer);    // view it as a sequence of bytes\n\n\t\t//Write the fixed header into the buffer\n\t\tbyteStream[0] = first;\n\t\tbyteStream.set(mbi,1);\n\n\t\t// If this is a PUBLISH then the variable header starts with a topic\n\t\tif (this.type == MESSAGE_TYPE.PUBLISH)\n\t\t\tpos = writeString(this.payloadMessage.destinationName, destinationNameLength, byteStream, pos);\n\t\t// If this is a CONNECT then the variable header contains the protocol name/version, flags and keepalive time\n\n\t\telse if (this.type == MESSAGE_TYPE.CONNECT) {\n\t\t\tswitch (this.mqttVersion) {\n\t\t\t\tcase 3:\n\t\t\t\t\tbyteStream.set(MqttProtoIdentifierv3, pos);\n\t\t\t\t\tpos += MqttProtoIdentifierv3.length;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tbyteStream.set(MqttProtoIdentifierv4, pos);\n\t\t\t\t\tpos += MqttProtoIdentifierv4.length;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar connectFlags = 0;\n\t\t\tif (this.cleanSession)\n\t\t\t\tconnectFlags = 0x02;\n\t\t\tif (this.willMessage !== undefined ) {\n\t\t\t\tconnectFlags |= 0x04;\n\t\t\t\tconnectFlags |= (this.willMessage.qos<<3);\n\t\t\t\tif (this.willMessage.retained) {\n\t\t\t\t\tconnectFlags |= 0x20;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.userName !== undefined)\n\t\t\t\tconnectFlags |= 0x80;\n\t\t\tif (this.password !== undefined)\n\t\t\t\tconnectFlags |= 0x40;\n\t\t\tbyteStream[pos++] = connectFlags;\n\t\t\tpos = writeUint16 (this.keepAliveInterval, byteStream, pos);\n\t\t}\n\n\t\t// Output the messageIdentifier - if there is one\n\t\tif (this.messageIdentifier !== undefined)\n\t\t\tpos = writeUint16 (this.messageIdentifier, byteStream, pos);\n\n\t\tswitch(this.type) {\n\t\t\tcase MESSAGE_TYPE.CONNECT:\n\t\t\t\tpos = writeString(this.clientId, UTF8Length(this.clientId), byteStream, pos);\n\t\t\t\tif (this.willMessage !== undefined) {\n\t\t\t\t\tpos = writeString(this.willMessage.destinationName, UTF8Length(this.willMessage.destinationName), byteStream, pos);\n\t\t\t\t\tpos = writeUint16(willMessagePayloadBytes.byteLength, byteStream, pos);\n\t\t\t\t\tbyteStream.set(willMessagePayloadBytes, pos);\n\t\t\t\t\tpos += willMessagePayloadBytes.byteLength;\n\n\t\t\t\t}\n\t\t\tif (this.userName !== undefined)\n\t\t\t\tpos = writeString(this.userName, UTF8Length(this.userName), byteStream, pos);\n\t\t\tif (this.password !== undefined)\n\t\t\t\tpos = writeString(this.password, UTF8Length(this.password), byteStream, pos);\n\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t// PUBLISH has a text or binary payload, if text do not add a 2 byte length field, just the UTF characters.\n\t\t\t\tbyteStream.set(payloadBytes, pos);\n\n\t\t\t\tbreak;\n\n//    \t    case MESSAGE_TYPE.PUBREC:\n//    \t    case MESSAGE_TYPE.PUBREL:\n//    \t    case MESSAGE_TYPE.PUBCOMP:\n//    \t    \tbreak;\n\n\t\t\tcase MESSAGE_TYPE.SUBSCRIBE:\n\t\t\t\t// SUBSCRIBE has a list of topic strings and request QoS\n\t\t\t\tfor (var i=0; i<this.topics.length; i++) {\n\t\t\t\t\tpos = writeString(this.topics[i], topicStrLength[i], byteStream, pos);\n\t\t\t\t\tbyteStream[pos++] = this.requestedQos[i];\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.UNSUBSCRIBE:\n\t\t\t\t// UNSUBSCRIBE has a list of topic strings\n\t\t\t\tfor (var i=0; i<this.topics.length; i++)\n\t\t\t\t\tpos = writeString(this.topics[i], topicStrLength[i], byteStream, pos);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// Do nothing.\n\t\t}\n\n\t\treturn buffer;\n\t};\n\n\tfunction decodeMessage(input,pos) {\n\t    var startingPos = pos;\n\t\tvar first = input[pos];\n\t\tvar type = first >> 4;\n\t\tvar messageInfo = first &= 0x0f;\n\t\tpos += 1;\n\n\n\t\t// Decode the remaining length (MBI format)\n\n\t\tvar digit;\n\t\tvar remLength = 0;\n\t\tvar multiplier = 1;\n\t\tdo {\n\t\t\tif (pos == input.length) {\n\t\t\t    return [null,startingPos];\n\t\t\t}\n\t\t\tdigit = input[pos++];\n\t\t\tremLength += ((digit & 0x7F) * multiplier);\n\t\t\tmultiplier *= 128;\n\t\t} while ((digit & 0x80) !== 0);\n\n\t\tvar endPos = pos+remLength;\n\t\tif (endPos > input.length) {\n\t\t    return [null,startingPos];\n\t\t}\n\n\t\tvar wireMessage = new WireMessage(type);\n\t\tswitch(type) {\n\t\t\tcase MESSAGE_TYPE.CONNACK:\n\t\t\t\tvar connectAcknowledgeFlags = input[pos++];\n\t\t\t\tif (connectAcknowledgeFlags & 0x01)\n\t\t\t\t\twireMessage.sessionPresent = true;\n\t\t\t\twireMessage.returnCode = input[pos++];\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\tvar qos = (messageInfo >> 1) & 0x03;\n\n\t\t\t\tvar len = readUint16(input, pos);\n\t\t\t\tpos += 2;\n\t\t\t\tvar topicName = parseUTF8(input, pos, len);\n\t\t\t\tpos += len;\n\t\t\t\t// If QoS 1 or 2 there will be a messageIdentifier\n\t\t\t\tif (qos > 0) {\n\t\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\t\tpos += 2;\n\t\t\t\t}\n\n\t\t\t\tvar message = new Paho.MQTT.Message(input.subarray(pos, endPos));\n\t\t\t\tif ((messageInfo & 0x01) == 0x01)\n\t\t\t\t\tmessage.retained = true;\n\t\t\t\tif ((messageInfo & 0x08) == 0x08)\n\t\t\t\t\tmessage.duplicate =  true;\n\t\t\t\tmessage.qos = qos;\n\t\t\t\tmessage.destinationName = topicName;\n\t\t\t\twireMessage.payloadMessage = message;\n\t\t\t\tbreak;\n\n\t\t\tcase  MESSAGE_TYPE.PUBACK:\n\t\t\tcase  MESSAGE_TYPE.PUBREC:\n\t\t\tcase  MESSAGE_TYPE.PUBREL:\n\t\t\tcase  MESSAGE_TYPE.PUBCOMP:\n\t\t\tcase  MESSAGE_TYPE.UNSUBACK:\n\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\tbreak;\n\n\t\t\tcase  MESSAGE_TYPE.SUBACK:\n\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\tpos += 2;\n\t\t\t\twireMessage.returnCode = input.subarray(pos, endPos);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn [wireMessage,endPos];\n\t}\n\n\tfunction writeUint16(input, buffer, offset) {\n\t\tbuffer[offset++] = input >> 8;      //MSB\n\t\tbuffer[offset++] = input % 256;     //LSB\n\t\treturn offset;\n\t}\n\n\tfunction writeString(input, utf8Length, buffer, offset) {\n\t\toffset = writeUint16(utf8Length, buffer, offset);\n\t\tstringToUTF8(input, buffer, offset);\n\t\treturn offset + utf8Length;\n\t}\n\n\tfunction readUint16(buffer, offset) {\n\t\treturn 256*buffer[offset] + buffer[offset+1];\n\t}\n\n\t/**\n\t * Encodes an MQTT Multi-Byte Integer\n\t * @private\n\t */\n\tfunction encodeMBI(number) {\n\t\tvar output = new Array(1);\n\t\tvar numBytes = 0;\n\n\t\tdo {\n\t\t\tvar digit = number % 128;\n\t\t\tnumber = number >> 7;\n\t\t\tif (number > 0) {\n\t\t\t\tdigit |= 0x80;\n\t\t\t}\n\t\t\toutput[numBytes++] = digit;\n\t\t} while ( (number > 0) && (numBytes<4) );\n\n\t\treturn output;\n\t}\n\n\t/**\n\t * Takes a String and calculates its length in bytes when encoded in UTF8.\n\t * @private\n\t */\n\tfunction UTF8Length(input) {\n\t\tvar output = 0;\n\t\tfor (var i = 0; i<input.length; i++)\n\t\t{\n\t\t\tvar charCode = input.charCodeAt(i);\n\t\t\t\tif (charCode > 0x7FF)\n\t\t\t\t   {\n\t\t\t\t\t  // Surrogate pair means its a 4 byte character\n\t\t\t\t\t  if (0xD800 <= charCode && charCode <= 0xDBFF)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t  i++;\n\t\t\t\t\t\t  output++;\n\t\t\t\t\t\t}\n\t\t\t\t   output +=3;\n\t\t\t\t   }\n\t\t\telse if (charCode > 0x7F)\n\t\t\t\toutput +=2;\n\t\t\telse\n\t\t\t\toutput++;\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Takes a String and writes it into an array as UTF8 encoded bytes.\n\t * @private\n\t */\n\tfunction stringToUTF8(input, output, start) {\n\t\tvar pos = start;\n\t\tfor (var i = 0; i<input.length; i++) {\n\t\t\tvar charCode = input.charCodeAt(i);\n\n\t\t\t// Check for a surrogate pair.\n\t\t\tif (0xD800 <= charCode && charCode <= 0xDBFF) {\n\t\t\t\tvar lowCharCode = input.charCodeAt(++i);\n\t\t\t\tif (isNaN(lowCharCode)) {\n\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UNICODE, [charCode, lowCharCode]));\n\t\t\t\t}\n\t\t\t\tcharCode = ((charCode - 0xD800)<<10) + (lowCharCode - 0xDC00) + 0x10000;\n\n\t\t\t}\n\n\t\t\tif (charCode <= 0x7F) {\n\t\t\t\toutput[pos++] = charCode;\n\t\t\t} else if (charCode <= 0x7FF) {\n\t\t\t\toutput[pos++] = charCode>>6  & 0x1F | 0xC0;\n\t\t\t\toutput[pos++] = charCode     & 0x3F | 0x80;\n\t\t\t} else if (charCode <= 0xFFFF) {\n\t\t\t\toutput[pos++] = charCode>>12 & 0x0F | 0xE0;\n\t\t\t\toutput[pos++] = charCode>>6  & 0x3F | 0x80;\n\t\t\t\toutput[pos++] = charCode     & 0x3F | 0x80;\n\t\t\t} else {\n\t\t\t\toutput[pos++] = charCode>>18 & 0x07 | 0xF0;\n\t\t\t\toutput[pos++] = charCode>>12 & 0x3F | 0x80;\n\t\t\t\toutput[pos++] = charCode>>6  & 0x3F | 0x80;\n\t\t\t\toutput[pos++] = charCode     & 0x3F | 0x80;\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction parseUTF8(input, offset, length) {\n\t\tvar output = \"\";\n\t\tvar utf16;\n\t\tvar pos = offset;\n\n\t\twhile (pos < offset+length)\n\t\t{\n\t\t\tvar byte1 = input[pos++];\n\t\t\tif (byte1 < 128)\n\t\t\t\tutf16 = byte1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar byte2 = input[pos++]-128;\n\t\t\t\tif (byte2 < 0)\n\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16),\"\"]));\n\t\t\t\tif (byte1 < 0xE0)             // 2 byte character\n\t\t\t\t\tutf16 = 64*(byte1-0xC0) + byte2;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar byte3 = input[pos++]-128;\n\t\t\t\t\tif (byte3 < 0)\n\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), byte3.toString(16)]));\n\t\t\t\t\tif (byte1 < 0xF0)        // 3 byte character\n\t\t\t\t\t\tutf16 = 4096*(byte1-0xE0) + 64*byte2 + byte3;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t   var byte4 = input[pos++]-128;\n\t\t\t\t\t\t\t\t   if (byte4 < 0)\n\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), byte3.toString(16), byte4.toString(16)]));\n\t\t\t\t\t\t\t\t   if (byte1 < 0xF8)        // 4 byte character\n\t\t\t\t\t\t\t\t\t\t   utf16 = 262144*(byte1-0xF0) + 4096*byte2 + 64*byte3 + byte4;\n\t\t\t\t\t   else                     // longer encodings are not supported\n\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), byte3.toString(16), byte4.toString(16)]));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\tif (utf16 > 0xFFFF)   // 4 byte character - express as a surrogate pair\n\t\t\t\t  {\n\t\t\t\t\t utf16 -= 0x10000;\n\t\t\t\t\t output += String.fromCharCode(0xD800 + (utf16 >> 10)); // lead character\n\t\t\t\t\t utf16 = 0xDC00 + (utf16 & 0x3FF);  // trail character\n\t\t\t\t  }\n\t\t\toutput += String.fromCharCode(utf16);\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Repeat keepalive requests, monitor responses.\n\t * @ignore\n\t */\n\tvar Pinger = function(client, window, keepAliveInterval) {\n\t\tthis._client = client;\n\t\tthis._window = window;\n\t\tthis._keepAliveInterval = keepAliveInterval*1000;\n\t\tthis.isReset = false;\n\n\t\tvar pingReq = new WireMessage(MESSAGE_TYPE.PINGREQ).encode();\n\n\t\tvar doTimeout = function (pinger) {\n\t\t\treturn function () {\n\t\t\t\treturn doPing.apply(pinger);\n\t\t\t};\n\t\t};\n\n\t\t/** @ignore */\n\t\tvar doPing = function() {\n\t\t\tif (!this.isReset) {\n\t\t\t\tthis._client._trace(\"Pinger.doPing\", \"Timed out\");\n\t\t\t\tthis._client._disconnected( ERROR.PING_TIMEOUT.code , format(ERROR.PING_TIMEOUT));\n\t\t\t} else {\n\t\t\t\tthis.isReset = false;\n\t\t\t\tthis._client._trace(\"Pinger.doPing\", \"send PINGREQ\");\n\t\t\t\tthis._client.socket.send(pingReq);\n\t\t\t\tthis.timeout = this._window.setTimeout(doTimeout(this), this._keepAliveInterval);\n\t\t\t}\n\t\t};\n\n\t\tthis.reset = function() {\n\t\t\tthis.isReset = true;\n\t\t\tthis._window.clearTimeout(this.timeout);\n\t\t\tif (this._keepAliveInterval > 0)\n\t\t\t\tthis.timeout = setTimeout(doTimeout(this), this._keepAliveInterval);\n\t\t};\n\n\t\tthis.cancel = function() {\n\t\t\tthis._window.clearTimeout(this.timeout);\n\t\t};\n\t };\n\n\t/**\n\t * Monitor request completion.\n\t * @ignore\n\t */\n\tvar Timeout = function(client, window, timeoutSeconds, action, args) {\n\t\tthis._window = window;\n\t\tif (!timeoutSeconds)\n\t\t\ttimeoutSeconds = 30;\n\n\t\tvar doTimeout = function (action, client, args) {\n\t\t\treturn function () {\n\t\t\t\treturn action.apply(client, args);\n\t\t\t};\n\t\t};\n\t\tthis.timeout = setTimeout(doTimeout(action, client, args), timeoutSeconds * 1000);\n\n\t\tthis.cancel = function() {\n\t\t\tthis._window.clearTimeout(this.timeout);\n\t\t};\n\t};\n\n\t/*\n\t * Internal implementation of the Websockets MQTT V3.1 client.\n\t *\n\t * @name Paho.MQTT.ClientImpl @constructor\n\t * @param {String} host the DNS nameof the webSocket host.\n\t * @param {Number} port the port number for that host.\n\t * @param {String} clientId the MQ client identifier.\n\t */\n\tvar ClientImpl = function (uri, host, port, path, clientId) {\n\t\t// Check dependencies are satisfied in this browser.\n\t\tif (!(\"WebSocket\" in global && global.WebSocket !== null)) {\n\t\t\tthrow new Error(format(ERROR.UNSUPPORTED, [\"WebSocket\"]));\n\t\t}\n\t\tif (!(\"localStorage\" in global && global.localStorage !== null)) {\n\t\t\tthrow new Error(format(ERROR.UNSUPPORTED, [\"localStorage\"]));\n\t\t}\n\t\tif (!(\"ArrayBuffer\" in global && global.ArrayBuffer !== null)) {\n\t\t\tthrow new Error(format(ERROR.UNSUPPORTED, [\"ArrayBuffer\"]));\n\t\t}\n\t\tthis._trace(\"Paho.MQTT.Client\", uri, host, port, path, clientId);\n\n\t\tthis.host = host;\n\t\tthis.port = port;\n\t\tthis.path = path;\n\t\tthis.uri = uri;\n\t\tthis.clientId = clientId;\n\t\tthis._wsuri = null;\n\n\t\t// Local storagekeys are qualified with the following string.\n\t\t// The conditional inclusion of path in the key is for backward\n\t\t// compatibility to when the path was not configurable and assumed to\n\t\t// be /mqtt\n\t\tthis._localKey=host+\":\"+port+(path!=\"/mqtt\"?\":\"+path:\"\")+\":\"+clientId+\":\";\n\n\t\t// Create private instance-only message queue\n\t\t// Internal queue of messages to be sent, in sending order.\n\t\tthis._msg_queue = [];\n\t\tthis._buffered_msg_queue = [];\n\n\t\t// Messages we have sent and are expecting a response for, indexed by their respective message ids.\n\t\tthis._sentMessages = {};\n\n\t\t// Messages we have received and acknowleged and are expecting a confirm message for\n\t\t// indexed by their respective message ids.\n\t\tthis._receivedMessages = {};\n\n\t\t// Internal list of callbacks to be executed when messages\n\t\t// have been successfully sent over web socket, e.g. disconnect\n\t\t// when it doesn't have to wait for ACK, just message is dispatched.\n\t\tthis._notify_msg_sent = {};\n\n\t\t// Unique identifier for SEND messages, incrementing\n\t\t// counter as messages are sent.\n\t\tthis._message_identifier = 1;\n\n\t\t// Used to determine the transmission sequence of stored sent messages.\n\t\tthis._sequence = 0;\n\n\n\t\t// Load the local state, if any, from the saved version, only restore state relevant to this client.\n\t\tfor (var key in localStorage)\n\t\t\tif (   key.indexOf(\"Sent:\"+this._localKey) === 0 || key.indexOf(\"Received:\"+this._localKey) === 0)\n\t\t\tthis.restore(key);\n\t};\n\n\t// Messaging Client public instance members.\n\tClientImpl.prototype.host = null;\n\tClientImpl.prototype.port = null;\n\tClientImpl.prototype.path = null;\n\tClientImpl.prototype.uri = null;\n\tClientImpl.prototype.clientId = null;\n\n\t// Messaging Client private instance members.\n\tClientImpl.prototype.socket = null;\n\t/* true once we have received an acknowledgement to a CONNECT packet. */\n\tClientImpl.prototype.connected = false;\n\t/* The largest message identifier allowed, may not be larger than 2**16 but\n\t * if set smaller reduces the maximum number of outbound messages allowed.\n\t */\n\tClientImpl.prototype.maxMessageIdentifier = 65536;\n\tClientImpl.prototype.connectOptions = null;\n\tClientImpl.prototype.hostIndex = null;\n\tClientImpl.prototype.onConnected = null;\n\tClientImpl.prototype.onConnectionLost = null;\n\tClientImpl.prototype.onMessageDelivered = null;\n\tClientImpl.prototype.onMessageArrived = null;\n\tClientImpl.prototype.traceFunction = null;\n\tClientImpl.prototype._msg_queue = null;\n\tClientImpl.prototype._buffered_msg_queue = null;\n\tClientImpl.prototype._connectTimeout = null;\n\t/* The sendPinger monitors how long we allow before we send data to prove to the server that we are alive. */\n\tClientImpl.prototype.sendPinger = null;\n\t/* The receivePinger monitors how long we allow before we require evidence that the server is alive. */\n\tClientImpl.prototype.receivePinger = null;\n\tClientImpl.prototype._reconnectInterval = 1; // Reconnect Delay, starts at 1 second\n\tClientImpl.prototype._reconnecting = false;\n\tClientImpl.prototype._reconnectTimeout = null;\n\tClientImpl.prototype.disconnectedPublishing = false;\n\tClientImpl.prototype.disconnectedBufferSize = 5000;\n\n\tClientImpl.prototype.receiveBuffer = null;\n\n\tClientImpl.prototype._traceBuffer = null;\n\tClientImpl.prototype._MAX_TRACE_ENTRIES = 100;\n\n\tClientImpl.prototype.connect = function (connectOptions) {\n\t\tvar connectOptionsMasked = this._traceMask(connectOptions, \"password\");\n\t\tthis._trace(\"Client.connect\", connectOptionsMasked, this.socket, this.connected);\n\n\t\tif (this.connected)\n\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"already connected\"]));\n\t\tif (this.socket)\n\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"already connected\"]));\n\n\t\tif (this._reconnecting) {\n\t\t\t// connect() function is called while reconnect is in progress.\n\t\t\t// Terminate the auto reconnect process to use new connect options.\n\t\t\tthis._reconnectTimeout.cancel();\n\t\t\tthis._reconnectTimeout = null;\n\t\t\tthis._reconnecting = false;\n\t\t}\n\n\t\tthis.connectOptions = connectOptions;\n\t\tthis._reconnectInterval = 1;\n\t\tthis._reconnecting = false;\n\t\tif (connectOptions.uris) {\n\t\t\tthis.hostIndex = 0;\n\t\t\tthis._doConnect(connectOptions.uris[0]);\n\t\t} else {\n\t\t\tthis._doConnect(this.uri);\n\t\t}\n\n\t};\n\n\tClientImpl.prototype.subscribe = function (filter, subscribeOptions) {\n\t\tthis._trace(\"Client.subscribe\", filter, subscribeOptions);\n\n\t\tif (!this.connected)\n\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"not connected\"]));\n\n\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.SUBSCRIBE);\n\t\twireMessage.topics=[filter];\n\t\tif (subscribeOptions.qos !== undefined)\n\t\t\twireMessage.requestedQos = [subscribeOptions.qos];\n\t\telse\n\t\t\twireMessage.requestedQos = [0];\n\n\t\tif (subscribeOptions.onSuccess) {\n\t\t\twireMessage.onSuccess = function(grantedQos) {subscribeOptions.onSuccess({invocationContext:subscribeOptions.invocationContext,grantedQos:grantedQos});};\n\t\t}\n\n\t\tif (subscribeOptions.onFailure) {\n\t\t\twireMessage.onFailure = function(errorCode) {subscribeOptions.onFailure({invocationContext:subscribeOptions.invocationContext,errorCode:errorCode, errorMessage:format(errorCode)});};\n\t\t}\n\n\t\tif (subscribeOptions.timeout) {\n\t\t\twireMessage.timeOut = new Timeout(this, window, subscribeOptions.timeout, subscribeOptions.onFailure,\n\t\t\t\t\t\t[{invocationContext:subscribeOptions.invocationContext,\n\t\t\t\t\t\terrorCode:ERROR.SUBSCRIBE_TIMEOUT.code,\n\t\t\t\t\t\terrorMessage:format(ERROR.SUBSCRIBE_TIMEOUT)}]);\n\t\t}\n\n\t\t// All subscriptions return a SUBACK.\n\t\tthis._requires_ack(wireMessage);\n\t\tthis._schedule_message(wireMessage);\n\t};\n\n\t/** @ignore */\n\tClientImpl.prototype.unsubscribe = function(filter, unsubscribeOptions) {\n\t\tthis._trace(\"Client.unsubscribe\", filter, unsubscribeOptions);\n\n\t\tif (!this.connected)\n\t\t   throw new Error(format(ERROR.INVALID_STATE, [\"not connected\"]));\n\n\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.UNSUBSCRIBE);\n\t\twireMessage.topics = [filter];\n\n\t\tif (unsubscribeOptions.onSuccess) {\n\t\t\twireMessage.callback = function() {unsubscribeOptions.onSuccess({invocationContext:unsubscribeOptions.invocationContext});};\n\t\t}\n\t\tif (unsubscribeOptions.timeout) {\n\t\t\twireMessage.timeOut = new Timeout(this, window, unsubscribeOptions.timeout, unsubscribeOptions.onFailure,\n\t\t\t\t\t  [{invocationContext:unsubscribeOptions.invocationContext,\n\t\t\t\t\t\terrorCode:ERROR.UNSUBSCRIBE_TIMEOUT.code,\n\t\t\t\t\t\terrorMessage:format(ERROR.UNSUBSCRIBE_TIMEOUT)}]);\n\t\t}\n\n\t\t// All unsubscribes return a SUBACK.\n\t\tthis._requires_ack(wireMessage);\n\t\tthis._schedule_message(wireMessage);\n\t};\n\n\tClientImpl.prototype.send = function (message) {\n\t\tthis._trace(\"Client.send\", message);\n\n\t\twireMessage = new WireMessage(MESSAGE_TYPE.PUBLISH);\n\t\twireMessage.payloadMessage = message;\n\n\t\tif (this.connected) {\n\t\t\t// Mark qos 1 & 2 message as \"ACK required\"\n\t\t\t// For qos 0 message, invoke onMessageDelivered callback if there is one.\n\t\t\t// Then schedule the message.\n\t\t\tif (message.qos > 0) {\n\t\t\tthis._requires_ack(wireMessage);\n\t\t\t} else if (this.onMessageDelivered) {\n\t\t\tthis._notify_msg_sent[wireMessage] = this.onMessageDelivered(wireMessage.payloadMessage);\n\t\t\t}\n\t\tthis._schedule_message(wireMessage);\n\t\t} else {\n\t\t\t// Currently disconnected, will not schedule this message\n\t\t\t// Check if reconnecting is in progress and disconnected publish is enabled.\n\t\t\tif (this._reconnecting && this.disconnectedPublishing) {\n\t\t\t\t// Check the limit which include the \"required ACK\" messages\n\t\t\t\tvar messageCount = Object.keys(this._sentMessages).length + this._buffered_msg_queue.length;\n\t\t\t\tif (messageCount > this.disconnectedBufferSize) {\n\t\t\t\t\tthrow new Error(format(ERROR.BUFFER_FULL, [this.disconnectedBufferSize]));\n\t\t\t\t} else {\n\t\t\t\t\tif (message.qos > 0) {\n\t\t\t\t\t\t// Mark this message as \"ACK required\"\n\t\t\t\t\t\tthis._requires_ack(wireMessage);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twireMessage.sequence = ++this._sequence;\n\t\t\t\t\t\tthis._buffered_msg_queue.push(wireMessage);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"not connected\"]));\n\t\t\t}\n\t\t}\n\t};\n\n\tClientImpl.prototype.disconnect = function () {\n\t\tthis._trace(\"Client.disconnect\");\n\n\t\tif (this._reconnecting) {\n\t\t\t// disconnect() function is called while reconnect is in progress.\n\t\t\t// Terminate the auto reconnect process.\n\t\t\tthis._reconnectTimeout.cancel();\n\t\t\tthis._reconnectTimeout = null;\n\t\t\tthis._reconnecting = false;\n\t\t}\n\n\t\tif (!this.socket)\n\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"not connecting or connected\"]));\n\n\t\twireMessage = new WireMessage(MESSAGE_TYPE.DISCONNECT);\n\n\t\t// Run the disconnected call back as soon as the message has been sent,\n\t\t// in case of a failure later on in the disconnect processing.\n\t\t// as a consequence, the _disconected call back may be run several times.\n\t\tthis._notify_msg_sent[wireMessage] = scope(this._disconnected, this);\n\n\t\tthis._schedule_message(wireMessage);\n\t};\n\n\tClientImpl.prototype.getTraceLog = function () {\n\t\tif ( this._traceBuffer !== null ) {\n\t\t\tthis._trace(\"Client.getTraceLog\", new Date());\n\t\t\tthis._trace(\"Client.getTraceLog in flight messages\", this._sentMessages.length);\n\t\t\tfor (var key in this._sentMessages)\n\t\t\t\tthis._trace(\"_sentMessages \",key, this._sentMessages[key]);\n\t\t\tfor (var key in this._receivedMessages)\n\t\t\t\tthis._trace(\"_receivedMessages \",key, this._receivedMessages[key]);\n\n\t\t\treturn this._traceBuffer;\n\t\t}\n\t};\n\n\tClientImpl.prototype.startTrace = function () {\n\t\tif ( this._traceBuffer === null ) {\n\t\t\tthis._traceBuffer = [];\n\t\t}\n\t\tthis._trace(\"Client.startTrace\", new Date(), version);\n\t};\n\n\tClientImpl.prototype.stopTrace = function () {\n\t\tdelete this._traceBuffer;\n\t};\n\n\tClientImpl.prototype._doConnect = function (wsurl) {\n\t\t// When the socket is open, this client will send the CONNECT WireMessage using the saved parameters.\n\t\tif (this.connectOptions.useSSL) {\n\t\t    var uriParts = wsurl.split(\":\");\n\t\t    uriParts[0] = \"wss\";\n\t\t    wsurl = uriParts.join(\":\");\n\t\t}\n\t\tthis._wsuri = wsurl;\n\t\tthis.connected = false;\n\n\n\n\t\tif (this.connectOptions.mqttVersion < 4) {\n\t\t\tthis.socket = new WebSocket(wsurl, [\"mqttv3.1\"]);\n\t\t} else {\n\t\t\tthis.socket = new WebSocket(wsurl, [\"mqtt\"]);\n\t\t}\n\t\tthis.socket.binaryType = 'arraybuffer';\n\t\tthis.socket.onopen = scope(this._on_socket_open, this);\n\t\tthis.socket.onmessage = scope(this._on_socket_message, this);\n\t\tthis.socket.onerror = scope(this._on_socket_error, this);\n\t\tthis.socket.onclose = scope(this._on_socket_close, this);\n\n\t\tthis.sendPinger = new Pinger(this, window, this.connectOptions.keepAliveInterval);\n\t\tthis.receivePinger = new Pinger(this, window, this.connectOptions.keepAliveInterval);\n\t\tif (this._connectTimeout) {\n\t\t\tthis._connectTimeout.cancel();\n\t\t\tthis._connectTimeout = null;\n\t\t}\n\t\tthis._connectTimeout = new Timeout(this, window, this.connectOptions.timeout, this._disconnected,  [ERROR.CONNECT_TIMEOUT.code, format(ERROR.CONNECT_TIMEOUT)]);\n\t};\n\n\n\t// Schedule a new message to be sent over the WebSockets\n\t// connection. CONNECT messages cause WebSocket connection\n\t// to be started. All other messages are queued internally\n\t// until this has happened. When WS connection starts, process\n\t// all outstanding messages.\n\tClientImpl.prototype._schedule_message = function (message) {\n\t\tthis._msg_queue.push(message);\n\t\t// Process outstanding messages in the queue if we have an  open socket, and have received CONNACK.\n\t\tif (this.connected) {\n\t\t\tthis._process_queue();\n\t\t}\n\t};\n\n\tClientImpl.prototype.store = function(prefix, wireMessage) {\n\t\tvar storedMessage = {type:wireMessage.type, messageIdentifier:wireMessage.messageIdentifier, version:1};\n\n\t\tswitch(wireMessage.type) {\n\t\t  case MESSAGE_TYPE.PUBLISH:\n\t\t\t  if(wireMessage.pubRecReceived)\n\t\t\t\t  storedMessage.pubRecReceived = true;\n\n\t\t\t  // Convert the payload to a hex string.\n\t\t\t  storedMessage.payloadMessage = {};\n\t\t\t  var hex = \"\";\n\t\t\t  var messageBytes = wireMessage.payloadMessage.payloadBytes;\n\t\t\t  for (var i=0; i<messageBytes.length; i++) {\n\t\t\t\tif (messageBytes[i] <= 0xF)\n\t\t\t\t  hex = hex+\"0\"+messageBytes[i].toString(16);\n\t\t\t\telse\n\t\t\t\t  hex = hex+messageBytes[i].toString(16);\n\t\t\t  }\n\t\t\t  storedMessage.payloadMessage.payloadHex = hex;\n\n\t\t\t  storedMessage.payloadMessage.qos = wireMessage.payloadMessage.qos;\n\t\t\t  storedMessage.payloadMessage.destinationName = wireMessage.payloadMessage.destinationName;\n\t\t\t  if (wireMessage.payloadMessage.duplicate)\n\t\t\t\t  storedMessage.payloadMessage.duplicate = true;\n\t\t\t  if (wireMessage.payloadMessage.retained)\n\t\t\t\t  storedMessage.payloadMessage.retained = true;\n\n\t\t\t  // Add a sequence number to sent messages.\n\t\t\t  if ( prefix.indexOf(\"Sent:\") === 0 ) {\n\t\t\t\t  if ( wireMessage.sequence === undefined )\n\t\t\t\t\t  wireMessage.sequence = ++this._sequence;\n\t\t\t\t  storedMessage.sequence = wireMessage.sequence;\n\t\t\t  }\n\t\t\t  break;\n\n\t\t\tdefault:\n\t\t\t\tthrow Error(format(ERROR.INVALID_STORED_DATA, [key, storedMessage]));\n\t\t}\n\t\tlocalStorage.setItem(prefix+this._localKey+wireMessage.messageIdentifier, JSON.stringify(storedMessage));\n\t};\n\n\tClientImpl.prototype.restore = function(key) {\n\t\tvar value = localStorage.getItem(key);\n\t\tvar storedMessage = JSON.parse(value);\n\n\t\tvar wireMessage = new WireMessage(storedMessage.type, storedMessage);\n\n\t\tswitch(storedMessage.type) {\n\t\t  case MESSAGE_TYPE.PUBLISH:\n\t\t\t  // Replace the payload message with a Message object.\n\t\t\t  var hex = storedMessage.payloadMessage.payloadHex;\n\t\t\t  var buffer = new ArrayBuffer((hex.length)/2);\n\t\t\t  var byteStream = new Uint8Array(buffer);\n\t\t\t  var i = 0;\n\t\t\t  while (hex.length >= 2) {\n\t\t\t\t  var x = parseInt(hex.substring(0, 2), 16);\n\t\t\t\t  hex = hex.substring(2, hex.length);\n\t\t\t\t  byteStream[i++] = x;\n\t\t\t  }\n\t\t\t  var payloadMessage = new Paho.MQTT.Message(byteStream);\n\n\t\t\t  payloadMessage.qos = storedMessage.payloadMessage.qos;\n\t\t\t  payloadMessage.destinationName = storedMessage.payloadMessage.destinationName;\n\t\t\t  if (storedMessage.payloadMessage.duplicate)\n\t\t\t\t  payloadMessage.duplicate = true;\n\t\t\t  if (storedMessage.payloadMessage.retained)\n\t\t\t\t  payloadMessage.retained = true;\n\t\t\t  wireMessage.payloadMessage = payloadMessage;\n\n\t\t\t  break;\n\n\t\t\tdefault:\n\t\t\t  throw Error(format(ERROR.INVALID_STORED_DATA, [key, value]));\n\t\t}\n\n\t\tif (key.indexOf(\"Sent:\"+this._localKey) === 0) {\n\t\t\twireMessage.payloadMessage.duplicate = true;\n\t\t\tthis._sentMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t} else if (key.indexOf(\"Received:\"+this._localKey) === 0) {\n\t\t\tthis._receivedMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t}\n\t};\n\n\tClientImpl.prototype._process_queue = function () {\n\t\tvar message = null;\n\t\t// Process messages in order they were added\n\t\tvar fifo = this._msg_queue.reverse();\n\n\t\t// Send all queued messages down socket connection\n\t\twhile ((message = fifo.pop())) {\n\t\t\tthis._socket_send(message);\n\t\t\t// Notify listeners that message was successfully sent\n\t\t\tif (this._notify_msg_sent[message]) {\n\t\t\t\tthis._notify_msg_sent[message]();\n\t\t\t\tdelete this._notify_msg_sent[message];\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Expect an ACK response for this message. Add message to the set of in progress\n\t * messages and set an unused identifier in this message.\n\t * @ignore\n\t */\n\tClientImpl.prototype._requires_ack = function (wireMessage) {\n\t\tvar messageCount = Object.keys(this._sentMessages).length;\n\t\tif (messageCount > this.maxMessageIdentifier)\n\t\t\tthrow Error (\"Too many messages:\"+messageCount);\n\n\t\twhile(this._sentMessages[this._message_identifier] !== undefined) {\n\t\t\tthis._message_identifier++;\n\t\t}\n\t\twireMessage.messageIdentifier = this._message_identifier;\n\t\tthis._sentMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\tif (wireMessage.type === MESSAGE_TYPE.PUBLISH) {\n\t\t\tthis.store(\"Sent:\", wireMessage);\n\t\t}\n\t\tif (this._message_identifier === this.maxMessageIdentifier) {\n\t\t\tthis._message_identifier = 1;\n\t\t}\n\t};\n\n\t/**\n\t * Called when the underlying websocket has been opened.\n\t * @ignore\n\t */\n\tClientImpl.prototype._on_socket_open = function () {\n\t\t// Create the CONNECT message object.\n\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.CONNECT, this.connectOptions);\n\t\twireMessage.clientId = this.clientId;\n\t\tthis._socket_send(wireMessage);\n\t};\n\n\t/**\n\t * Called when the underlying websocket has received a complete packet.\n\t * @ignore\n\t */\n\tClientImpl.prototype._on_socket_message = function (event) {\n\t\tthis._trace(\"Client._on_socket_message\", event.data);\n\t\tvar messages = this._deframeMessages(event.data);\n\t\tfor (var i = 0; i < messages.length; i+=1) {\n\t\t    this._handleMessage(messages[i]);\n\t\t}\n\t};\n\n\tClientImpl.prototype._deframeMessages = function(data) {\n\t\tvar byteArray = new Uint8Array(data);\n\t\tvar messages = [];\n\t    if (this.receiveBuffer) {\n\t        var newData = new Uint8Array(this.receiveBuffer.length+byteArray.length);\n\t        newData.set(this.receiveBuffer);\n\t        newData.set(byteArray,this.receiveBuffer.length);\n\t        byteArray = newData;\n\t        delete this.receiveBuffer;\n\t    }\n\t\ttry {\n\t\t    var offset = 0;\n\t\t    while(offset < byteArray.length) {\n\t\t        var result = decodeMessage(byteArray,offset);\n\t\t        var wireMessage = result[0];\n\t\t        offset = result[1];\n\t\t        if (wireMessage !== null) {\n\t\t            messages.push(wireMessage);\n\t\t        } else {\n\t\t            break;\n\t\t        }\n\t\t    }\n\t\t    if (offset < byteArray.length) {\n\t\t    \tthis.receiveBuffer = byteArray.subarray(offset);\n\t\t    }\n\t\t} catch (error) {\n\t\t\tvar errorStack = ((error.hasOwnProperty('stack') == 'undefined') ? error.stack.toString() : \"No Error Stack Available\");\n\t\t\tthis._disconnected(ERROR.INTERNAL_ERROR.code , format(ERROR.INTERNAL_ERROR, [error.message,errorStack]));\n\t\t\treturn;\n\t\t}\n\t\treturn messages;\n\t};\n\n\tClientImpl.prototype._handleMessage = function(wireMessage) {\n\n\t\tthis._trace(\"Client._handleMessage\", wireMessage);\n\n\t\ttry {\n\t\t\tswitch(wireMessage.type) {\n\t\t\tcase MESSAGE_TYPE.CONNACK:\n\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\tif (this._reconnectTimeout)\n\t\t\t\t\tthis._reconnectTimeout.cancel();\n\n\t\t\t\t// If we have started using clean session then clear up the local state.\n\t\t\t\tif (this.connectOptions.cleanSession) {\n\t\t\t\t\tfor (var key in this._sentMessages) {\n\t\t\t\t\t\tvar sentMessage = this._sentMessages[key];\n\t\t\t\t\t\tlocalStorage.removeItem(\"Sent:\"+this._localKey+sentMessage.messageIdentifier);\n\t\t\t\t\t}\n\t\t\t\t\tthis._sentMessages = {};\n\n\t\t\t\t\tfor (var key in this._receivedMessages) {\n\t\t\t\t\t\tvar receivedMessage = this._receivedMessages[key];\n\t\t\t\t\t\tlocalStorage.removeItem(\"Received:\"+this._localKey+receivedMessage.messageIdentifier);\n\t\t\t\t\t}\n\t\t\t\t\tthis._receivedMessages = {};\n\t\t\t\t}\n\t\t\t\t// Client connected and ready for business.\n\t\t\t\tif (wireMessage.returnCode === 0) {\n\n\t\t\t\t\tthis.connected = true;\n\t\t\t\t\t// Jump to the end of the list of uris and stop looking for a good host.\n\n\t\t\t\t\tif (this.connectOptions.uris)\n            this.hostIndex = this.connectOptions.uris.length;\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._disconnected(ERROR.CONNACK_RETURNCODE.code , format(ERROR.CONNACK_RETURNCODE, [wireMessage.returnCode, CONNACK_RC[wireMessage.returnCode]]));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Resend messages.\n\t\t\t\tvar sequencedMessages = [];\n\t\t\t\tfor (var msgId in this._sentMessages) {\n\t\t\t\t\tif (this._sentMessages.hasOwnProperty(msgId))\n\t\t\t\t\t\tsequencedMessages.push(this._sentMessages[msgId]);\n\t\t\t\t}\n\n\t\t\t\t// Also schedule qos 0 buffered messages if any\n\t\t\t\tif (this._buffered_msg_queue.length > 0) {\n\t\t\t\t\tvar msg = null;\n\t\t\t\t\tvar fifo = this._buffered_msg_queue.reverse();\n\t\t\t\t\twhile ((msg = fifo.pop())) {\n\t\t\t\t\t\tsequencedMessages.push(msg);\n\t\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\t\tthis._notify_msg_sent[msg] = this.onMessageDelivered(msg.payloadMessage);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Sort sentMessages into the original sent order.\n\t\t\t\tvar sequencedMessages = sequencedMessages.sort(function(a,b) {return a.sequence - b.sequence;} );\n\t\t\t\tfor (var i=0, len=sequencedMessages.length; i<len; i++) {\n\t\t\t\t\tvar sentMessage = sequencedMessages[i];\n\t\t\t\t\tif (sentMessage.type == MESSAGE_TYPE.PUBLISH && sentMessage.pubRecReceived) {\n\t\t\t\t\t\tvar pubRelMessage = new WireMessage(MESSAGE_TYPE.PUBREL, {messageIdentifier:sentMessage.messageIdentifier});\n\t\t\t\t\t\tthis._schedule_message(pubRelMessage);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._schedule_message(sentMessage);\n\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Execute the connectOptions.onSuccess callback if there is one.\n        // Will also now return if this connection was the result of an automatic\n        // reconnect and which URI was successfully connected to.\n\t\t\t\tif (this.connectOptions.onSuccess) {\n\t\t\t\t\tthis.connectOptions.onSuccess({invocationContext:this.connectOptions.invocationContext});\n\t\t\t\t}\n\n\t\t\t\tvar reconnected = false;\n\t\t\t\tif (this._reconnecting) {\n\t\t\t\t\treconnected = true;\n\t\t\t\t\tthis._reconnectInterval = 1;\n\t\t\t\t\tthis._reconnecting = false;\n\t\t\t\t}\n\n\t\t\t\t// Execute the onConnected callback if there is one.\n\t\t\t\tthis._connected(reconnected, this._wsuri);\n\n\t\t\t\t// Process all queued messages now that the connection is established.\n\t\t\t\tthis._process_queue();\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\tthis._receivePublish(wireMessage);\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBACK:\n\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t // If this is a re flow of a PUBACK after we have restarted receivedMessage will not exist.\n\t\t\t\tif (sentMessage) {\n\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\tlocalStorage.removeItem(\"Sent:\"+this._localKey+wireMessage.messageIdentifier);\n\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\tthis.onMessageDelivered(sentMessage.payloadMessage);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBREC:\n\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t// If this is a re flow of a PUBREC after we have restarted receivedMessage will not exist.\n\t\t\t\tif (sentMessage) {\n\t\t\t\t\tsentMessage.pubRecReceived = true;\n\t\t\t\t\tvar pubRelMessage = new WireMessage(MESSAGE_TYPE.PUBREL, {messageIdentifier:wireMessage.messageIdentifier});\n\t\t\t\t\tthis.store(\"Sent:\", sentMessage);\n\t\t\t\t\tthis._schedule_message(pubRelMessage);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBREL:\n\t\t\t\tvar receivedMessage = this._receivedMessages[wireMessage.messageIdentifier];\n\t\t\t\tlocalStorage.removeItem(\"Received:\"+this._localKey+wireMessage.messageIdentifier);\n\t\t\t\t// If this is a re flow of a PUBREL after we have restarted receivedMessage will not exist.\n\t\t\t\tif (receivedMessage) {\n\t\t\t\t\tthis._receiveMessage(receivedMessage);\n\t\t\t\t\tdelete this._receivedMessages[wireMessage.messageIdentifier];\n\t\t\t\t}\n\t\t\t\t// Always flow PubComp, we may have previously flowed PubComp but the server lost it and restarted.\n\t\t\t\tvar pubCompMessage = new WireMessage(MESSAGE_TYPE.PUBCOMP, {messageIdentifier:wireMessage.messageIdentifier});\n\t\t\t\tthis._schedule_message(pubCompMessage);\n\n\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBCOMP:\n\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\tlocalStorage.removeItem(\"Sent:\"+this._localKey+wireMessage.messageIdentifier);\n\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\tthis.onMessageDelivered(sentMessage.payloadMessage);\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.SUBACK:\n\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\tif (sentMessage) {\n\t\t\t\t\tif(sentMessage.timeOut)\n\t\t\t\t\t\tsentMessage.timeOut.cancel();\n\t\t\t\t\t// This will need to be fixed when we add multiple topic support\n          \t\t\tif (wireMessage.returnCode[0] === 0x80) {\n\t\t\t\t\t\tif (sentMessage.onFailure) {\n\t\t\t\t\t\t\tsentMessage.onFailure(wireMessage.returnCode);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (sentMessage.onSuccess) {\n\t\t\t\t\t\tsentMessage.onSuccess(wireMessage.returnCode);\n\t\t\t\t\t}\n\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.UNSUBACK:\n\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\tif (sentMessage) {\n\t\t\t\t\tif (sentMessage.timeOut)\n\t\t\t\t\t\tsentMessage.timeOut.cancel();\n\t\t\t\t\tif (sentMessage.callback) {\n\t\t\t\t\t\tsentMessage.callback();\n\t\t\t\t\t}\n\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PINGRESP:\n\t\t\t\t/* The sendPinger or receivePinger may have sent a ping, the receivePinger has already been reset. */\n\t\t\t\tthis.sendPinger.reset();\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.DISCONNECT:\n\t\t\t\t// Clients do not expect to receive disconnect packets.\n\t\t\t\tthis._disconnected(ERROR.INVALID_MQTT_MESSAGE_TYPE.code , format(ERROR.INVALID_MQTT_MESSAGE_TYPE, [wireMessage.type]));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._disconnected(ERROR.INVALID_MQTT_MESSAGE_TYPE.code , format(ERROR.INVALID_MQTT_MESSAGE_TYPE, [wireMessage.type]));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tvar errorStack = ((error.hasOwnProperty('stack') == 'undefined') ? error.stack.toString() : \"No Error Stack Available\");\n\t\t\tthis._disconnected(ERROR.INTERNAL_ERROR.code , format(ERROR.INTERNAL_ERROR, [error.message,errorStack]));\n\t\t\treturn;\n\t\t}\n\t};\n\n\t/** @ignore */\n\tClientImpl.prototype._on_socket_error = function (error) {\n\t\tif (!this._reconnecting) {\n\t\tthis._disconnected(ERROR.SOCKET_ERROR.code , format(ERROR.SOCKET_ERROR, [error.data]));\n\t\t}\n\t};\n\n\t/** @ignore */\n\tClientImpl.prototype._on_socket_close = function () {\n\t\tif (!this._reconnecting) {\n\t\tthis._disconnected(ERROR.SOCKET_CLOSE.code , format(ERROR.SOCKET_CLOSE));\n\t\t}\n\t};\n\n\t/** @ignore */\n\tClientImpl.prototype._socket_send = function (wireMessage) {\n\n\t\tif (wireMessage.type == 1) {\n\t\t\tvar wireMessageMasked = this._traceMask(wireMessage, \"password\");\n\t\t\tthis._trace(\"Client._socket_send\", wireMessageMasked);\n\t\t}\n\t\telse this._trace(\"Client._socket_send\", wireMessage);\n\n\t\tthis.socket.send(wireMessage.encode());\n\t\t/* We have proved to the server we are alive. */\n\t\tthis.sendPinger.reset();\n\t};\n\n\t/** @ignore */\n\tClientImpl.prototype._receivePublish = function (wireMessage) {\n\t\tswitch(wireMessage.payloadMessage.qos) {\n\t\t\tcase \"undefined\":\n\t\t\tcase 0:\n\t\t\t\tthis._receiveMessage(wireMessage);\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\tvar pubAckMessage = new WireMessage(MESSAGE_TYPE.PUBACK, {messageIdentifier:wireMessage.messageIdentifier});\n\t\t\t\tthis._schedule_message(pubAckMessage);\n\t\t\t\tthis._receiveMessage(wireMessage);\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tthis._receivedMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t\tthis.store(\"Received:\", wireMessage);\n\t\t\t\tvar pubRecMessage = new WireMessage(MESSAGE_TYPE.PUBREC, {messageIdentifier:wireMessage.messageIdentifier});\n\t\t\t\tthis._schedule_message(pubRecMessage);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow Error(\"Invaild qos=\"+wireMmessage.payloadMessage.qos);\n\t\t}\n\t};\n\n\t/** @ignore */\n\tClientImpl.prototype._receiveMessage = function (wireMessage) {\n\t\tif (this.onMessageArrived) {\n\t\t\tthis.onMessageArrived(wireMessage.payloadMessage);\n\t\t}\n\t};\n\n\t/**\n\t * Client has connected.\n\t * @param {reconnect} [boolean] indicate if this was a result of reconnect operation.\n\t * @param {uri} [string] fully qualified WebSocket URI of the server.\n\t */\n\tClientImpl.prototype._connected = function (reconnect, uri) {\n\t\t// Execute the onConnected callback if there is one.\n\t\tif (this.onConnected)\n\t\t\tthis.onConnected(reconnect, uri);\n\t};\n\n\t/**\n\t * Attempts to reconnect the client to the server.\n   * For each reconnect attempt, will double the reconnect interval\n   * up to 128 seconds.\n\t */\n\tClientImpl.prototype._reconnect = function () {\n\t\tthis._trace(\"Client._reconnect\");\n\t\tif (!this.connected) {\n\t\t\tthis._reconnecting = true;\n\t\t\tthis.sendPinger.cancel();\n\t\t\tthis.receivePinger.cancel();\n\t\t\tif (this._reconnectInterval < 128)\n\t\t\t\tthis._reconnectInterval = this._reconnectInterval * 2;\n\t\t\tif (this.connectOptions.uris) {\n\t\t\t\tthis.hostIndex = 0;\n\t\t\t\tthis._doConnect(this.connectOptions.uris[0]);\n\t\t\t} else {\n\t\t\t\tthis._doConnect(this.uri);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Client has disconnected either at its own request or because the server\n\t * or network disconnected it. Remove all non-durable state.\n\t * @param {errorCode} [number] the error number.\n\t * @param {errorText} [string] the error text.\n\t * @ignore\n\t */\n\tClientImpl.prototype._disconnected = function (errorCode, errorText) {\n\t\tthis._trace(\"Client._disconnected\", errorCode, errorText);\n\n\t\tif (errorCode !== undefined && this._reconnecting) {\n      //Continue automatic reconnect process\n  \t\tthis._reconnectTimeout = new Timeout(this, window, this._reconnectInterval, this._reconnect);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.sendPinger.cancel();\n\t\tthis.receivePinger.cancel();\n\t\tif (this._connectTimeout) {\n\t\t\tthis._connectTimeout.cancel();\n\t\t\tthis._connectTimeout = null;\n\t\t}\n\n\t\t// Clear message buffers.\n\t\tthis._msg_queue = [];\n\t\tthis._buffered_msg_queue = [];\n\t\tthis._notify_msg_sent = {};\n\n\t\tif (this.socket) {\n\t\t\t// Cancel all socket callbacks so that they cannot be driven again by this socket.\n\t\t\tthis.socket.onopen = null;\n\t\t\tthis.socket.onmessage = null;\n\t\t\tthis.socket.onerror = null;\n\t\t\tthis.socket.onclose = null;\n\t\t\tif (this.socket.readyState === 1)\n\t\t\t\tthis.socket.close();\n\t\t\tdelete this.socket;\n\t\t}\n\n\t\tif (this.connectOptions.uris && this.hostIndex < this.connectOptions.uris.length-1) {\n\t\t\t// Try the next host.\n\t\t\tthis.hostIndex++;\n\t\t\tthis._doConnect(this.connectOptions.uris[this.hostIndex]);\n\t\t} else {\n\n\t\t\tif (errorCode === undefined) {\n\t\t\t\terrorCode = ERROR.OK.code;\n\t\t\t\terrorText = format(ERROR.OK);\n\t\t\t}\n\n\t\t\t// Run any application callbacks last as they may attempt to reconnect and hence create a new socket.\n\t\t\tif (this.connected) {\n\t\t\t\tthis.connected = false;\n\t\t\t\t// Execute the connectionLostCallback if there is one, and we were connected.\n\t\t\t\tif (this.onConnectionLost) {\n\t\t\t\t\tthis.onConnectionLost({errorCode:errorCode, errorMessage:errorText, reconnect:this.connectOptions.reconnect, uri:this._wsuri});\n\t\t\t\t}\n\t\t\t\tif (errorCode !== ERROR.OK.code && this.connectOptions.reconnect) {\n\t\t\t\t\t// Start automatic reconnect process for the very first time since last successful connect.\n\t\t\t\t\tthis._reconnectInterval = 1;\n\t\t\t\t\tthis._reconnect();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Otherwise we never had a connection, so indicate that the connect has failed.\n\t\t\t\tif (this.connectOptions.mqttVersion === 4 && this.connectOptions.mqttVersionExplicit === false) {\n\t\t\t\t\tthis._trace(\"Failed to connect V4, dropping back to V3\");\n\t\t\t\t\tthis.connectOptions.mqttVersion = 3;\n\t\t\t\t\tif (this.connectOptions.uris) {\n\t\t\t\t\t\tthis.hostIndex = 0;\n\t\t\t\t\t\tthis._doConnect(this.connectOptions.uris[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._doConnect(this.uri);\n\t\t\t\t\t}\n\t\t\t\t} else if(this.connectOptions.onFailure) {\n\t\t\t\t\tthis.connectOptions.onFailure({invocationContext:this.connectOptions.invocationContext, errorCode:errorCode, errorMessage:errorText});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/** @ignore */\n\tClientImpl.prototype._trace = function () {\n\t\t// Pass trace message back to client's callback function\n\t\tif (this.traceFunction) {\n\t\t\tfor (var i in arguments)\n\t\t\t{\n\t\t\t\tif (typeof arguments[i] !== \"undefined\")\n\t\t\t\t\targuments.splice(i, 1, JSON.stringify(arguments[i]));\n\t\t\t}\n\t\t\tvar record = Array.prototype.slice.call(arguments).join(\"\");\n\t\t\tthis.traceFunction ({severity: \"Debug\", message: record\t});\n\t\t}\n\n\t\t//buffer style trace\n\t\tif ( this._traceBuffer !== null ) {\n\t\t\tfor (var i = 0, max = arguments.length; i < max; i++) {\n\t\t\t\tif ( this._traceBuffer.length == this._MAX_TRACE_ENTRIES ) {\n\t\t\t\t\tthis._traceBuffer.shift();\n\t\t\t\t}\n\t\t\t\tif (i === 0) this._traceBuffer.push(arguments[i]);\n\t\t\t\telse if (typeof arguments[i] === \"undefined\" ) this._traceBuffer.push(arguments[i]);\n\t\t\t\telse this._traceBuffer.push(\"  \"+JSON.stringify(arguments[i]));\n\t\t   }\n\t\t}\n\t};\n\n\t/** @ignore */\n\tClientImpl.prototype._traceMask = function (traceObject, masked) {\n\t\tvar traceObjectMasked = {};\n\t\tfor (var attr in traceObject) {\n\t\t\tif (traceObject.hasOwnProperty(attr)) {\n\t\t\t\tif (attr == masked)\n\t\t\t\t\ttraceObjectMasked[attr] = \"******\";\n\t\t\t\telse\n\t\t\t\t\ttraceObjectMasked[attr] = traceObject[attr];\n\t\t\t}\n\t\t}\n\t\treturn traceObjectMasked;\n\t};\n\n\t// ------------------------------------------------------------------------\n\t// Public Programming interface.\n\t// ------------------------------------------------------------------------\n\n\t/**\n\t * The JavaScript application communicates to the server using a {@link Paho.MQTT.Client} object.\n\t * <p>\n\t * Most applications will create just one Client object and then call its connect() method,\n\t * however applications can create more than one Client object if they wish.\n\t * In this case the combination of host, port and clientId attributes must be different for each Client object.\n\t * <p>\n\t * The send, subscribe and unsubscribe methods are implemented as asynchronous JavaScript methods\n\t * (even though the underlying protocol exchange might be synchronous in nature).\n\t * This means they signal their completion by calling back to the application,\n\t * via Success or Failure callback functions provided by the application on the method in question.\n\t * Such callbacks are called at most once per method invocation and do not persist beyond the lifetime\n\t * of the script that made the invocation.\n\t * <p>\n\t * In contrast there are some callback functions, most notably <i>onMessageArrived</i>,\n\t * that are defined on the {@link Paho.MQTT.Client} object.\n\t * These may get called multiple times, and aren't directly related to specific method invocations made by the client.\n\t *\n\t * @name Paho.MQTT.Client\n\t *\n\t * @constructor\n\t *\n\t * @param {string} host - the address of the messaging server, as a fully qualified WebSocket URI, as a DNS name or dotted decimal IP address.\n\t * @param {number} port - the port number to connect to - only required if host is not a URI\n\t * @param {string} path - the path on the host to connect to - only used if host is not a URI. Default: '/mqtt'.\n\t * @param {string} clientId - the Messaging client identifier, between 1 and 23 characters in length.\n\t *\n\t * @property {string} host - <i>read only</i> the server's DNS hostname or dotted decimal IP address.\n\t * @property {number} port - <i>read only</i> the server's port.\n\t * @property {string} path - <i>read only</i> the server's path.\n\t * @property {string} clientId - <i>read only</i> used when connecting to the server.\n\t * @property {function} onConnectionLost - called when a connection has been lost.\n\t *                            after a connect() method has succeeded.\n\t *                            Establish the call back used when a connection has been lost. The connection may be\n\t *                            lost because the client initiates a disconnect or because the server or network\n\t *                            cause the client to be disconnected. The disconnect call back may be called without\n\t *                            the connectionComplete call back being invoked if, for example the client fails to\n\t *                            connect.\n\t *                            A single response object parameter is passed to the onConnectionLost callback containing the following fields:\n\t *                            <ol>\n\t *                            <li>errorCode\n\t *                            <li>errorMessage\n\t *                            </ol>\n\t * @property {function} onMessageDelivered - called when a message has been delivered.\n\t *                            All processing that this Client will ever do has been completed. So, for example,\n\t *                            in the case of a Qos=2 message sent by this client, the PubComp flow has been received from the server\n\t *                            and the message has been removed from persistent storage before this callback is invoked.\n\t *                            Parameters passed to the onMessageDelivered callback are:\n\t *                            <ol>\n\t *                            <li>{@link Paho.MQTT.Message} that was delivered.\n\t *                            </ol>\n\t * @property {function} onMessageArrived - called when a message has arrived in this Paho.MQTT.client.\n\t *                            Parameters passed to the onMessageArrived callback are:\n\t *                            <ol>\n\t *                            <li>{@link Paho.MQTT.Message} that has arrived.\n\t *                            </ol>\n\t * @property {function} onConnected - called when a connection is successfully made to the server.\n\t *                                  after a connect() method.\n\t *                                  Parameters passed to the onConnected callback are:\n\t *                                  <ol>\n\t *                                  <li>reconnect (boolean) - If true, the connection was the result of a reconnect.</li>\n\t *                                  <li>URI (string) - The URI used to connect to the server.</li>\n\t *                                  </ol>\n\t * @property {boolean} disconnectedPublishing - if set, will enable disconnected publishing in\n\t *                                            in the event that the connection to the server is lost.\n\t * @property {number} disconnectedBufferSize - Used to set the maximum number of messages that the disconnected\n\t *                                             buffer will hold before rejecting new messages. Default size: 5000 messages\n\t * @property {function} trace - called whenever trace is called. TODO\n\t */\n\tvar Client = function (host, port, path, clientId) {\n\n\t    var uri;\n\n\t\tif (typeof host !== \"string\")\n\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof host, \"host\"]));\n\n\t    if (arguments.length == 2) {\n\t        // host: must be full ws:// uri\n\t        // port: clientId\n\t        clientId = port;\n\t        uri = host;\n\t        var match = uri.match(/^(wss?):\\/\\/((\\[(.+)\\])|([^\\/]+?))(:(\\d+))?(\\/.*)$/);\n\t        if (match) {\n\t            host = match[4]||match[2];\n\t            port = parseInt(match[7]);\n\t            path = match[8];\n\t        } else {\n\t            throw new Error(format(ERROR.INVALID_ARGUMENT,[host,\"host\"]));\n\t        }\n\t    } else {\n\t        if (arguments.length == 3) {\n\t\t\t\tclientId = path;\n\t\t\t\tpath = \"/mqtt\";\n\t\t\t}\n\t\t\tif (typeof port !== \"number\" || port < 0)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof port, \"port\"]));\n\t\t\tif (typeof path !== \"string\")\n\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof path, \"path\"]));\n\n\t\t\tvar ipv6AddSBracket = (host.indexOf(\":\") !== -1 && host.slice(0,1) !== \"[\" && host.slice(-1) !== \"]\");\n\t\t\turi = \"ws://\"+(ipv6AddSBracket?\"[\"+host+\"]\":host)+\":\"+port+path;\n\t\t}\n\n\t\tvar clientIdLength = 0;\n\t\tfor (var i = 0; i<clientId.length; i++) {\n\t\t\tvar charCode = clientId.charCodeAt(i);\n\t\t\tif (0xD800 <= charCode && charCode <= 0xDBFF)  {\n\t\t\t\t i++; // Surrogate pair.\n\t\t\t}\n\t\t\tclientIdLength++;\n\t\t}\n\t\tif (typeof clientId !== \"string\" || clientIdLength > 65535)\n\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [clientId, \"clientId\"]));\n\n\t\tvar client = new ClientImpl(uri, host, port, path, clientId);\n\t\tthis._getHost =  function() { return host; };\n\t\tthis._setHost = function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); };\n\n\t\tthis._getPort = function() { return port; };\n\t\tthis._setPort = function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); };\n\n\t\tthis._getPath = function() { return path; };\n\t\tthis._setPath = function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); };\n\n\t\tthis._getURI = function() { return uri; };\n\t\tthis._setURI = function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); };\n\n\t\tthis._getClientId = function() { return client.clientId; };\n\t\tthis._setClientId = function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); };\n\n\t\tthis._getOnConnected = function() { return client.onConnected; };\n\t\tthis._setOnConnected = function(newOnConnected) {\n\t\t\tif (typeof newOnConnected === \"function\")\n\t\t\t\tclient.onConnected = newOnConnected;\n\t\t\telse\n\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof newOnConnected, \"onConnected\"]));\n\t\t};\n\n\t\tthis._getDisconnectedPublishing = function() { return client.disconnectedPublishing; };\n\t\tthis._setDisconnectedPublishing = function(newDisconnectedPublishing) {\n\t\t\tclient.disconnectedPublishing = newDisconnectedPublishing;\n\t\t};\n\n\t\tthis._getDisconnectedBufferSize = function() { return client.disconnectedBufferSize; };\n\t\tthis._setDisconnectedBufferSize = function(newDisconnectedBufferSize) {\n\t\t\tclient.disconnectedBufferSize = newDisconnectedBufferSize;\n\t\t};\n\n\t\tthis._getOnConnectionLost = function() { return client.onConnectionLost; };\n\t\tthis._setOnConnectionLost = function(newOnConnectionLost) {\n\t\t\tif (typeof newOnConnectionLost === \"function\")\n\t\t\t\tclient.onConnectionLost = newOnConnectionLost;\n\t\t\telse\n\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof newOnConnectionLost, \"onConnectionLost\"]));\n\t\t};\n\n\t\tthis._getOnMessageDelivered = function() { return client.onMessageDelivered; };\n\t\tthis._setOnMessageDelivered = function(newOnMessageDelivered) {\n\t\t\tif (typeof newOnMessageDelivered === \"function\")\n\t\t\t\tclient.onMessageDelivered = newOnMessageDelivered;\n\t\t\telse\n\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof newOnMessageDelivered, \"onMessageDelivered\"]));\n\t\t};\n\n\t\tthis._getOnMessageArrived = function() { return client.onMessageArrived; };\n\t\tthis._setOnMessageArrived = function(newOnMessageArrived) {\n\t\t\tif (typeof newOnMessageArrived === \"function\")\n\t\t\t\tclient.onMessageArrived = newOnMessageArrived;\n\t\t\telse\n\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof newOnMessageArrived, \"onMessageArrived\"]));\n\t\t};\n\n\t\tthis._getTrace = function() { return client.traceFunction; };\n\t\tthis._setTrace = function(trace) {\n\t\t\tif(typeof trace === \"function\"){\n\t\t\t\tclient.traceFunction = trace;\n\t\t\t}else{\n\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof trace, \"onTrace\"]));\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Connect this Messaging client to its server.\n\t\t *\n\t\t * @name Paho.MQTT.Client#connect\n\t\t * @function\n\t\t * @param {object} connectOptions - Attributes used with the connection.\n\t\t * @param {number} connectOptions.timeout - If the connect has not succeeded within this\n\t\t *                    number of seconds, it is deemed to have failed.\n\t\t *                    The default is 30 seconds.\n\t\t * @param {string} connectOptions.userName - Authentication username for this connection.\n\t\t * @param {string} connectOptions.password - Authentication password for this connection.\n\t\t * @param {Paho.MQTT.Message} connectOptions.willMessage - sent by the server when the client\n\t\t *                    disconnects abnormally.\n\t\t * @param {number} connectOptions.keepAliveInterval - the server disconnects this client if\n\t\t *                    there is no activity for this number of seconds.\n\t\t *                    The default value of 60 seconds is assumed if not set.\n\t\t * @param {boolean} connectOptions.cleanSession - if true(default) the client and server\n\t\t *                    persistent state is deleted on successful connect.\n\t\t * @param {boolean} connectOptions.useSSL - if present and true, use an SSL Websocket connection.\n\t\t * @param {object} connectOptions.invocationContext - passed to the onSuccess callback or onFailure callback.\n\t\t * @param {function} connectOptions.onSuccess - called when the connect acknowledgement\n\t\t *                    has been received from the server.\n\t\t * A single response object parameter is passed to the onSuccess callback containing the following fields:\n\t\t * <ol>\n\t\t * <li>invocationContext as passed in to the onSuccess method in the connectOptions.\n\t\t * </ol>\n     * @param {function} connectOptions.onFailure - called when the connect request has failed or timed out.\n\t\t * A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t * <ol>\n\t\t * <li>invocationContext as passed in to the onFailure method in the connectOptions.\n\t\t * <li>errorCode a number indicating the nature of the error.\n\t\t * <li>errorMessage text describing the error.\n\t\t * </ol>\n     * @param {array} connectOptions.hosts - If present this contains either a set of hostnames or fully qualified\n\t\t * WebSocket URIs (ws://iot.eclipse.org:80/ws), that are tried in order in place\n\t\t * of the host and port paramater on the construtor. The hosts are tried one at at time in order until\n\t\t * one of then succeeds.\n     * @param {array} connectOptions.ports - If present the set of ports matching the hosts. If hosts contains URIs, this property\n\t\t * is not used.\n     * @param {boolean} connectOptions.reconnect - Sets whether the client will automatically attempt to reconnect\n     * to the server if the connection is lost.\n     *<ul>\n     *<li>If set to false, the client will not attempt to automatically reconnect to the server in the event that the\n     * connection is lost.</li>\n     *<li>If set to true, in the event that the connection is lost, the client will attempt to reconnect to the server.\n     * It will initially wait 1 second before it attempts to reconnect, for every failed reconnect attempt, the delay\n     * will double until it is at 2 minutes at which point the delay will stay at 2 minutes.</li>\n     *</ul>\n     * @param {number} connectOptions.mqttVersion - The version of MQTT to use to connect to the MQTT Broker.\n     *<ul>\n     *<li>3 - MQTT V3.1</li>\n     *<li>4 - MQTT V3.1.1</li>\n     *</ul>\n     * @param {boolean} connectOptions.mqttVersionExplicit - If set to true, will force the connection to use the\n     * selected MQTT Version or will fail to connect.\n     * @param {array} connectOptions.uris - If present, should contain a list of fully qualified WebSocket uris\n     * (e.g. ws://iot.eclipse.org:80/ws), that are tried in order in place of the host and port parameter of the construtor.\n     * The uris are tried one at a time in order until one of them succeeds. Do not use this in conjunction with hosts as\n     * the hosts array will be converted to uris and will overwrite this property.\n\t\t * @throws {InvalidState} If the client is not in disconnected state. The client must have received connectionLost\n\t\t * or disconnected before calling connect for a second or subsequent time.\n\t\t */\n\t\tthis.connect = function (connectOptions) {\n\t\t\tconnectOptions = connectOptions || {} ;\n\t\t\tvalidate(connectOptions,  {timeout:\"number\",\n\t\t\t\t\t\t\t\t\t   userName:\"string\",\n\t\t\t\t\t\t\t\t\t   password:\"string\",\n\t\t\t\t\t\t\t\t\t   willMessage:\"object\",\n\t\t\t\t\t\t\t\t\t   keepAliveInterval:\"number\",\n\t\t\t\t\t\t\t\t\t   cleanSession:\"boolean\",\n\t\t\t\t\t\t\t\t\t   useSSL:\"boolean\",\n\t\t\t\t\t\t\t\t\t   invocationContext:\"object\",\n\t\t\t\t\t\t\t\t\t   onSuccess:\"function\",\n\t\t\t\t\t\t\t\t\t   onFailure:\"function\",\n\t\t\t\t\t\t\t\t\t   hosts:\"object\",\n\t\t\t\t\t\t\t\t\t   ports:\"object\",\n\t\t\t\t\t\t\t\t\t   reconnect:\"boolean\",\n\t\t\t\t\t\t\t\t\t   mqttVersion:\"number\",\n\t\t\t\t\t\t\t\t\t   mqttVersionExplicit:\"boolean\",\n\t\t\t\t\t\t\t\t\t   uris: \"object\"});\n\n\t\t\t// If no keep alive interval is set, assume 60 seconds.\n\t\t\tif (connectOptions.keepAliveInterval === undefined)\n\t\t\t\tconnectOptions.keepAliveInterval = 60;\n\n\t\t\tif (connectOptions.mqttVersion > 4 || connectOptions.mqttVersion < 3) {\n\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.mqttVersion, \"connectOptions.mqttVersion\"]));\n\t\t\t}\n\n\t\t\tif (connectOptions.mqttVersion === undefined) {\n\t\t\t\tconnectOptions.mqttVersionExplicit = false;\n\t\t\t\tconnectOptions.mqttVersion = 4;\n\t\t\t} else {\n\t\t\t\tconnectOptions.mqttVersionExplicit = true;\n\t\t\t}\n\n\t\t\t//Check that if password is set, so is username\n\t\t\tif (connectOptions.password !== undefined && connectOptions.userName === undefined)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.password, \"connectOptions.password\"]));\n\n\t\t\tif (connectOptions.willMessage) {\n\t\t\t\tif (!(connectOptions.willMessage instanceof Message))\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [connectOptions.willMessage, \"connectOptions.willMessage\"]));\n\t\t\t\t// The will message must have a payload that can be represented as a string.\n\t\t\t\t// Cause the willMessage to throw an exception if this is not the case.\n\t\t\t\tconnectOptions.willMessage.stringPayload = null;\n\n\t\t\t\tif (typeof connectOptions.willMessage.destinationName === \"undefined\")\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof connectOptions.willMessage.destinationName, \"connectOptions.willMessage.destinationName\"]));\n\t\t\t}\n\t\t\tif (typeof connectOptions.cleanSession === \"undefined\")\n\t\t\t\tconnectOptions.cleanSession = true;\n\t\t\tif (connectOptions.hosts) {\n\n\t\t\t\tif (!(connectOptions.hosts instanceof Array) )\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts, \"connectOptions.hosts\"]));\n\t\t\t\tif (connectOptions.hosts.length <1 )\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts, \"connectOptions.hosts\"]));\n\n\t\t\t\tvar usingURIs = false;\n\t\t\t\tfor (var i = 0; i<connectOptions.hosts.length; i++) {\n\t\t\t\t\tif (typeof connectOptions.hosts[i] !== \"string\")\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof connectOptions.hosts[i], \"connectOptions.hosts[\"+i+\"]\"]));\n\t\t\t\t\tif (/^(wss?):\\/\\/((\\[(.+)\\])|([^\\/]+?))(:(\\d+))?(\\/.*)$/.test(connectOptions.hosts[i])) {\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\tusingURIs = true;\n\t\t\t\t\t\t} else if (!usingURIs) {\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts[i], \"connectOptions.hosts[\"+i+\"]\"]));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (usingURIs) {\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts[i], \"connectOptions.hosts[\"+i+\"]\"]));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!usingURIs) {\n\t\t\t\t\tif (!connectOptions.ports)\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.ports, \"connectOptions.ports\"]));\n\t\t\t\t\tif (!(connectOptions.ports instanceof Array) )\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.ports, \"connectOptions.ports\"]));\n\t\t\t\t\tif (connectOptions.hosts.length !== connectOptions.ports.length)\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.ports, \"connectOptions.ports\"]));\n\n\t\t\t\t\tconnectOptions.uris = [];\n\n\t\t\t\t\tfor (var i = 0; i<connectOptions.hosts.length; i++) {\n\t\t\t\t\t\tif (typeof connectOptions.ports[i] !== \"number\" || connectOptions.ports[i] < 0)\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof connectOptions.ports[i], \"connectOptions.ports[\"+i+\"]\"]));\n\t\t\t\t\t\tvar host = connectOptions.hosts[i];\n\t\t\t\t\t\tvar port = connectOptions.ports[i];\n\n\t\t\t\t\t\tvar ipv6 = (host.indexOf(\":\") !== -1);\n\t\t\t\t\t\turi = \"ws://\"+(ipv6?\"[\"+host+\"]\":host)+\":\"+port+path;\n\t\t\t\t\t\tconnectOptions.uris.push(uri);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconnectOptions.uris = connectOptions.hosts;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tclient.connect(connectOptions);\n\t\t};\n\n\t\t/**\n\t\t * Subscribe for messages, request receipt of a copy of messages sent to the destinations described by the filter.\n\t\t *\n\t\t * @name Paho.MQTT.Client#subscribe\n\t\t * @function\n\t\t * @param {string} filter describing the destinations to receive messages from.\n\t\t * <br>\n\t\t * @param {object} subscribeOptions - used to control the subscription\n\t\t *\n\t\t * @param {number} subscribeOptions.qos - the maiximum qos of any publications sent\n\t\t *                                  as a result of making this subscription.\n\t\t * @param {object} subscribeOptions.invocationContext - passed to the onSuccess callback\n\t\t *                                  or onFailure callback.\n\t\t * @param {function} subscribeOptions.onSuccess - called when the subscribe acknowledgement\n\t\t *                                  has been received from the server.\n\t\t *                                  A single response object parameter is passed to the onSuccess callback containing the following fields:\n\t\t *                                  <ol>\n\t\t *                                  <li>invocationContext if set in the subscribeOptions.\n\t\t *                                  </ol>\n\t\t * @param {function} subscribeOptions.onFailure - called when the subscribe request has failed or timed out.\n\t\t *                                  A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t *                                  <ol>\n\t\t *                                  <li>invocationContext - if set in the subscribeOptions.\n\t\t *                                  <li>errorCode - a number indicating the nature of the error.\n\t\t *                                  <li>errorMessage - text describing the error.\n\t\t *                                  </ol>\n\t\t * @param {number} subscribeOptions.timeout - which, if present, determines the number of\n\t\t *                                  seconds after which the onFailure calback is called.\n\t\t *                                  The presence of a timeout does not prevent the onSuccess\n\t\t *                                  callback from being called when the subscribe completes.\n\t\t * @throws {InvalidState} if the client is not in connected state.\n\t\t */\n\t\tthis.subscribe = function (filter, subscribeOptions) {\n\t\t\tif (typeof filter !== \"string\")\n\t\t\t\tthrow new Error(\"Invalid argument:\"+filter);\n\t\t\tsubscribeOptions = subscribeOptions || {} ;\n\t\t\tvalidate(subscribeOptions,  {qos:\"number\",\n\t\t\t\t\t\t\t\t\t\t invocationContext:\"object\",\n\t\t\t\t\t\t\t\t\t\t onSuccess:\"function\",\n\t\t\t\t\t\t\t\t\t\t onFailure:\"function\",\n\t\t\t\t\t\t\t\t\t\t timeout:\"number\"\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\tif (subscribeOptions.timeout && !subscribeOptions.onFailure)\n\t\t\t\tthrow new Error(\"subscribeOptions.timeout specified with no onFailure callback.\");\n\t\t\tif (typeof subscribeOptions.qos !== \"undefined\" && !(subscribeOptions.qos === 0 || subscribeOptions.qos === 1 || subscribeOptions.qos === 2 ))\n\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [subscribeOptions.qos, \"subscribeOptions.qos\"]));\n\t\t\tclient.subscribe(filter, subscribeOptions);\n\t\t};\n\n\t\t/**\n\t\t * Unsubscribe for messages, stop receiving messages sent to destinations described by the filter.\n\t\t *\n\t\t * @name Paho.MQTT.Client#unsubscribe\n\t\t * @function\n\t\t * @param {string} filter - describing the destinations to receive messages from.\n\t\t * @param {object} unsubscribeOptions - used to control the subscription\n\t\t * @param {object} unsubscribeOptions.invocationContext - passed to the onSuccess callback\n\t\t                                      or onFailure callback.\n\t\t * @param {function} unsubscribeOptions.onSuccess - called when the unsubscribe acknowledgement has been received from the server.\n\t\t *                                    A single response object parameter is passed to the\n\t\t *                                    onSuccess callback containing the following fields:\n\t\t *                                    <ol>\n\t\t *                                    <li>invocationContext - if set in the unsubscribeOptions.\n\t\t *                                    </ol>\n\t\t * @param {function} unsubscribeOptions.onFailure called when the unsubscribe request has failed or timed out.\n\t\t *                                    A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t *                                    <ol>\n\t\t *                                    <li>invocationContext - if set in the unsubscribeOptions.\n\t\t *                                    <li>errorCode - a number indicating the nature of the error.\n\t\t *                                    <li>errorMessage - text describing the error.\n\t\t *                                    </ol>\n\t\t * @param {number} unsubscribeOptions.timeout - which, if present, determines the number of seconds\n\t\t *                                    after which the onFailure callback is called. The presence of\n\t\t *                                    a timeout does not prevent the onSuccess callback from being\n\t\t *                                    called when the unsubscribe completes\n\t\t * @throws {InvalidState} if the client is not in connected state.\n\t\t */\n\t\tthis.unsubscribe = function (filter, unsubscribeOptions) {\n\t\t\tif (typeof filter !== \"string\")\n\t\t\t\tthrow new Error(\"Invalid argument:\"+filter);\n\t\t\tunsubscribeOptions = unsubscribeOptions || {} ;\n\t\t\tvalidate(unsubscribeOptions,  {invocationContext:\"object\",\n\t\t\t\t\t\t\t\t\t\t   onSuccess:\"function\",\n\t\t\t\t\t\t\t\t\t\t   onFailure:\"function\",\n\t\t\t\t\t\t\t\t\t\t   timeout:\"number\"\n\t\t\t\t\t\t\t\t\t\t  });\n\t\t\tif (unsubscribeOptions.timeout && !unsubscribeOptions.onFailure)\n\t\t\t\tthrow new Error(\"unsubscribeOptions.timeout specified with no onFailure callback.\");\n\t\t\tclient.unsubscribe(filter, unsubscribeOptions);\n\t\t};\n\n\t\t/**\n\t\t * Send a message to the consumers of the destination in the Message.\n\t\t *\n\t\t * @name Paho.MQTT.Client#send\n\t\t * @function\n\t\t * @param {string|Paho.MQTT.Message} topic - <b>mandatory</b> The name of the destination to which the message is to be sent.\n\t\t * \t\t\t\t\t   - If it is the only parameter, used as Paho.MQTT.Message object.\n\t\t * @param {String|ArrayBuffer} payload - The message data to be sent.\n\t\t * @param {number} qos The Quality of Service used to deliver the message.\n\t\t * \t\t<dl>\n\t\t * \t\t\t<dt>0 Best effort (default).\n\t\t *     \t\t\t<dt>1 At least once.\n\t\t *     \t\t\t<dt>2 Exactly once.\n\t\t * \t\t</dl>\n\t\t * @param {Boolean} retained If true, the message is to be retained by the server and delivered\n\t\t *                     to both current and future subscriptions.\n\t\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t\t *                     A received message has the retained boolean set to true if the message was published\n\t\t *                     with the retained boolean set to true\n\t\t *                     and the subscrption was made after the message has been published.\n\t\t * @throws {InvalidState} if the client is not connected.\n\t\t */\n\t\tthis.send = function (topic,payload,qos,retained) {\n\t\t\tvar message ;\n\n\t\t\tif(arguments.length === 0){\n\t\t\t\tthrow new Error(\"Invalid argument.\"+\"length\");\n\n\t\t\t}else if(arguments.length == 1) {\n\n\t\t\t\tif (!(topic instanceof Message) && (typeof topic !== \"string\"))\n\t\t\t\t\tthrow new Error(\"Invalid argument:\"+ typeof topic);\n\n\t\t\t\tmessage = topic;\n\t\t\t\tif (typeof message.destinationName === \"undefined\")\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT,[message.destinationName,\"Message.destinationName\"]));\n\t\t\t\tclient.send(message);\n\n\t\t\t}else {\n\t\t\t\t//parameter checking in Message object\n\t\t\t\tmessage = new Message(payload);\n\t\t\t\tmessage.destinationName = topic;\n\t\t\t\tif(arguments.length >= 3)\n\t\t\t\t\tmessage.qos = qos;\n\t\t\t\tif(arguments.length >= 4)\n\t\t\t\t\tmessage.retained = retained;\n\t\t\t\tclient.send(message);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Publish a message to the consumers of the destination in the Message.\n\t\t * Synonym for Paho.Mqtt.Client#send\n\t\t *\n\t\t * @name Paho.MQTT.Client#publish\n\t\t * @function\n\t\t * @param {string|Paho.MQTT.Message} topic - <b>mandatory</b> The name of the topic to which the message is to be published.\n\t\t * \t\t\t\t\t   - If it is the only parameter, used as Paho.MQTT.Message object.\n\t\t * @param {String|ArrayBuffer} payload - The message data to be published.\n\t\t * @param {number} qos The Quality of Service used to deliver the message.\n\t\t * \t\t<dl>\n\t\t * \t\t\t<dt>0 Best effort (default).\n\t\t *     \t\t\t<dt>1 At least once.\n\t\t *     \t\t\t<dt>2 Exactly once.\n\t\t * \t\t</dl>\n\t\t * @param {Boolean} retained If true, the message is to be retained by the server and delivered\n\t\t *                     to both current and future subscriptions.\n\t\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t\t *                     A received message has the retained boolean set to true if the message was published\n\t\t *                     with the retained boolean set to true\n\t\t *                     and the subscrption was made after the message has been published.\n\t\t * @throws {InvalidState} if the client is not connected.\n\t\t */\n\t\t this.publish = function(topic,payload,qos,retained) {\n\t\t\t console.log(\"Publising message to: \", topic);\n\t\t\t var message ;\n\n \t\t\tif(arguments.length === 0){\n \t\t\t\tthrow new Error(\"Invalid argument.\"+\"length\");\n\n \t\t\t}else if(arguments.length == 1) {\n\n \t\t\t\tif (!(topic instanceof Message) && (typeof topic !== \"string\"))\n \t\t\t\t\tthrow new Error(\"Invalid argument:\"+ typeof topic);\n\n \t\t\t\tmessage = topic;\n \t\t\t\tif (typeof message.destinationName === \"undefined\")\n \t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT,[message.destinationName,\"Message.destinationName\"]));\n \t\t\t\tclient.send(message);\n\n \t\t\t}else {\n \t\t\t\t//parameter checking in Message object\n \t\t\t\tmessage = new Message(payload);\n \t\t\t\tmessage.destinationName = topic;\n \t\t\t\tif(arguments.length >= 3)\n \t\t\t\t\tmessage.qos = qos;\n \t\t\t\tif(arguments.length >= 4)\n \t\t\t\t\tmessage.retained = retained;\n \t\t\t\tclient.send(message);\n \t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Normal disconnect of this Messaging client from its server.\n\t\t *\n\t\t * @name Paho.MQTT.Client#disconnect\n\t\t * @function\n\t\t * @throws {InvalidState} if the client is already disconnected.\n\t\t */\n\t\tthis.disconnect = function () {\n\t\t\tclient.disconnect();\n\t\t};\n\n\t\t/**\n\t\t * Get the contents of the trace log.\n\t\t *\n\t\t * @name Paho.MQTT.Client#getTraceLog\n\t\t * @function\n\t\t * @return {Object[]} tracebuffer containing the time ordered trace records.\n\t\t */\n\t\tthis.getTraceLog = function () {\n\t\t\treturn client.getTraceLog();\n\t\t};\n\n\t\t/**\n\t\t * Start tracing.\n\t\t *\n\t\t * @name Paho.MQTT.Client#startTrace\n\t\t * @function\n\t\t */\n\t\tthis.startTrace = function () {\n\t\t\tclient.startTrace();\n\t\t};\n\n\t\t/**\n\t\t * Stop tracing.\n\t\t *\n\t\t * @name Paho.MQTT.Client#stopTrace\n\t\t * @function\n\t\t */\n\t\tthis.stopTrace = function () {\n\t\t\tclient.stopTrace();\n\t\t};\n\n\t\tthis.isConnected = function() {\n\t\t\treturn client.connected;\n\t\t};\n\t};\n\n\tClient.prototype = {\n\t\tget host() { return this._getHost(); },\n\t\tset host(newHost) { this._setHost(newHost); },\n\n\t\tget port() { return this._getPort(); },\n\t\tset port(newPort) { this._setPort(newPort); },\n\n\t\tget path() { return this._getPath(); },\n\t\tset path(newPath) { this._setPath(newPath); },\n\n\t\tget clientId() { return this._getClientId(); },\n\t\tset clientId(newClientId) { this._setClientId(newClientId); },\n\n\t\tget onConnected() { return this._getOnConnected(); },\n\t\tset onConnected(newOnConnected) { this._setOnConnected(newOnConnected); },\n\n\t\tget disconnectedPublishing() { return this._getDisconnectedPublishing(); },\n\t\tset disconnectedPublishing(newDisconnectedPublishing) { this._setDisconnectedPublishing(newDisconnectedPublishing); },\n\n\t\tget disconnectedBufferSize() { return this._getDisconnectedBufferSize(); },\n\t\tset disconnectedBufferSize(newDisconnectedBufferSize) { this._setDisconnectedBufferSize(newDisconnectedBufferSize); },\n\n\t\tget onConnectionLost() { return this._getOnConnectionLost(); },\n\t\tset onConnectionLost(newOnConnectionLost) { this._setOnConnectionLost(newOnConnectionLost); },\n\n\t\tget onMessageDelivered() { return this._getOnMessageDelivered(); },\n\t\tset onMessageDelivered(newOnMessageDelivered) { this._setOnMessageDelivered(newOnMessageDelivered); },\n\n\t\tget onMessageArrived() { return this._getOnMessageArrived(); },\n\t\tset onMessageArrived(newOnMessageArrived) { this._setOnMessageArrived(newOnMessageArrived); },\n\n\t\tget trace() { return this._getTrace(); },\n\t\tset trace(newTraceFunction) { this._setTrace(newTraceFunction); }\n\n\t};\n\n\t/**\n\t * An application message, sent or received.\n\t * <p>\n\t * All attributes may be null, which implies the default values.\n\t *\n\t * @name Paho.MQTT.Message\n\t * @constructor\n\t * @param {String|ArrayBuffer} payload The message data to be sent.\n\t * <p>\n\t * @property {string} payloadString <i>read only</i> The payload as a string if the payload consists of valid UTF-8 characters.\n\t * @property {ArrayBuffer} payloadBytes <i>read only</i> The payload as an ArrayBuffer.\n\t * <p>\n\t * @property {string} destinationName <b>mandatory</b> The name of the destination to which the message is to be sent\n\t *                    (for messages about to be sent) or the name of the destination from which the message has been received.\n\t *                    (for messages received by the onMessage function).\n\t * <p>\n\t * @property {number} qos The Quality of Service used to deliver the message.\n\t * <dl>\n\t *     <dt>0 Best effort (default).\n\t *     <dt>1 At least once.\n\t *     <dt>2 Exactly once.\n\t * </dl>\n\t * <p>\n\t * @property {Boolean} retained If true, the message is to be retained by the server and delivered\n\t *                     to both current and future subscriptions.\n\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t *                     A received message has the retained boolean set to true if the message was published\n\t *                     with the retained boolean set to true\n\t *                     and the subscrption was made after the message has been published.\n\t * <p>\n\t * @property {Boolean} duplicate <i>read only</i> If true, this message might be a duplicate of one which has already been received.\n\t *                     This is only set on messages received from the server.\n\t *\n\t */\n\tvar Message = function (newPayload) {\n\t\tvar payload;\n\t\tif (   typeof newPayload === \"string\" ||\n\t\tnewPayload instanceof ArrayBuffer ||\n\t\tnewPayload instanceof Int8Array   ||\n\t\tnewPayload instanceof Uint8Array  ||\n\t\tnewPayload instanceof Int16Array  ||\n\t\tnewPayload instanceof Uint16Array ||\n\t\tnewPayload instanceof Int32Array  ||\n\t\tnewPayload instanceof Uint32Array ||\n\t\tnewPayload instanceof Float32Array ||\n\t\tnewPayload instanceof Float64Array\n\t\t   ) {\n\t\t\tpayload = newPayload;\n\t\t} else {\n\t\t\tthrow (format(ERROR.INVALID_ARGUMENT, [newPayload, \"newPayload\"]));\n\t\t}\n\n\t\tthis._getPayloadString = function () {\n\t\t\tif (typeof payload === \"string\")\n\t\t\t\treturn payload;\n\t\t\telse\n\t\t\t\treturn parseUTF8(payload, 0, payload.length);\n\t\t};\n\n\t\tthis._getPayloadBytes = function() {\n\t\t\tif (typeof payload === \"string\") {\n\t\t\t\tvar buffer = new ArrayBuffer(UTF8Length(payload));\n\t\t\t\tvar byteStream = new Uint8Array(buffer);\n\t\t\t\tstringToUTF8(payload, byteStream, 0);\n\n\t\t\t\treturn byteStream;\n\t\t\t} else {\n\t\t\t\treturn payload;\n\t\t\t}\n\t\t};\n\n\t\tvar destinationName;\n\t\tthis._getDestinationName = function() { return destinationName; };\n\t\tthis._setDestinationName = function(newDestinationName) {\n\t\t\tif (typeof newDestinationName === \"string\")\n\t\t\t\tdestinationName = newDestinationName;\n\t\t\telse\n\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [newDestinationName, \"newDestinationName\"]));\n\t\t};\n\n\t\tvar qos = 0;\n\t\tthis._getQos = function() { return qos; };\n\t\tthis._setQos = function(newQos) {\n\t\t\tif (newQos === 0 || newQos === 1 || newQos === 2 )\n\t\t\t\tqos = newQos;\n\t\t\telse\n\t\t\t\tthrow new Error(\"Invalid argument:\"+newQos);\n\t\t};\n\n\t\tvar retained = false;\n\t\tthis._getRetained = function() { return retained; };\n\t\tthis._setRetained = function(newRetained) {\n\t\t\tif (typeof newRetained === \"boolean\")\n\t\t\t\tretained = newRetained;\n\t\t\telse\n\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [newRetained, \"newRetained\"]));\n\t\t};\n\n\t\tvar duplicate = false;\n\t\tthis._getDuplicate = function() { return duplicate; };\n\t\tthis._setDuplicate = function(newDuplicate) { duplicate = newDuplicate; };\n\t};\n\n\tMessage.prototype = {\n\t\tget payloadString() { return this._getPayloadString(); },\n\t\tget payloadBytes() { return this._getPayloadBytes(); },\n\n\t\tget destinationName() { return this._getDestinationName(); },\n\t\tset destinationName(newDestinationName) { this._setDestinationName(newDestinationName); },\n\n\t\tget topic() { return this._getDestinationName(); },\n\t\tset topic(newTopic) { this._setDestinationName(newTopic); },\n\n\t\tget qos() { return this._getQos(); },\n\t\tset qos(newQos) { this._setQos(newQos); },\n\n\t\tget retained() { return this._getRetained(); },\n\t\tset retained(newRetained) { this._setRetained(newRetained); },\n\n\t\tget duplicate() { return this._getDuplicate(); },\n\t\tset duplicate(newDuplicate) { this._setDuplicate(newDuplicate); }\n\t};\n\n\t// Module contents.\n\treturn {\n\t\tClient: Client,\n\t\tMessage: Message\n\t};\n})(window);\nreturn PahoMQTT;\n});\n"]}]}