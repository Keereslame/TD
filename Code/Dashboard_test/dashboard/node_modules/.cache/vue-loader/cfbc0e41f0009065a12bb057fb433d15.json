{"remainingRequest":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Data_query.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Data_query.vue","mtime":1595255903189},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEYXRhX2dyYXBoIGZyb20gIi4vRGF0YV9ncmFwaCI7Ci8vaW1wb3J0IG1vbmdvb3NlIGZyb20gIi4uLy4uL25vZGVfbW9kdWxlcy9tb25nb29zZSIKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJEYXRhX3F1ZXJ5IiwKICAgIGNvbXBvbmVudHM6IHtEYXRhX2dyYXBofSwKICAgIGRhdGEoKXsKCiAgICAgICAgcmV0dXJuewoKICAgICAgICAgICAgZGF0YV9zZXJpZXM6W10KICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICBjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoIm1vbmdvb3NlIik7CiAgICAgICAgbW9uZ29vc2UuY29ubmVjdCgnbW9uZ29kYjovL2xvY2FsaG9zdC90ZXN0Jywge3VzZU5ld1VybFBhcnNlcjogdHJ1ZX0pOwogICAgICAgIGNvbnN0IGRiID0gbW9uZ29vc2UuY29ubmVjdGlvbjsKICAgICAgICBkYi5vbignZXJyb3InLCBjb25zb2xlLmVycm9yLmJpbmQoY29uc29sZSwgJ2Nvbm5lY3Rpb24gZXJyb3I6JykpOwogICAgICAgIGRiLm9uY2UoJ29wZW4nLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coIndlJ3JlIGNvbm5lY3RlZCEiKTsKICAgICAgICB9KTsKICAgIH0sCiAgICBtZXRob2RzOnsKCiAgICB9Cn0K"},{"version":3,"sources":["Data_query.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Data_query.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <b-card-group class=\"mt3\">\n            <b-card>\n                <Data_graph :data-series=\"data_series\"></Data_graph>\n            </b-card>\n        </b-card-group>\n    </div>\n</template>\n\n<script>\n    import Data_graph from \"./Data_graph\";\n    //import mongoose from \"../../node_modules/mongoose\"\n\n    export default {\n        name: \"Data_query\",\n        components: {Data_graph},\n        data(){\n\n            return{\n\n                data_series:[]\n            }\n        },\n        created() {\n            const mongoose = require(\"mongoose\");\n            mongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});\n            const db = mongoose.connection;\n            db.on('error', console.error.bind(console, 'connection error:'));\n            db.once('open', function() {\n                console.log(\"we're connected!\");\n            });\n        },\n        methods:{\n\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}