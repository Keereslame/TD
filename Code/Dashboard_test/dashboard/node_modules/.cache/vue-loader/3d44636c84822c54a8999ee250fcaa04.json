{"remainingRequest":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Humidity_lht65.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Humidity_lht65.vue","mtime":1594889463849},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBIdW1pZGl0eV9MaW5lX0VDaGFydHMgZnJvbSAiLi4vY29tcG9uZW50cy9IdW1pZGl0eV9MaW5lX0VDaGFydHMiOwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7CmltcG9ydCBJbmZsdXggZnJvbSAiaW5mbHV4IjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJIdW1pZGl0eV9saHQ2NSIsCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgSHVtaWRpdHlfTGluZV9FQ2hhcnRzCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBjbGllbnQ6IG5ldyBJbmZsdXguSW5mbHV4REIoewogICAgICAgICAgICAgICAgaG9zdDogJzE5Mi4xNjguMS43MCcsCiAgICAgICAgICAgICAgICBkYXRhYmFzZTogJ2xvd2ltcGFjdF9mb29kJywKICAgICAgICAgICAgICAgIHBvcnQ6ODA4NgogICAgICAgICAgICB9KSwKICAgICAgICAgICAgaHVtX3NlcmllczogW10sCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBsb2FkRGF0YUNoYXJ0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxldCBodW1pZGl0eV9TZXJpZTE7CiAgICAgICAgICAgIGxldCBxdWVyeV9odW1TZXJpZTEgPSAnU0VMRUNUIEh1bV9TSFQgRlJPTSB0dG5fbGh0NjUgJzsgLy9XSEVSRSB0aW1lID4gbm93KCkgLSA3ZCc7CiAgICAgICAgICAgIC8vY29uc29sZS5sb2coIlF1ZXJ5OiIgKyBxdWVyeV9odW1TZXJpZTEpCiAgICAgICAgICAgIFByb21pc2UuYWxsKFsKICAgICAgICAgICAgICAgIHRoaXMuY2xpZW50LnF1ZXJ5KHF1ZXJ5X2h1bVNlcmllMSksCiAgICAgICAgICAgIF0pLnRoZW4ocmVzdWx0cyA9PiB7CiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCJSZXN1bHQiKQogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXN1bHRzKQogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXN1bHRzWzBdLmxlbmd0aCkKICAgICAgICAgICAgICAgIGh1bWlkaXR5X1NlcmllMSA9IHJlc3VsdHNbMF0ubWFwKGEgPT4gewogICAgICAgICAgICAgICAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoKyhtb21lbnQoYS50aW1lKS51bml4KCkpICogMTAwMCkKICAgICAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBkYXRlLnRvU3RyaW5nKCksCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbZGF0ZS5nZXRGdWxsWWVhcigpLCBkYXRlLmdldE1vbnRoKCksIGRhdGUuZ2V0RGF0ZSgpXS5qb2luKCcvJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhLkh1bV9TSFQKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9KTsKCgogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygiSHVtaWRpdHkgc2VyaWUgMSIpCiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGh1bWlkaXR5X1NlcmllMSkKICAgICAgICAgICAgICAgIGxldCBmaW5hbGVfc2VyaWVzID0gewogICAgICAgICAgICAgICAgICAgIG5hbWU6ICdIdW1pZGl0w6kgZHUgYm/DrnRpZXInLAogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiBodW1pZGl0eV9TZXJpZTEKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coIlNlcmllIGZpbmFsZSIpCiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGZpbmFsZV9zZXJpZXMpCiAgICAgICAgICAgICAgICB0aGlzLmh1bV9zZXJpZXMgPSBmaW5hbGVfc2VyaWVzCiAgICAgICAgICAgIH0pLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSkKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLmxvYWREYXRhQ2hhcnQoKQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXsKICAgICAgICAgICAgdGhpcy5sb2FkRGF0YUNoYXJ0KCkKICAgICAgICB9LmJpbmQodGhpcyksIDMwMDAwMCkgLy9yZWZyZXNoIHF1ZXJ5IHRvdXRlcyBsZXMgNW1pbgogICAgfQp9Cg=="},{"version":3,"sources":["Humidity_lht65.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Humidity_lht65.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"mt-3\">\n        <b-card border-variant=\"light\" header=\"Humidité de la chambre\" class=\"text-center\">\n            <Humidity_Line_ECharts :humidity-series=\"hum_series\"/>\n        </b-card>\n    </div>\n</template>\n\n<script>\n    import Humidity_Line_ECharts from \"../components/Humidity_Line_ECharts\";\n    import moment from 'moment';\n    import Influx from \"influx\";\n\n    export default {\n        name: \"Humidity_lht65\",\n        components: {\n            Humidity_Line_ECharts\n        },\n        data() {\n            return {\n                client: new Influx.InfluxDB({\n                    host: '192.168.1.70',\n                    database: 'lowimpact_food',\n                    port:8086\n                }),\n                hum_series: [],\n            }\n        },\n        methods: {\n            loadDataChart: function () {\n                let humidity_Serie1;\n                let query_humSerie1 = 'SELECT Hum_SHT FROM ttn_lht65 '; //WHERE time > now() - 7d';\n                //console.log(\"Query:\" + query_humSerie1)\n                Promise.all([\n                    this.client.query(query_humSerie1),\n                ]).then(results => {\n                    //console.log(\"Result\")\n                    //console.log(results)\n                    //console.log(results[0].length)\n                    humidity_Serie1 = results[0].map(a => {\n                        var date = new Date(+(moment(a.time).unix()) * 1000)\n                        return {\n                            name: date.toString(),\n                            value: [\n                                [date.getFullYear(), date.getMonth(), date.getDate()].join('/'),\n                                a.Hum_SHT\n                            ]\n                        };\n                    });\n\n\n                    //console.log(\"Humidity serie 1\")\n                    //console.log(humidity_Serie1)\n                    let finale_series = {\n                        name: 'Humidité du boîtier',\n                        type: 'line',\n                        data: humidity_Serie1\n                    }\n                    //console.log(\"Serie finale\")\n                    //console.log(finale_series)\n                    this.hum_series = finale_series\n                }).catch(error => console.log(error))\n            }\n        },\n        created() {\n            this.loadDataChart()\n        },\n        mounted() {\n            setInterval(function(){\n                this.loadDataChart()\n            }.bind(this), 300000) //refresh query toutes les 5min\n        }\n    }\n</script>\n\n<style scoped>\n    .card-header{\n        background-color: lightcoral;\n        text-align: left;\n    }\n\n</style>"]}]}