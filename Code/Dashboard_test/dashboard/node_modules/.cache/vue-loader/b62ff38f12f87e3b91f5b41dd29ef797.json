{"remainingRequest":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Temperature_lht65.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Temperature_lht65.vue","mtime":1596122892615},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgSW5mbHV4IGZyb20gImluZmx1eCI7CmltcG9ydCBUZW1wX2xpbmVfaGlnaGNoYXJ0cyBmcm9tICIuL1RlbXBfbGluZV9oaWdoY2hhcnRzIjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJUZW1wX2xodDY1IiwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBUZW1wX2xpbmVfaGlnaGNoYXJ0cwogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgY2xpZW50OiBuZXcgSW5mbHV4LkluZmx1eERCKHsKICAgICAgICAgICAgICAgIGhvc3Q6ICcxOTIuMTY4LjEuNzAnLCAvLyBtYWlzb24KICAgICAgICAgICAgICAgIC8vaG9zdDogJzE1My4xMDkuNy4zMCcsICAgLy/DqWNvbGUKICAgICAgICAgICAgICAgIGRhdGFiYXNlOiAnbG93aW1wYWN0X2Zvb2QnLAogICAgICAgICAgICAgICAgcG9ydDo4MDg2CiAgICAgICAgICAgIH0pLAogICAgICAgICAgICB0ZW1wX3NlcmllczogW10sCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBsb2FkRGF0YUNoYXJ0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxldCB0ZW1wZXJhdHVyZV9TZXJpZTE7CiAgICAgICAgICAgIGxldCB0ZW1wZXJhdHVyZV9TZXJpZTI7CiAgICAgICAgICAgIGxldCBxdWVyeV90ZW1wU2VyaWUxID0gJ1NFTEVDVCBUZW1wQ19TSFQgRlJPTSB0dG5fbGh0NjUgV0hFUkUgdGltZSA+IG5vdygpIC0gN2gnOwogICAgICAgICAgICBsZXQgcXVlcnlfdGVtcFNlcmllMiA9ICdTRUxFQ1QgVGVtcENfRFMgRlJPTSB0dG5fbGh0NjUgV0hFUkUgdGltZSA+IG5vdygpIC0gN2gnOwogICAgICAgICAgICAvL2NvbnNvbGUubG9nKCJRdWVyeToiICsgcXVlcnlfdGVtcFNlcmllMSkKICAgICAgICAgICAgUHJvbWlzZS5hbGwoWwogICAgICAgICAgICAgICAgdGhpcy5jbGllbnQucXVlcnkocXVlcnlfdGVtcFNlcmllMSksCiAgICAgICAgICAgIF0pLnRoZW4ocmVzdWx0cyA9PiB7CiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCJSZXN1bHQiKQogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXN1bHRzKQogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXN1bHRzWzBdLmxlbmd0aCkKICAgICAgICAgICAgICAgIHRlbXBlcmF0dXJlX1NlcmllMSA9IHJlc3VsdHNbMF0ubWFwKGEgPT4gewogICAgICAgICAgICAgICAgICAgIC8vdmFyIGRhdGUgPSBuZXcgRGF0ZSgobW9tZW50KGEudGltZSkudW5peCgpKSAqIDEwMDApCiAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhhLnRpbWUpCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgeDogYS50aW1lLC8vKG1vbWVudChhLnRpbWUpLnVuaXgoKSkqMTAwMCwKICAgICAgICAgICAgICAgICAgICAgICAgeTogcGFyc2VGbG9hdChhLlRlbXBDX1NIVCkKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBQcm9taXNlLmFsbChbCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGllbnQucXVlcnkocXVlcnlfdGVtcFNlcmllMiksCiAgICAgICAgICAgICAgICBdKS50aGVuKHJlc3VsdHMgPT4gewogICAgICAgICAgICAgICAgICAgIHRlbXBlcmF0dXJlX1NlcmllMiA9IHJlc3VsdHNbMF0ubWFwKGEgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAvLyB2YXIgZGF0ZSA9IG5ldyBEYXRlKChtb21lbnQoYS50aW1lKS51bml4KCkpICogMTAwMCkKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHg6YS50aW1lLC8vKG1vbWVudChhLnRpbWUpLnVuaXgoKSkqMTAwMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHk6IHBhcnNlRmxvYXQoYS5UZW1wQ19EUykKICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygiVGVtcGVyYXR1cmUgc2VyaWUgMSIpCiAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh0ZW1wZXJhdHVyZV9TZXJpZTEpCiAgICAgICAgICAgICAgICAgICAgbGV0IGZpbmFsZV9zZXJpZXMgPSBbewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnVGVtcMOpcmF0dXJlIGR1IGJvw650aWVyJywKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogdGVtcGVyYXR1cmVfU2VyaWUxLAogICAgICAgICAgICAgICAgICAgICAgICBzaG93TmF2aWdhdG9yOiB0cnVlLAogICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ1RlbXDDqXJhdHVyZSBkZSBsYSBzb25kZScsCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHRlbXBlcmF0dXJlX1NlcmllMiwKICAgICAgICAgICAgICAgICAgICAgICAgc2hvd05hdmlnYXRvcjogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coIlNlcmllIGZpbmFsZSIpCiAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhmaW5hbGVfc2VyaWVzKQogICAgICAgICAgICAgICAgICAgIHRoaXMudGVtcF9zZXJpZXMgPSBmaW5hbGVfc2VyaWVzCiAgICAgICAgICAgICAgICB9KS5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpCiAgICAgICAgICAgIH0pLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSkKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLmxvYWREYXRhQ2hhcnQoKQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXsKICAgICAgICAgICAgdGhpcy5sb2FkRGF0YUNoYXJ0KCkKICAgICAgICB9LmJpbmQodGhpcyksIDMwMDAwMCkgLy9yZWZyZXNoIHF1ZXJ5IHRvdXRlcyBsZXMgNW1pbgogICAgfQp9Cg=="},{"version":3,"sources":["Temperature_lht65.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Temperature_lht65.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"mt-3\">\n        <b-card border-variant=\"light\" header=\"Température de la chambre\" class=\"text-center\">\n            <Temp_line_highcharts :temperature-series=\"temp_series\"/>\n        </b-card>\n    </div>\n</template>\n\n<script>\n    //import moment from 'moment';\n    import Influx from \"influx\";\n    import Temp_line_highcharts from \"./Temp_line_highcharts\";\n\n    export default {\n        name: \"Temp_lht65\",\n        components: {\n            Temp_line_highcharts\n        },\n        data() {\n            return {\n                client: new Influx.InfluxDB({\n                    host: '192.168.1.70', // maison\n                    //host: '153.109.7.30',   //école\n                    database: 'lowimpact_food',\n                    port:8086\n                }),\n                temp_series: [],\n            }\n        },\n        methods: {\n            loadDataChart: function () {\n                let temperature_Serie1;\n                let temperature_Serie2;\n                let query_tempSerie1 = 'SELECT TempC_SHT FROM ttn_lht65 WHERE time > now() - 7h';\n                let query_tempSerie2 = 'SELECT TempC_DS FROM ttn_lht65 WHERE time > now() - 7h';\n                //console.log(\"Query:\" + query_tempSerie1)\n                Promise.all([\n                    this.client.query(query_tempSerie1),\n                ]).then(results => {\n                    //console.log(\"Result\")\n                    //console.log(results)\n                    //console.log(results[0].length)\n                    temperature_Serie1 = results[0].map(a => {\n                        //var date = new Date((moment(a.time).unix()) * 1000)\n                        //console.log(a.time)\n                        return {\n                            x: a.time,//(moment(a.time).unix())*1000,\n                            y: parseFloat(a.TempC_SHT)\n                        };\n                    });\n                    Promise.all([\n                        this.client.query(query_tempSerie2),\n                    ]).then(results => {\n                        temperature_Serie2 = results[0].map(a => {\n                            // var date = new Date((moment(a.time).unix()) * 1000)\n                            return {\n                                x:a.time,//(moment(a.time).unix())*1000,\n                                y: parseFloat(a.TempC_DS)\n                            };\n                        });\n\n                        //console.log(\"Temperature serie 1\")\n                        //console.log(temperature_Serie1)\n                        let finale_series = [{\n                            name: 'Température du boîtier',\n                            data: temperature_Serie1,\n                            showNavigator: true,\n                        }, {\n                            name: 'Température de la sonde',\n                            data: temperature_Serie2,\n                            showNavigator: true,\n                        }]\n                        //console.log(\"Serie finale\")\n                        //console.log(finale_series)\n                        this.temp_series = finale_series\n                    }).catch(error => console.log(error))\n                }).catch(error => console.log(error))\n            }\n        },\n        created() {\n            this.loadDataChart()\n        },\n        mounted() {\n            setInterval(function(){\n                this.loadDataChart()\n            }.bind(this), 300000) //refresh query toutes les 5min\n        }\n    }\n</script>\n\n<style scoped>\n    .card-header{\n        background-color: lightcoral;\n        text-align: left;\n    }\n\n</style>"]}]}