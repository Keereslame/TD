{"remainingRequest":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Temp_line_highcharts.vue?vue&type=style&index=0&id=1519c032&scoped=true&lang=css&","dependencies":[{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Temp_line_highcharts.vue","mtime":1594931876965},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc3RvY2sgewogICAgd2lkdGg6IGF1dG87IC8qYXV0byovCn0K"},{"version":3,"sources":["Temp_line_highcharts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA;AACA","file":"Temp_line_highcharts.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <highcharts class=\"stock\" :constructor-typ=\"'stockChart'\" :options=\"stockOptions\" id=\"temp_charts\"></highcharts>\n</template>\n\n<script>\n    export default {\n        props: [\n            'temperatureSeries'\n        ],\n        data() {\n            return {\n                stockOptions : {\n                    chart: {\n                        events: {\n                            load: function () {\n\n                                // set up the updating of the chart each second\n                                var series = this.series[0];\n                                setInterval(function () {\n                                    var x = (new Date()).getTime(), // current time\n                                        y = Math.round(Math.random() * 100);\n                                    series.addPoint([x, y], true, true);\n                                }, 300000);\n                            }\n                        },\n                        zoomType: 'x'\n                    },\n                    time: {\n                        useUTC: false\n                    },\n                    rangeSelector: {\n                        buttons: [{\n                            count: 1,\n                            type: 'minute',\n                            text: '1M'\n                        }, {\n                            count: 5,\n                            type: 'minute',\n                            text: '5M'\n                        }, {\n                            type: 'all',\n                            text: 'All'\n                        }],\n                        inputEnabled: false,\n                        selected: 0\n                    },\n                    title: {\n                        text: 'Température du lht65'\n                    },\n                    exporting: {\n                        enabled: false\n                    },\n                    tooltip: {\n                        pointFormat: '{series.name}: <b>{point.y:.1f}°C</b><br/>'\n                    },\n                    series: [{\n                        name: 'Random data',\n                        data: (function () {\n                            // generate an array of random data\n                            var data = [],\n                                time = (new Date()).getTime(),\n                                i;\n\n                            for (i = -999; i <= 0; i += 1) {\n                                data.push([\n                                    time + i * 1000,\n                                    Math.round(Math.random() * 100)\n                                ]);\n                            }\n                            return data;\n                        }())\n                    }],\n                },\n\n            }\n        },\n        watch: {\n            temperatureSeries(newSeries){\n                this.stockOptions.series = newSeries\n            }\n        },\n    }\n\n</script>\n\n<style scoped>\n    .stock {\n        width: auto; /*auto*/\n    }\n</style>\n"]}]}