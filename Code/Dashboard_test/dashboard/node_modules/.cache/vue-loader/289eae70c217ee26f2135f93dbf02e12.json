{"remainingRequest":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Humidity_lht65.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Humidity_lht65.vue","mtime":1595232008975},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgSW5mbHV4IGZyb20gImluZmx1eCI7CmltcG9ydCBIdW1pZGl0eV9saW5lX2hpZ2hjaGFydHMgZnJvbSAiLi9IdW1pZGl0eV9saW5lX2hpZ2hjaGFydHMiOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIkh1bWlkaXR5X2xodDY1IiwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBIdW1pZGl0eV9saW5lX2hpZ2hjaGFydHMsCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBjbGllbnQ6IG5ldyBJbmZsdXguSW5mbHV4REIoewogICAgICAgICAgICAgICAgLy9ob3N0OiAnMTkyLjE2OC4xLjcwJywgLy8gbWFpc29uCiAgICAgICAgICAgICAgICBob3N0OiAnMTUzLjEwOS43LjMwJywgICAvL8OpY29sZQogICAgICAgICAgICAgICAgZGF0YWJhc2U6ICdsb3dpbXBhY3RfZm9vZCcsCiAgICAgICAgICAgICAgICBwb3J0OjgwODYKICAgICAgICAgICAgfSksCiAgICAgICAgICAgIGh1bV9zZXJpZXM6IFtdLAogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgbG9hZERhdGFDaGFydDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICBsZXQgaHVtaWRpdHlfU2VyaWUxOwogICAgICAgICAgICBsZXQgcXVlcnlfaHVtU2VyaWUxID0gJ1NFTEVDVCBIdW1fU0hUIEZST00gdHRuX2xodDY1IFdIRVJFIHRpbWUgPiBub3coKSAtIDdoJzsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZygiUXVlcnk6IiArIHF1ZXJ5X2h1bVNlcmllMSkKICAgICAgICAgICAgUHJvbWlzZS5hbGwoWwogICAgICAgICAgICAgICAgdGhpcy5jbGllbnQucXVlcnkocXVlcnlfaHVtU2VyaWUxKSwKICAgICAgICAgICAgXSkudGhlbihyZXN1bHRzID0+IHsKICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coIlJlc3VsdCIpCiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKHJlc3VsdHMpCiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKHJlc3VsdHNbMF0ubGVuZ3RoKQogICAgICAgICAgICAgICAgaHVtaWRpdHlfU2VyaWUxID0gcmVzdWx0c1swXS5tYXAoYSA9PiB7CiAgICAgICAgICAgICAgICAgICAgLy92YXIgZGF0ZSA9IG5ldyBEYXRlKCsobW9tZW50KGEudGltZSkudW5peCgpKSAqIDEwMDApCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgeDogYS50aW1lLAogICAgICAgICAgICAgICAgICAgICAgICB5OiBwYXJzZUZsb2F0KGEuSHVtX1NIVCkKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfSk7CgoKICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coIkh1bWlkaXR5IHNlcmllIDEiKQogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhodW1pZGl0eV9TZXJpZTEpCiAgICAgICAgICAgICAgICBsZXQgZmluYWxlX3NlcmllcyA9IHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnSHVtaWRpdMOpIGR1IGJvw650aWVyJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiBodW1pZGl0eV9TZXJpZTEKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coIlNlcmllIGZpbmFsZSIpCiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGZpbmFsZV9zZXJpZXMpCiAgICAgICAgICAgICAgICB0aGlzLmh1bV9zZXJpZXMgPSBmaW5hbGVfc2VyaWVzCiAgICAgICAgICAgIH0pLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSkKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLmxvYWREYXRhQ2hhcnQoKQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXsKICAgICAgICAgICAgdGhpcy5sb2FkRGF0YUNoYXJ0KCkKICAgICAgICB9LmJpbmQodGhpcyksIDMwMDAwMCkgLy9yZWZyZXNoIHF1ZXJ5IHRvdXRlcyBsZXMgNW1pbgogICAgfQp9Cg=="},{"version":3,"sources":["Humidity_lht65.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Humidity_lht65.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"mt-3\">\n        <b-card border-variant=\"light\" header=\"Humidité de la chambre\" class=\"text-center\">\n            <Humidity_line_highcharts :humidity-series=\"hum_series\"/>\n        </b-card>\n    </div>\n</template>\n\n<script>\n    //import moment from 'moment';\n    import Influx from \"influx\";\n    import Humidity_line_highcharts from \"./Humidity_line_highcharts\";\n\n    export default {\n        name: \"Humidity_lht65\",\n        components: {\n            Humidity_line_highcharts,\n        },\n        data() {\n            return {\n                client: new Influx.InfluxDB({\n                    //host: '192.168.1.70', // maison\n                    host: '153.109.7.30',   //école\n                    database: 'lowimpact_food',\n                    port:8086\n                }),\n                hum_series: [],\n            }\n        },\n        methods: {\n            loadDataChart: function () {\n                let humidity_Serie1;\n                let query_humSerie1 = 'SELECT Hum_SHT FROM ttn_lht65 WHERE time > now() - 7h';\n                //console.log(\"Query:\" + query_humSerie1)\n                Promise.all([\n                    this.client.query(query_humSerie1),\n                ]).then(results => {\n                    //console.log(\"Result\")\n                    //console.log(results)\n                    //console.log(results[0].length)\n                    humidity_Serie1 = results[0].map(a => {\n                        //var date = new Date(+(moment(a.time).unix()) * 1000)\n                        return {\n                            x: a.time,\n                            y: parseFloat(a.Hum_SHT)\n                        };\n                    });\n\n\n                    //console.log(\"Humidity serie 1\")\n                    //console.log(humidity_Serie1)\n                    let finale_series = {\n                        name: 'Humidité du boîtier',\n                        data: humidity_Serie1\n                    }\n                    //console.log(\"Serie finale\")\n                    //console.log(finale_series)\n                    this.hum_series = finale_series\n                }).catch(error => console.log(error))\n            }\n        },\n        created() {\n            this.loadDataChart()\n        },\n        mounted() {\n            setInterval(function(){\n                this.loadDataChart()\n            }.bind(this), 300000) //refresh query toutes les 5min\n        }\n    }\n</script>\n\n<style scoped>\n    .card-header{\n        background-color: lightcoral;\n        text-align: left;\n    }\n\n</style>"]}]}