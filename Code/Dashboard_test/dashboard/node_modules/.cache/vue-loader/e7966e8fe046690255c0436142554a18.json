{"remainingRequest":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Temperature_Line_ECharts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Temperature_Line_ECharts.vue","mtime":1594741397242},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBFQ2hhcnRzIGZyb20gInZ1ZS1lY2hhcnRzIjsKaW1wb3J0ICJlY2hhcnRzL2xpYi9jaGFydC9saW5lIjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICAidi1jaGFydCI6IEVDaGFydHMKICAgIH0sCiAgICBwcm9wczogWwogICAgICAgICd0ZW1wZXJhdHVyZVNlcmllcycKICAgIF0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHRlbXBlcmF0dXJlTGluZSA6IHsKICAgICAgICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgICAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOicnLAogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0dGVyOiAocGFyYW1zID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXMgPSBwYXJhbXNbMF07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShwYXJhbXMubmFtZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGUuZ2V0RGF0ZSgpICsgJy8nICsgKGRhdGUuZ2V0TW9udGgoKSArIDEpICsgJy8nICsgZGF0ZS5nZXRGdWxsWWVhcigpICsgJyA6ICcgKyBwYXJhbXMudmFsdWVbMV07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICAgICAgICAgICAgZmVhdHVyZTogewogICAgICAgICAgICAgICAgICAgICAgICBzYXZlQXNJbWFnZToge30KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgeEF4aXM6IHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAndGltZScsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgeUF4aXM6IFt7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJywKICAgICAgICAgICAgICAgIH0sewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICAgICAgICB9XSwKICAgICAgICAgICAgICAgIHNlcmllczogdGhpcy50ZW1wZXJhdHVyZVNlcmllcywKICAgICAgICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICAgICAgICAgIGRhdGE6W10KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKCiAgICAgICAgfQogICAgfSwKICAgIHdhdGNoOiB7CiAgICAgICAgdGVtcGVyYXR1cmVTZXJpZXMobmV3U2VyaWVzKXsKICAgICAgICAgICAgdGhpcy50ZW1wZXJhdHVyZUxpbmUuc2VyaWVzID0gbmV3U2VyaWVzCiAgICAgICAgfQogICAgfSwKfQoK"},{"version":3,"sources":["Temperature_Line_ECharts.vue"],"names":[],"mappings":";;;;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Temperature_Line_ECharts.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-chart :options=\"temperatureLine\"></v-chart>\n</template>\n\n<script>\n    import ECharts from \"vue-echarts\";\n    import \"echarts/lib/chart/line\";\n\n    export default {\n        components: {\n            \"v-chart\": ECharts\n        },\n        props: [\n            'temperatureSeries'\n        ],\n        data() {\n            return {\n                temperatureLine : {\n                    tooltip: {\n                        show: true,\n                        trigger: 'axis',\n                        axisPointer: {\n                            type:'',\n                            label: {\n                                formatter: (params => {\n                                    params = params[0];\n                                    var date = new Date(params.name);\n                                    return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\n                                })\n                            }\n                        },\n                    },\n                    toolbox: {\n                        feature: {\n                            saveAsImage: {}\n                        }\n                    },\n                    xAxis: {\n                        type: 'time',\n                    },\n                    yAxis: [{\n                        type: 'value',\n                    },{\n                        type: 'value',\n                    }],\n                    series: this.temperatureSeries,\n                    legend: {\n                        data:[]\n                    }\n                },\n\n            }\n        },\n        watch: {\n            temperatureSeries(newSeries){\n                this.temperatureLine.series = newSeries\n            }\n        },\n    }\n\n</script>\n\n<style scoped>\n    .echarts{\n        max-width: 100%;\n        height: 400px;\n    }\n</style>\n"]}]}