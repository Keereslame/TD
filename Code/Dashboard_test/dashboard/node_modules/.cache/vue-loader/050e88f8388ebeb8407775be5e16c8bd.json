{"remainingRequest":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Humidity_lht65.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/src/components/Humidity_lht65.vue","mtime":1594974839980},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/philippine/Documents/TD/Code/Dashboard_test/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgSW5mbHV4IGZyb20gImluZmx1eCI7CmltcG9ydCBIdW1pZGl0eV9saW5lX2hpZ2hjaGFydHMgZnJvbSAiLi9IdW1pZGl0eV9saW5lX2hpZ2hjaGFydHMiOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIkh1bWlkaXR5X2xodDY1IiwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBIdW1pZGl0eV9saW5lX2hpZ2hjaGFydHMsCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBjbGllbnQ6IG5ldyBJbmZsdXguSW5mbHV4REIoewogICAgICAgICAgICAgICAgaG9zdDogJzE5Mi4xNjguMS43MCcsCiAgICAgICAgICAgICAgICBkYXRhYmFzZTogJ2xvd2ltcGFjdF9mb29kJywKICAgICAgICAgICAgICAgIHBvcnQ6ODA4NgogICAgICAgICAgICB9KSwKICAgICAgICAgICAgaHVtX3NlcmllczogW10sCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBsb2FkRGF0YUNoYXJ0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxldCBodW1pZGl0eV9TZXJpZTE7CiAgICAgICAgICAgIGxldCBxdWVyeV9odW1TZXJpZTEgPSAnU0VMRUNUIEh1bV9TSFQgRlJPTSB0dG5fbGh0NjUgV0hFUkUgdGltZSA+IG5vdygpIC0gN2QnOwogICAgICAgICAgICAvL2NvbnNvbGUubG9nKCJRdWVyeToiICsgcXVlcnlfaHVtU2VyaWUxKQogICAgICAgICAgICBQcm9taXNlLmFsbChbCiAgICAgICAgICAgICAgICB0aGlzLmNsaWVudC5xdWVyeShxdWVyeV9odW1TZXJpZTEpLAogICAgICAgICAgICBdKS50aGVuKHJlc3VsdHMgPT4gewogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygiUmVzdWx0IikKICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2cocmVzdWx0cykKICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2cocmVzdWx0c1swXS5sZW5ndGgpCiAgICAgICAgICAgICAgICBodW1pZGl0eV9TZXJpZTEgPSByZXN1bHRzWzBdLm1hcChhID0+IHsKICAgICAgICAgICAgICAgICAgICAvL3ZhciBkYXRlID0gbmV3IERhdGUoKyhtb21lbnQoYS50aW1lKS51bml4KCkpICogMTAwMCkKICAgICAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgICAgICB4OiBhLnRpbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIHk6IHBhcnNlRmxvYXQoYS5IdW1fU0hUKQogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9KTsKCgogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygiSHVtaWRpdHkgc2VyaWUgMSIpCiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGh1bWlkaXR5X1NlcmllMSkKICAgICAgICAgICAgICAgIGxldCBmaW5hbGVfc2VyaWVzID0gewogICAgICAgICAgICAgICAgICAgIG5hbWU6ICdIdW1pZGl0w6kgZHUgYm/DrnRpZXInLAogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiBodW1pZGl0eV9TZXJpZTEKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coIlNlcmllIGZpbmFsZSIpCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhmaW5hbGVfc2VyaWVzKQogICAgICAgICAgICAgICAgdGhpcy5odW1fc2VyaWVzID0gZmluYWxlX3NlcmllcwogICAgICAgICAgICB9KS5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpCiAgICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy5sb2FkRGF0YUNoYXJ0KCkKICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIHNldEludGVydmFsKGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIHRoaXMubG9hZERhdGFDaGFydCgpCiAgICAgICAgfS5iaW5kKHRoaXMpLCAzMDAwMDApIC8vcmVmcmVzaCBxdWVyeSB0b3V0ZXMgbGVzIDVtaW4KICAgIH0KfQo="},{"version":3,"sources":["Humidity_lht65.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Humidity_lht65.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"mt-3\">\n        <b-card border-variant=\"light\" header=\"Humidité de la chambre\" class=\"text-center\">\n            <Humidity_line_highcharts :humidity-series=\"hum_series\"/>\n        </b-card>\n    </div>\n</template>\n\n<script>\n    //import moment from 'moment';\n    import Influx from \"influx\";\n    import Humidity_line_highcharts from \"./Humidity_line_highcharts\";\n\n    export default {\n        name: \"Humidity_lht65\",\n        components: {\n            Humidity_line_highcharts,\n        },\n        data() {\n            return {\n                client: new Influx.InfluxDB({\n                    host: '192.168.1.70',\n                    database: 'lowimpact_food',\n                    port:8086\n                }),\n                hum_series: [],\n            }\n        },\n        methods: {\n            loadDataChart: function () {\n                let humidity_Serie1;\n                let query_humSerie1 = 'SELECT Hum_SHT FROM ttn_lht65 WHERE time > now() - 7d';\n                //console.log(\"Query:\" + query_humSerie1)\n                Promise.all([\n                    this.client.query(query_humSerie1),\n                ]).then(results => {\n                    //console.log(\"Result\")\n                    //console.log(results)\n                    //console.log(results[0].length)\n                    humidity_Serie1 = results[0].map(a => {\n                        //var date = new Date(+(moment(a.time).unix()) * 1000)\n                        return {\n                            x: a.time,\n                            y: parseFloat(a.Hum_SHT)\n                        };\n                    });\n\n\n                    //console.log(\"Humidity serie 1\")\n                    //console.log(humidity_Serie1)\n                    let finale_series = {\n                        name: 'Humidité du boîtier',\n                        type: 'line',\n                        data: humidity_Serie1\n                    }\n                    //console.log(\"Serie finale\")\n                    console.log(finale_series)\n                    this.hum_series = finale_series\n                }).catch(error => console.log(error))\n            }\n        },\n        created() {\n            this.loadDataChart()\n        },\n        mounted() {\n            setInterval(function(){\n                this.loadDataChart()\n            }.bind(this), 300000) //refresh query toutes les 5min\n        }\n    }\n</script>\n\n<style scoped>\n    .card-header{\n        background-color: lightcoral;\n        text-align: left;\n    }\n\n</style>"]}]}